<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jeff's Skinner Box</title><link>http://jeffskinnerbox.me/</link><description></description><atom:link href="http://jeffskinnerbox.me/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 31 Mar 2014 21:23:00 -0400</lastBuildDate><item><title>HowTo: Linux Maintenance and Filesystem Hygiene</title><link>http://jeffskinnerbox.me/posts/2014/Mar/31/howto-linux-maintenance-and-filesystem-hygiene/</link><description>&lt;p&gt;What kind of maintenance does one need to do on an Ubuntu / Debian / Raspberry Pi Linux distributions?
Defrag the drive, clean your registry, update antivirus, etc. just like you need to in Windows?
None of this is needed in Linux but there is some recommend ifilesystem hygiene you should be&amp;nbsp;doing.&lt;/p&gt;
&lt;h2&gt;Gather&amp;nbsp;Information&lt;/h2&gt;
&lt;p&gt;For some of the maintenance activities listed here, you&amp;#8217;re going to need some basic information.
This next section shows you how to get that&amp;nbsp;information. &lt;/p&gt;
&lt;h4&gt;Distribution Name and&amp;nbsp;Version&lt;/h4&gt;
&lt;p&gt;To determine which Linux version / build / release / distribution you are&amp;nbsp;running:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# kernel name and release
uname -sr

# kernel version
uname -v

# Linux distribution
cat /etc/*-release
lsb_release -a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use the following command to get a listing of all the physical hard drives
(and virutal drives) on the&amp;nbsp;system:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;hwinfo --disk --short
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For the Raspberry Pi, you can list the installed firmware version&amp;nbsp;via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;/opt/vc/bin/vcgencmd version
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;span class="caps"&gt;OS&lt;/span&gt; and Application&amp;nbsp;Maintenance&lt;/h2&gt;
&lt;p&gt;You should periodically update your Linux operating system (&lt;span class="caps"&gt;OS&lt;/span&gt;)
and its&amp;nbsp;applications.&lt;/p&gt;
&lt;h4&gt;Install Operating System and Application&amp;nbsp;Patches/Updates&lt;/h4&gt;
&lt;p&gt;This will patch the Linux operating system and all its &lt;span class="caps"&gt;GPL&lt;/span&gt;&amp;nbsp;applications &lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get update; sudo apt-get dist-upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Updating Firmware for Raspberry&amp;nbsp;Pi&lt;/h4&gt;
&lt;p&gt;In the case of the Raspberry Pi (RPi), you will want to also upgrade the firmware regularly.
&lt;a href="http://www.raspbian.org/"&gt;Raspbian&lt;/a&gt; is the standard Linux operating system distribution for the RPi,
but it doesn&amp;#8217;t include firmware.
Never the less, tools for updating the firmware are included in the Raspbian distribution of Linux.
That tool is &lt;code&gt;sudo apt-get install rpi-update&lt;/code&gt;.
I&amp;#8217;m using the &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Adafruit&amp;#8217;s Occidentalis distribution&lt;/a&gt;, so this requires a
&lt;a href="https://github.com/Hexxeh/rpi-update"&gt;slightly different update tool&lt;/a&gt; (&lt;code&gt;git&lt;/code&gt; needs to be&amp;nbsp;installed):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo wget https://raw.github.com/Hexxeh/rpi-update/master/rpi-update -O /usr/bin/rpi-update
sudo chmod +x /usr/bin/rpi-update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once the tool has been installed, periodically you can update the firmware via these&amp;nbsp;commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo BRANCH=next rpi-update
sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that once the firmware has been sucessfully updated,
you&amp;#8217;ll need to reboot to load the new&amp;nbsp;firmware.&lt;/p&gt;
&lt;h2&gt;Filesystem&amp;nbsp;Maintenance&lt;/h2&gt;
&lt;p&gt;Filesystems and disks should be check to make sure they are not running low on resources
and are not showing any signs of pending&amp;nbsp;failure.&lt;/p&gt;
&lt;h4&gt;Check Storage and Inode&amp;nbsp;Usage&lt;/h4&gt;
&lt;p&gt;If you let some directories get really full, like above 95% full, you will see some serious system problems.
Check on the status of directory systems storage space and inode&amp;nbsp;usage:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;df
df -i
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Disk and Filesystems&amp;nbsp;Integrity&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://sourceforge.net/apps/trac/smartmontools/wiki"&gt;Smartmontools&lt;/a&gt; is a set of applications that can test hard drives
and read their hardware &lt;span class="caps"&gt;SMART&lt;/span&gt; statistics (install with &lt;code&gt;sudo apt-get install smartmontools&lt;/code&gt;).
To ensure that your drive supports &lt;a href="http://en.wikipedia.org/wiki/S.M.A.R.T."&gt;&lt;span class="caps"&gt;SMART&lt;/span&gt;&lt;/a&gt;, type the following for each physical&amp;nbsp;drive:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo smartctl -i /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If &lt;code&gt;smartctl&lt;/code&gt; can access the drive, you should turn on some &lt;span class="caps"&gt;SMART&lt;/span&gt; features.
I ran the following command on my three drives (example for the &lt;code&gt;/dev/sda&lt;/code&gt; drive):&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo smartctl -s on -o on -S on /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check the disk&amp;#8217;s overall&amp;nbsp;health:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo smartctl -H /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If it doesn’t return &lt;span class="caps"&gt;PASSED&lt;/span&gt;, you should immediately backup all your data.
A short, but more extensive test&amp;nbsp;is&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo smartctl -t short /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can do a long self-test, but this can take a significant amount of time.
You might want to run it overnight and check for the results in the&amp;nbsp;morning.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo smartctl -t long /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To check results, run the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo smartctl -l selftest /dev/sda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unfortunately, there’s no way to check progress, so just keep running that command until the results show up.
 If either test fails, you should immediately backup all your data.
Depending on the error, your drive might be close to death or it may still have a long life ahead.
Consult the &lt;a href="http://sourceforge.net/apps/trac/smartmontools/wiki/FAQ"&gt;smartmontools &lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We’ve now enabled some features and run the basic tests.
Instead of repeating the previous section daily, we can setup &lt;code&gt;smartd&lt;/code&gt; to do it all automatically.
Via the demon, you can run Smartmontools in the background,
have it check drives, and email you when there are issues.
See the Sources below to figure out what needs to be done to setup the &lt;code&gt;smartd&lt;/code&gt; demon.&lt;/p&gt;
&lt;h2&gt;Clean-Up&lt;/h2&gt;
&lt;p&gt;Linux will leave some clutter around in the filesystem.
While generally not a problem, it can eat-up disk space,
and can become a problem for the &lt;code&gt;/boot&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4&gt;Clean-Up Temporary&amp;nbsp;Files&lt;/h4&gt;
&lt;p&gt;Some editors (like vim) may leave files ending with a ‘~&amp;#8217; character laying around.
You can clean them up under your &lt;code&gt;$HOME&lt;/code&gt; as a normal user
(You can do it for the entire system as root, but that can be extremely dangerous.)
Use the command below to get a list of&amp;nbsp;candidates:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;find $HOME -type f -name &amp;quot;*~&amp;quot; -print
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that appears to do what you want, add the -exec&amp;nbsp;part.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;find $HOME -type f -name &amp;quot;*~&amp;quot; -print -exec rm {} \;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Kernel crashes, when they happen, write the core dump files under &lt;code&gt;/var&lt;/code&gt;.
Assuming you aren&amp;#8217;t saving them for debugging, you can do this to get a&amp;nbsp;listing:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo find /var -type f -name &amp;quot;core&amp;quot; -print
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some applications create temporary files in their own&amp;nbsp;directories: &lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;rm -rf ${HOME}/.macromedia/* ${HOME}/.adobe/*
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Clean-Up Old Log&amp;nbsp;Files&lt;/h4&gt;
&lt;p&gt;You can also remove old compress log files from the system&amp;nbsp;with&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rm -v /var/log/*.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Clean-Up Installation&amp;nbsp;Packages&lt;/h4&gt;
&lt;p&gt;To remove partual packages, clean the cache, remove unused dependancies&amp;nbsp;use:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get autoclean
sudo apt-get clean
sudo apt-get autoremove
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Clean-Up Old Kernel&amp;nbsp;Packages&lt;/h4&gt;
&lt;p&gt;You also need to do something similar for kernel installations.
You&amp;#8217;ll find the amount of space being used by the current kernel
and old kernel installation packages in &lt;code&gt;/boot&lt;/code&gt; by&amp;nbsp;running:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;df -h /boot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The current Linux kernel installation (and the one you most definitely must keep)
can be identified&amp;nbsp;via:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;uname -r
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run the following command to list all packages that you no longer&amp;nbsp;need:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;dpkg -l &amp;#39;linux-*&amp;#39; | sed &amp;#39;/^ii/!d;/&amp;#39;&amp;quot;$(uname -r | sed &amp;quot;s/\(.*\)-\([^0-9]\+\)/\1/&amp;quot;)&amp;quot;&amp;#39;/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use the above command to permanently delete &lt;strong&gt;&lt;span class="caps"&gt;ALL&lt;/span&gt;&lt;/strong&gt; older&amp;nbsp;kernels:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get remove --purge $(dpkg -l &amp;#39;linux-*&amp;#39; | sed &amp;#39;/^ii/!d;/&amp;#39;&amp;quot;$(uname -r | sed &amp;quot;s/\(.*\)-\([^0-9]\+\)/\1/&amp;quot;)&amp;quot;&amp;#39;/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However this &lt;strong&gt;may not be wise&lt;/strong&gt;, as you should &lt;strong&gt;always&lt;/strong&gt;
have an old kernel or two to fall back to
(just in case the new one doesn&amp;#8217;t work with your system).
At the very least, if you&amp;#8217;ve just upgraded the kernel,
reboot before deleting the older&amp;nbsp;versions.&lt;/p&gt;
&lt;p&gt;And if you happend to blow away all the kernel images (as I have done more than once),
get your current kernel verison back by executing &lt;code&gt;uname -r&lt;/code&gt; and then reinstall it&amp;nbsp;with:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install linux-image-x.x.x-xx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;x.x.x-xx&lt;/code&gt; is the kernel version number give by the &lt;code&gt;uname -r&lt;/code&gt; command.&lt;/p&gt;
&lt;h2&gt;When the Hard Disk Goes&amp;nbsp;South&lt;/h2&gt;
&lt;p&gt;For basic disk errors, you could try letting Linux heal itself with &lt;code&gt;fsck&lt;/code&gt; at boot up.
To do this, shut down the system with the -F option like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo shutdown -r -F now
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Linux reboots immediately and looks for disk errors with the &lt;a href="http://linux.die.net/man/8/fsck"&gt;&lt;code&gt;fsck&lt;/code&gt;&lt;/a&gt; command.
Confirm fixing disk errors by pressing &amp;#8220;y&amp;#8221; and &amp;#8220;Enter&amp;#8221; if&amp;nbsp;prompted.&lt;/p&gt;
&lt;p&gt;If this fails, read these articals &amp;#8220;&lt;a href="http://www.linuxjournal.com/article/193?page=0,0"&gt;Disk Maintenance under Linux (Disk Recovery&lt;/a&gt;&amp;#8220;,
&lt;a href="http://www.dedoimedo.com/computers/linux-data-recovery.html"&gt;How to recover partitions and data using Linux - Tutorial&lt;/a&gt;,
and then follow the instructions&amp;nbsp;carefully!&lt;/p&gt;
&lt;h2&gt;Sources&lt;/h2&gt;
&lt;p&gt;I consulted the following sources to create this&amp;nbsp;posting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/194651/why-use-apt-get-upgrade-instead-of-apt-get-dist-upgrade"&gt;Why use apt-get upgrade instead of apt-get&amp;nbsp;dist-upgrade?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lifehacker.com/5817282/what-kind-of-maintenance-do-i-need-to-do-on-my-linux-pc"&gt;What Kind of Maintenance Do I Need to Do On My Linux &lt;span class="caps"&gt;PC&lt;/span&gt;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/81042/is-system-cleanup-optimization-needed"&gt;Is system cleanup/optimization&amp;nbsp;needed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxjournal.com/article/193?page=0,0"&gt;Disk Maintenance under Linux (Disk&amp;nbsp;Recovery)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/Smartmontools"&gt;Smartmontools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/S.M.A.R.T."&gt;&lt;span class="caps"&gt;S.M.A.R.T.&lt;/span&gt;(Self-Monitoring, Analysis, and Reporting&amp;nbsp;Technology)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.shadypixel.com/monitoring-hard-drive-health-on-linux-with-smartmontools/"&gt;Monitoring Hard Drive Health on Linux with&amp;nbsp;smartmontools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/2793/how-do-i-remove-or-hide-old-kernel-versions-to-clean-up-the-boot-menu-or-free-sp"&gt;How do I remove or hide old kernel versions to clean up the boot menu or free&amp;nbsp;space?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Mon, 31 Mar 2014 21:23:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2014-03-31:posts/2014/Mar/31/howto-linux-maintenance-and-filesystem-hygiene/</guid><category>Linux</category><category>Raspberry Pi</category></item><item><title>Network Backups via Rsync and Rsnapshot</title><link>http://jeffskinnerbox.me/posts/2014/Feb/08/network-backups-via-rsync-and-rsnapshot/</link><description>&lt;h3&gt;Rsync and&amp;nbsp;Rsnapshot&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.seagate.com/external-hard-drives/desktop-hard-drives/backup-plus-desk/"&gt;
&lt;img class="img-rounded floatLeft" style="margin: 0px 8px; float: left" title="Seagate Backup Plus" alt="{{ site.author.name }}" src="http://www.hotcouponworld.com/wp-content/uploads/2013/03/4tb.jpg" width="30%" height="30%" /&gt;&lt;/a&gt;
I got a 4 Terabyte &lt;a href="http://www.seagate.com/external-hard-drives/desktop-hard-drives/backup-plus-desk/"&gt;Seagate Backup Plus&lt;/a&gt; hard drive as a Christmas present and
I plan to put it to use as a central backup for my Linux desktop, multiple Raspberry Pi,
my laptop, and anything else that my come along.
My plan is to keep things simple but I wish to do
regular hourly, daily, weekly, and monthly incremental backups.
This will give me the ability to recover files from the past,
but also to recover from a hardware failure or software install that has gone very&amp;nbsp;badly.&lt;/p&gt;
&lt;p&gt;There are &lt;a href="http://www.techrepublic.com/blog/10-things/10-outstanding-linux-backup-utilities/"&gt;many backup tools&lt;/a&gt; you can pick from but
I wanted to stick with something basic, widely used, and simple.
&lt;a href="http://rsync.samba.org/"&gt;Rsync&lt;/a&gt; is one of the most widely used Linux backup solutions, and in fact,
it is often used by &lt;a href="http://en.wikipedia.org/wiki/Rsync"&gt;other backup tools&lt;/a&gt; as a foundational component. 
Rsync stands for &lt;strong&gt;r&lt;/strong&gt;emote &lt;strong&gt;sync&lt;/strong&gt;hronization tool.
Rsync is a &lt;span class="caps"&gt;UN&lt;/span&gt;*X command line utility, containing a &lt;a href="http://wiki.r1soft.com/display/TP/rsync+Backup"&gt;special protocal and algorithm&lt;/a&gt;,
that synchronizes files and directories from one location to another
while minimizing data transfer by using fast incremental file transfers.
(rsync has also been ported to Microsoft Windows, Mac, and other operating systems.)
The first time, rsync sends all the data over the network to your backup machine.
The benefit comes the next time you backup.
Instead of sending all the files again, rsync only transfers files that have been changed.
If no files were changed, no files get transferred.
And when you want to recover data, you transfer just the specific files that you want back to your machine
(using rsync or scp or telnet or&amp;nbsp;whatever).&lt;/p&gt;
&lt;p&gt;Rsnapshot is a great little utility for creating easy-to-use backups.
Using rsnapshot is possible to take snapshots of your file system at different points in time.
It creates a full-blown snapshot for each run,
but uses &lt;a href="http://www.linfo.org/hard_link.html"&gt;hard links&lt;/a&gt;&lt;sup id="fnref:A"&gt;&lt;a class="footnote-ref" href="#fn:A" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; for files that haven’t&amp;nbsp;changed.&lt;/p&gt;
&lt;p&gt;That means you get efficient, lightweight,
incremental backups that look like exactly like full-blown copies (in every way).
This makes Rsnapshot a great choice for server backups.
This easy-to-use utility is commonly used for backing up data,
but can synchronize files for any other purpose you choose to use it for.
Remote sync can be better than other backup methods because of its speed,
and because it doesn’t require any special permissions to execute an rsync command.
With just a small knowledge of the command line, you can be backing up in no time with rsync.
You can also use &lt;a href="http://en.wikipedia.org/wiki/Cron"&gt;cron&lt;/a&gt; to periodically create backups.
To top it off, it also hase a graphics frountend tool, call &lt;a href="http://www.opbyte.it/grsync/"&gt;grsync&lt;/a&gt;,
and &lt;a href="http://www.rsnapshot.org/"&gt;rsnapshot&lt;/a&gt; to create scheduled incremental backups, if so&amp;nbsp;desired.&lt;/p&gt;
&lt;h3&gt;Install the Hard&amp;nbsp;Drive&lt;/h3&gt;
&lt;p&gt;The physical install of the extenal &lt;a href="http://www.seagate.com/external-hard-drives/desktop-hard-drives/backup-plus-desk/"&gt;Seagate Backup Plus&lt;/a&gt; drive was simple, just plug it in.
The only caveat is to use a &lt;a href="http://en.wikipedia.org/wiki/USB_3.0"&gt;&lt;span class="caps"&gt;USB&lt;/span&gt; 3.0&lt;/a&gt; port on the Linux box to make sure you
get the fill speed out of the drive.
Using the supplied &lt;span class="caps"&gt;USB&lt;/span&gt; 3.0 cable is a must,
since a &lt;span class="caps"&gt;USB&lt;/span&gt; 2.0 cable will force the drive to operate at a slower speed.
Check out &lt;a href="http://www.diffen.com/difference/USB_2.0_vs_USB_3.0"&gt;&lt;span class="caps"&gt;USB&lt;/span&gt; 2.0 vs &lt;span class="caps"&gt;USB&lt;/span&gt; 3.0&lt;/a&gt; to understand&amp;nbsp;further.&lt;/p&gt;
&lt;p&gt;Under my Ubuntu system, this external disk&amp;#8217;s file system will be automatically mounted
located at &lt;code&gt;/media/jeff/"Seagate Backup Plus Drive"&lt;/code&gt;.
This nice and easy, but the disk is formated as a &lt;a href="http://en.wikipedia.org/wiki/NTFS"&gt;&lt;span class="caps"&gt;NTFS&lt;/span&gt; (New Technology File System)&lt;/a&gt;
which is a proprietary file system developed by Microsoft.
For Linux compatibility reasons,
I want the disk to support a &lt;a href="https://help.ubuntu.com/community/LinuxFilesystemsExplained"&gt;Linux ext3 file system&lt;/a&gt;.
This will requiring re-formating and mounting the new disk.
To do this, I followed the procedures outlined in
in the artical &amp;#8220;&lt;a href="http://www.itechlounge.net/2012/01/linux-partition-and-format-external-hard-drive-as-ext3-filesystem/"&gt;Partition and format external hard drive as ext3 filesystem&lt;/a&gt;&amp;#8220;.
I created a mount point called &lt;code&gt;/mnt/backup&lt;/code&gt; for the hard drive and
place it in the &lt;code&gt;fstab&lt;/code&gt; file so its mounted everytime at boot&amp;nbsp;up.&lt;/p&gt;
&lt;h3&gt;Install rsync, grsync, and&amp;nbsp;rsnapshot&lt;/h3&gt;
&lt;p&gt;Rsync should already be installed on most Linux system.
You can install it, and the &lt;a href="http://www.opbyte.it/grsync/"&gt;grsync&lt;/a&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &lt;a href="http://www.rsnapshot.org/"&gt;rsnapshot&lt;/a&gt; tools, using this&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install rsync grsync rsnapshot
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Select Backup Storage&amp;nbsp;Location&lt;/h3&gt;
&lt;p&gt;I want to create directory for the backups that are readable by all users, but writable by only root.
To do this, do the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;mkdir /mnt/backup
chmod a+rwx /mnt/backup
chmod o-w /mnt/backup
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Getting Familiar with rsync and Preparatory&amp;nbsp;Work&lt;/h3&gt;
&lt;p&gt;In this section, we&amp;#8217;ll learn about some of rsync&amp;#8217;s features and get some foundational stuff&amp;nbsp;done.&lt;/p&gt;
&lt;h5&gt;Dry Running a rsync&amp;nbsp;Command&lt;/h5&gt;
&lt;p&gt;Rsync has the potential of really messing up things
and then doing an undo can be a tedious job.
Rsync can be run in a &amp;#8220;dry run&amp;#8221; mode to show you the output of the command.
For example, this will make a copy of &lt;code&gt;~/tmp&lt;/code&gt;: &lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;rsync -azv --dry-run /home/jeff/tmp/ /home/jeff/tmp/copy-of-tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the output shows exactly what you want to do,
then you can remove &lt;code&gt;–dry-run&lt;/code&gt; option from your command and re-run it for&amp;nbsp;real. &lt;/p&gt;
&lt;h5&gt;Test rsync on Local&amp;nbsp;System&lt;/h5&gt;
&lt;p&gt;In an effort to try out rsync in the raw,
I&amp;#8217;ll create some ad hoc backups of my desktop&amp;#8217;s home directory.
I want to preserves file timestamp, symbolic links, permissions, and owner/group.
This can be done using the rsync option &lt;code&gt;-a&lt;/code&gt;.
Additional options used are &lt;code&gt;-z&lt;/code&gt; to enable compression,
and &lt;code&gt;-v&lt;/code&gt; to provide verbose status&amp;nbsp;output.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv /home/jeff/src/rtl-sdr/ /mnt/backup/rsync-test1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;sudo&lt;/code&gt; is required since I have made &lt;code&gt;/mnt/backup&lt;/code&gt; writable only by root.
The presence or absence of the terminating &lt;code&gt;/&lt;/code&gt; within the rsync command line is important.
The following two commands produce different&amp;nbsp;results:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv /home/jeff/Documents/&amp;quot;My Maps&amp;quot;/ /mnt/backup/rsync-test2
sudo rsync -azv /home/jeff/Documents/&amp;quot;My Maps&amp;quot; /mnt/backup/rsync-test3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first takes the sources files and subdirectories and writes them directly to the destination directory.
The second does the same but the files and directories go wihin a directory called &lt;code&gt;My Maps&lt;/code&gt;.
This is an important subtlety to&amp;nbsp;remember!&lt;/p&gt;
&lt;h5&gt;Testing rsync on a Remote&amp;nbsp;System&lt;/h5&gt;
&lt;p&gt;In this case, my Linux desktop machine is the local system and RPi is the remote machine.
The Linux desktop has the external drive used for&amp;nbsp;backups.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv pi@RedRPi:/home/pi/src/nRF24L01 /mnt/backup/rsync-test4
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will first prompt you for a password for the &lt;code&gt;sudo&lt;/code&gt;.
You will get a subsequent prompt for the login as &lt;code&gt;pi&lt;/code&gt; on the &lt;code&gt;RedRPi&lt;/code&gt; system,
and then the data will be transfered to the external drive.
but when performing beyond your the firewall, you should use ssh, as shown&amp;nbsp;below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv -e ssh pi@RedRPi:/home/pi/src/ /mnt/backup/rsync-test5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To setup ssh with rsync so that it can run automatically without prompting for the pasword,
checkout &amp;#8220;&lt;a href="http://www.thegeekstuff.com/2011/07/rsync-over-ssh-without-password/"&gt;How to Setup Rsync with &lt;span class="caps"&gt;SSH&lt;/span&gt; on &lt;span class="caps"&gt;UNIX&lt;/span&gt; / Linux (rsync without password)&lt;/a&gt;&amp;#8220;.
This is sometime you will want to do to support automatic, unattended backups.
Basicly, your going to do the following on the machine that will store the backups&lt;sup id="fnref:B"&gt;&lt;a class="footnote-ref" href="#fn:B" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd $HOME
mkdir .ssh
chmod 755 .ssh
ssh-keygen -N &amp;quot;&amp;quot; -f /$HOME/.ssh/id_rsa
ssh-copy-id -i /$HOME/.ssh/id_rsa.pub pi@RedRPi
ssh-copy-id -i /$HOME/.ssh/id_rsa.pub pi@BlackRPi
sudo bash
cd /root
mkdir .ssh
chmod 755 .ssh
ssh-keygen -N &amp;quot;&amp;quot; -f /root/.ssh/id_rsa
ssh-copy-id -i /root/.ssh/id_rsa.pub pi@RedRPi
ssh-copy-id -i /root/.ssh/id_rsa.pub pi@BlackRPi
exit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now repeat the example&amp;nbsp;above:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv -e ssh pi@RedRPi:/home/pi/src/ /mnt/backup/rsync-test5a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should no longer be promoted for a password, except by the first &lt;code&gt;sudo&lt;/code&gt;.
(Once rsync is run under a root login, this &lt;code&gt;sudo&lt;/code&gt; will no longer be&amp;nbsp;required).&lt;/p&gt;
&lt;h5&gt;Exclude Files / Directories from&amp;nbsp;rsync&lt;/h5&gt;
&lt;p&gt;In a typical backup situation,
you might want to exclude one or more files (or directories) from the backup.
You might also want to exclude a specific file type from rsync.
Let&amp;#8217;s run a backup of &lt;code&gt;pi@RedRPi:/home/pi/&lt;/code&gt;
but leave out the &lt;code&gt;tmp&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; directories.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv -e ssh --exclude &amp;#39;tmp&amp;#39; --exclude &amp;#39;src&amp;#39; pi@RedRPi:/home/pi/ /mnt/backup/rsync-test6
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You could also create a file that contains the exclude list &lt;code&gt;tmp&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt;.
This would look&amp;nbsp;like:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv --exclude-from &amp;#39;exclude-list.txt&amp;#39; pi@RedRPi:/home/pi/ /mnt/backup/rsync-test6
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Running rsync as&amp;nbsp;Root&lt;/h5&gt;
&lt;p&gt;The above examples works fine as long as the source login (in this case &lt;code&gt;pi&lt;/code&gt; on the &lt;code&gt;RedRPi&lt;/code&gt; system)
has the approprate permissions.
For example, this will&amp;nbsp;fail:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv -e ssh  pi@RedRPi:/root/ /mnt/backup/rsync-test7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It fails because the user &lt;code&gt;pi&lt;/code&gt; doesn&amp;#8217;t have &lt;code&gt;root&lt;/code&gt; permissions
and the directory &lt;code&gt;/root/&lt;/code&gt; can only be entered by the user &lt;code&gt;root&lt;/code&gt;.
You might want to attempt to do the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv -e ssh root@RedRPi:/root/ /mnt/backup/rsync-test7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now your asking to login to the remote system as user root.
In this case you&amp;#8217;ll be prompted to provide the RedRPi&amp;#8217;s root password,
but the root login may not have a password&lt;sup id="fnref:C"&gt;&lt;a class="footnote-ref" href="#fn:C" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;The way around all this is to use the &lt;code&gt;--rsync-path&lt;/code&gt; option for rsync.
This will&amp;nbsp;work:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv -e ssh --rsync-path=&amp;quot;sudo rsync&amp;quot; pi@RedRPi:/root /mnt/backup/rsync-test7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;--rsync-path&lt;/code&gt; parameter specifies a path to rsync on the remote machine.
So &lt;code&gt;rsync&lt;/code&gt; will be executed using &lt;code&gt;sudo&lt;/code&gt;, giving it root user access privilages,
and now the use of the &lt;code&gt;pi&lt;/code&gt; login will gain access to the &lt;code&gt;/root&lt;/code&gt; directory.
That is, on the remote machine, rsync is being run as root!
This all requires the proper set-up of ssh with password-less access, discussed&amp;nbsp;earlier.&lt;/p&gt;
&lt;h5&gt;Configuration of ssh to Eliminate Password Prompt and Warning&amp;nbsp;Messages&lt;/h5&gt;
&lt;p&gt;Proper configuration of ssh will be needed to assure routine warning messages&lt;sup id="fnref:D"&gt;&lt;a class="footnote-ref" href="#fn:D" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;
don&amp;#8217;t disrupt the smooth operation of rsync /&amp;nbsp;rsnapshot.&lt;/p&gt;
&lt;p&gt;Specifically, we need to add the approprate parameters to one of the
&lt;code&gt;ssh&lt;/code&gt; configuration files listed&amp;nbsp;below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;System-wide &lt;span class="caps"&gt;SSH&lt;/span&gt; client configuration files (i.e. /etc/ssh/ssh_config -&lt;/strong&gt; This files set the default configuration for all users of OpenSSH clients on that desktop/laptop and it must be readable by all users on the&amp;nbsp;system.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User-specific &lt;span class="caps"&gt;SSH&lt;/span&gt; client configuration files (i.e. $&lt;span class="caps"&gt;HOME&lt;/span&gt;/.ssh/config -&lt;/strong&gt; This is user&amp;#8217;s own configuration file which, overrides the settings in the global client configuration file, &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add this to &lt;code&gt;/etc/ssh/ssh_conf&lt;/code&gt; file to disable the host key checking
and the warnings&lt;sup id="fnref:E"&gt;&lt;a class="footnote-ref" href="#fn:E" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; for all users who access systems whos names end in&amp;nbsp;&amp;#8216;RPi&amp;#8217;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;Host *RPi
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In addition, add the following to the &lt;code&gt;$HOME/.ssh/config&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;UserKnownHostsFile  ~/.ssh/known_hosts
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make these changes active by restarting the ssh services via the command &lt;code&gt;sudo service ssh restart&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With ssh properly configured, a command&amp;nbsp;like&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsync -azv -e ssh --rsync-path=&amp;quot;sudo rsync&amp;quot; pi@BlackRPi:/root/.rpi-firmware/ /mnt/backup/rsync-test8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;should run without requesting passwords, it will run on the remote as the root user,
and warning messages about differing &amp;#8220;&lt;span class="caps"&gt;ECDSA&lt;/span&gt; host key&amp;#8221; should not get in your way.
It will run without user intervention; just what we need for automated&amp;nbsp;backups!&lt;/p&gt;
&lt;h5&gt;Creating Backup Users on Remote&amp;nbsp;Servers&lt;/h5&gt;
&lt;p&gt;On all the remote systems (i.e. RedRPi and BlackRPi) you need to create the login
and establish its ssh authentication&amp;nbsp;keys.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo adduser backup_user --disabled-password -u 400
sudo mkdir /home/backup_user/.ssh
sudo chmod 700 /home/backup_user/.ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now create a rsync wrapper&amp;nbsp;script:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo mkdir /home/backup_user/bin
sudo vim /home/backup_user/bin/rsync-wrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Enter the following in this file to create the&amp;nbsp;script:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;#!/bin/sh

# This script is a wrapper around rsync, so that rsync can run as root,
# and at the same time, eliminate any security risks.

# Place in the log file information concerning the execution of this script
echo -n &amp;quot;rsync wrapper script executed on &amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log
date &amp;gt;&amp;gt; /home/backup_user/backup.log
echo -n &amp;quot;options passed to rsync: &amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log
echo $@ &amp;gt;&amp;gt; /home/backup_user/backup.log
echo &amp;quot;---------------------------------------------&amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log

# Now execute the script
/usr/bin/sudo /usr/bin/rsync &amp;quot;$@&amp;quot;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now change the mode and owner of this&amp;nbsp;file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo chown backup_user:backup_user /home/backup_user/*
sudo chown backup_user:backup_user /home/backup_user/bin/rsync-wrapper.sh
sudo chmod 754 /home/backup_user/bin/rsync-wrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now for the &lt;code&gt;backup_user&lt;/code&gt;, configure &lt;code&gt;sudo&lt;/code&gt; such that it can run the rsync tool
as root without being being prompted for a password.
For security reasons, we what only the rsync tool to have &lt;code&gt;sudo&lt;/code&gt; privileges.
Using &lt;a href="http://www.sudo.ws/sudo/sudoers.man.html"&gt;&lt;code&gt;visudo&lt;/code&gt;&lt;/a&gt; command, edit the &lt;a href="http://www.sudo.ws/visudo.man.html"&gt;&lt;code&gt;/etc/sudoers&lt;/code&gt;&lt;/a&gt;&lt;sup id="fnref:F"&gt;&lt;a class="footnote-ref" href="#fn:F" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; file by adding the following 
to the bottom of the&amp;nbsp;file.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# allows this user to not need a password to sudo the specified command(s)
backup_user    ALL=NOPASSWD:    /usr/bin/rsync
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Creating Backup Users for Backup&amp;nbsp;Server&lt;/h5&gt;
&lt;p&gt;On the host server (i.e. desktop) you need to create the login
(with a &lt;span class="caps"&gt;UID&lt;/span&gt; of less that 500&lt;sup id="fnref:G"&gt;&lt;a class="footnote-ref" href="#fn:G" rel="footnote"&gt;7&lt;/a&gt;&lt;/sup&gt;)
which will run the rsync / rsnapshot utilities
and establish its &lt;code&gt;ssh&lt;/code&gt; authentication&amp;nbsp;keys.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo adduser backup_user -u 400
sudo chown backup_user:backup_user /home/backup_user/*
sudo su backup_user
cd ~
ssh-keygen -N &amp;quot;&amp;quot; -f ~/.ssh/id_rsa
ssh-copy-id -i ~/.ssh/id_rsa.pub backup_user@RedRPi
ssh-copy-id -i ~/.ssh/id_rsa.pub backup_user@BlackRPi
exit
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Increased&amp;nbsp;Security&lt;/h5&gt;
&lt;p&gt;To increase the security of the overall scheme, 
on the remote systems and on the local system,
remove the user password from the &lt;code&gt;backup_user&lt;/code&gt; user&amp;nbsp;via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo passwd --delete backup_user
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configuring rsnapshot for Incremental&amp;nbsp;Backups&lt;/h3&gt;
&lt;p&gt;Our mission here is to use rsnapshot to create backups of both normal
and protected/restricted files from one server to another over &lt;code&gt;ssh&lt;/code&gt;
without enabling remote root access to either server while
maintaining original file attributes and permissions&lt;sup id="fnref:H"&gt;&lt;a class="footnote-ref" href="#fn:H" rel="footnote"&gt;8&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Where rsync does the actual file backups, rsnapshot is responsible for the overall management of the backups.
In my case, I want it to schedule a nested and rotating series of incremental backups for my systems.
I want the schedule and the backup increments to&amp;nbsp;be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Every 4 hours, create an incremental backup, and store all of them for the past 24&amp;nbsp;hours&lt;/li&gt;
&lt;li&gt;Create a daily incremental backups (from the last hourly backup), and store a daily backup for the past 7&amp;nbsp;days&lt;/li&gt;
&lt;li&gt;Create a weekly incremental backups, and store them for the past 4&amp;nbsp;weeks&lt;/li&gt;
&lt;li&gt;Create monthly incremental backups, and store for the past 3&amp;nbsp;months&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When making the backups, the contents of &lt;code&gt;/dev&lt;/code&gt;, &lt;code&gt;/proc&lt;/code&gt;, &lt;code&gt;/sys&lt;/code&gt;, &lt;code&gt;/tmp&lt;/code&gt;, and &lt;code&gt;/run&lt;/code&gt; should be excluded
because they are populated at boot (while the directories themselves are not created).
The file &lt;code&gt;/lost+found&lt;/code&gt; is filesystem-specific and doesn&amp;#8217;t need to be copied.
(Note: If you plan on backing up your system somewhere other than &lt;code&gt;/mnt&lt;/code&gt; or &lt;code&gt;/media&lt;/code&gt;
don&amp;#8217;t forget to add it to the list, to avoid an infinite&amp;nbsp;loop.)&lt;/p&gt;
&lt;p&gt;rsnapshot also provides a non-commandline method for excluding file, which is what I&amp;#8217;m using.
Specifically, I have defined exclusion files for Linux and Windows based systems.
For Linix, the file is called &lt;code&gt;rsync-exclude-desktop&lt;/code&gt; and &lt;code&gt;rsync-exclude-RPi&lt;/code&gt; and look something like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;- /var/lib/pacman/sync/*
- /lost+found
- /media/*
- /cdrom/*
- /proc/*
- /mnt/*
- /run/*
- /tmp/*
- /sys/*
- /dev/*
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For Windows, the file is called &lt;code&gt;rsync-exclude-windows&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;- /cygdrive/c/System\ Volume\ Information/*
- /cygdrive/c/Windows/System32/winevt/*
- /cygdrive/c/Windows/System32/catroot/*
- /cygdrive/c/Windows/System32/catroot2/*
- /cygdrive/c/Windows/System32/config/*
- /cygdrive/c/Windows/ServiceProfiles/*
- /cygdrive/c/ProgramData/Microsoft/*
- /cygdrive/c/Windows/System32/wdi/*
- /cygdrive/c/Windows/System32/wfp/*
- /cygdrive/c/Windows/System32/sru/*
- /cygdrive/c/proc/sys/Device/*
- /cygdrive/c/proc/registry*
- /cygdrive/c/Windows/Logs/*
- /cygdrive/c/hiberfil.sys
- /cygdrive/c/pagefile.sys
- /cygdrive/c/swapfile.sys
- /proc/sys/Sessions/
- UsrClass.dat
- ntuser*
- NTUSER*
- *Cache*
- *cache*
- *Lock*
- *lock*
- *LOG*
- *log*
- *.tmp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To implement the above backup rules (and many others),
you need to edit a configuration file&lt;sup id="fnref:I"&gt;&lt;a class="footnote-ref" href="#fn:I" rel="footnote"&gt;9&lt;/a&gt;&lt;/sup&gt; located at &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt;.
The configuration elements I edited are&amp;nbsp;below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# location where backups will be stored
snapshot_root   /mnt/backup/

# rsync command executed on the remote system
cmd_rsync   /usr/bin/rsync

# incremental backup rules
retain      hourly  6
retain      daily   7
retain      weekly  4
retain      monthly 3

# rsnapshot&amp;#39;s log file
logfile /var/log/rsnapshot.log

# All rsync commands have at least these options set.
rsync_short_args    -aev
rsync_long_args --delete --numeric-ids --relative --delete-excluded

# ssh args passed 
ssh_args    -i /home/backup_user/.ssh/id_rsa

# systems to be backed up, what high level directory name is to be used
# and the additional arguments to pass to rsync
backup  /   desktop/    exclude_file=/home/backup_user/rsync-exclude-desktop
backup  backup_user@RedRPi:/    RedRPi/ exclude_file=/home/backup_user/rsync-exclude-RPi,+rsync_long_args=--rsync-path=/home/backup_user/bin/rsync-wrapper.sh
backup  backup_user@BlackRPi:/  BlackRPi/   exclude_file=/home/backup_user/rsync-exclude-RPi,+rsync_long_args=--rsync-path=/home/backup_user/bin/rsync-wrapper.sh
backup  Sara@SaraPC:/   SaraPC/ exclude_file=/home/backup_user/rsync-exclude-windows,+rsync_long_args=--fake-super
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In my backup scheme, I have several remote systems (i.e. RedRPi, BlackRPi, and SaraPC),
and a backup server itself (i.e. desktop).
All system will use a common user called &lt;code&gt;backup_user&lt;/code&gt;,
whos only purpose is to support the backup process.
From the backup system, we&amp;#8217;ll be able to logon to each remote system using
the &lt;code&gt;backup_user&lt;/code&gt; ssh public key.
The main trick is to set sudoers on the remote system such that it allow rsync
root access to &lt;code&gt;backup_user&lt;/code&gt;,
and it tell rsnapshot to use additionnal parameters when calling rsync.
This all required to maintain the security of the remote systems, and was discussed in the text&amp;nbsp;above.&lt;/p&gt;
&lt;h3&gt;Testing&amp;nbsp;rsnapshot&lt;/h3&gt;
&lt;p&gt;rsnapshot provides an easy way to check that your configuration file doesn’t contain any syntax errors.
Simply&amp;nbsp;type:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsnapshot configtest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If all is well, it will say ‘syntax ok’.
If there is a problem, it will spit errors at you.
If you get errors, check that you have separated items in the file using tabs
(spaces are not allowed in the configuration&amp;nbsp;file).&lt;/p&gt;
&lt;p&gt;The final step to test your configuration is to run rsnapshot in test mode, using the &lt;code&gt;-t&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo rsnapshot -t hourly
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This tells rsnapshot to simulate an &amp;#8220;hourly&amp;#8221; backup.
It should print out the commands it will perform when it runs for real.
If all is well, then remove the &lt;code&gt;-t&lt;/code&gt; and run it for real to create the initial backup.
This initial run is likely to run a long time, and shouldn&amp;#8217;t be do via cron as discussed&amp;nbsp;below.&lt;/p&gt;
&lt;h3&gt;Scheduling (Automating) Backups in&amp;nbsp;crontab&lt;/h3&gt;
&lt;p&gt;Linux &lt;a href="http://en.wikipedia.org/wiki/Cron"&gt;cron&lt;/a&gt;&lt;sup id="fnref:J"&gt;&lt;a class="footnote-ref" href="#fn:J" rel="footnote"&gt;10&lt;/a&gt;&lt;/sup&gt; is used to schedule commands to be executed periodically.
You can setup commands or scripts, which will be repeatedly run at a set&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;For crontab, I created a wrapper script and
placed it in &lt;code&gt;/home/backup_user/bin/rsnapshot-wrapper.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;#!/bin/sh

# This script is a wrapper around rsnapshot, so status information is logged

# Place in the log file information concerning the execution of this script
echo -n &amp;quot;rsnapshot wrapper script started at &amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log
date &amp;gt;&amp;gt; /home/backup_user/backup.log

echo -n &amp;quot;options passed to rsnapshot: &amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log
echo $@ &amp;gt;&amp;gt; /home/backup_user/backup.log

# Now execute the script
/usr/bin/rsnapshot &amp;quot;$@&amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log 2&amp;gt;&amp;amp;1;

echo -n &amp;quot;rsnapshot wrapper script completed at &amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log
date &amp;gt;&amp;gt; /home/backup_user/backup.log

echo &amp;quot;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&amp;quot; &amp;gt;&amp;gt; /home/backup_user/backup.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using &lt;code&gt;crontab -e&lt;/code&gt;, I enter the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;#   minute  hour  day-of-month  month   day-of-week   command
      0     */4         *         *         *         /home/backup_user/bin/rsnapshot-wrapper.sh hourly
      30    2           *         *         *         /home/backup_user/bin/rsnapshot-wrapper.sh daily
      30    3           *         *         1         /home/backup_user/bin/rsnapshot-wrapper.sh weekly
      30    4           1         *         *         /home/backup_user/bin/rsnapshot-wrapper.sh monthly
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use &lt;code&gt;sudo crontab -l&lt;/code&gt; to list the contents of root&amp;#8217;s&amp;nbsp;crontab. &lt;/p&gt;
&lt;h3&gt;Monitoring&amp;nbsp;rsnapshot&lt;/h3&gt;
&lt;p&gt;Monitoring and testing is an essential part of any backup procedure.
There’s nothing worse than finding out
that your backup hasn’t been working for six months on the day that your system crashes.
rsnapshot has a log file that records warnings and error messages.
You can find/open it here: &lt;code&gt;/var/log/rsnapshot.log&lt;/code&gt;
Inspect this log regularly to make sure your backup jobs are running smoothly.
You can increase or decrease the level of logging detail in the configuration file &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Backup from Windows Machines to&amp;nbsp;Linux&lt;/h3&gt;
&lt;p&gt;Backing up Windows systems has its own special challages, but utilities exist to help.
&lt;a href="http://www.cygwin.com/"&gt;Cygwin&lt;/a&gt; is a a collection of tools that provide a Linux look and feel environment for Windows.
If you install it, you can use linux commands and services on your Windows.
Cygwin contains a package with &lt;a href="http://cygwin.com/cgi-bin2/package-cat.cgi?file=x86%2Frsync%2Frsync-3.0.9-1&amp;amp;grep=rsync"&gt;its version of rsync&lt;/a&gt;
to make backups from the Windows based computer.
With Cygwin&amp;#8217;s rsync and the rsnapshot running on the Linux backup server,
you can set up a remote backup for the Microsoft Windows&amp;nbsp;box.&lt;/p&gt;
&lt;p&gt;To do the install the cygwin &lt;code&gt;rsync&lt;/code&gt;, &lt;code&gt;ssh&lt;/code&gt;, etc. tools required to support the rsnapshot backup,
you&amp;#8217;ll follow a similar design pattern used above for the Linux boxes.
Follow this&amp;nbsp;procedure:&lt;/p&gt;
&lt;h5&gt;Install Cygwin&amp;nbsp;Tools&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;From the &lt;a href="http://www.cygwin.com/"&gt;cygwin site&lt;/a&gt;, download and run the setup program.  (Make sure to keep the setup program, since it is used to install additional Cygwin packages, if you so&amp;nbsp;desire.)&lt;/li&gt;
&lt;li&gt;Run your cygwin &lt;code&gt;setup.exe&lt;/code&gt; and expand the categories to find &amp;#8220;rsync&amp;#8221; and &amp;#8220;ssh&amp;#8221;.  You&amp;#8217;ll find them under the &amp;#8220;Net&amp;#8221;&amp;nbsp;packages.&lt;/li&gt;
&lt;li&gt;When the install is complete, the &lt;code&gt;rsync&lt;/code&gt; and &lt;code&gt;ssh&lt;/code&gt; programs (and many more) will be located in &lt;code&gt;C:\cygwin64\bin&lt;/code&gt;. (This is equivalent to &lt;code&gt;/bin&lt;/code&gt; when your running a &lt;code&gt;bash&lt;/code&gt; shell in&amp;nbsp;cygwin.)&lt;/li&gt;
&lt;li&gt;In Windows, open a &lt;a href="http://www.howtogeek.com/howto/windows-vista/run-a-command-as-administrator-from-the-windows-vista-run-box/"&gt;Command Prompt (Admin) window&lt;/a&gt;.  Within this window, get a bash shell via the command &lt;code&gt;C:\cygwin64\bin\bash&lt;/code&gt;.  Next execute &lt;code&gt;export Path=/bin:$PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Get ssh&amp;nbsp;Operational&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Now make a home directory for the cygwin user, in my case this was &lt;code&gt;mkdir /home/Sara&lt;/code&gt; and then &lt;code&gt;cd /home/Sara&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;ssh&lt;/code&gt; public/private keys with the following command: &lt;code&gt;ssh-keygen -t rsa&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now start up the &lt;code&gt;ssh&lt;/code&gt; services by following the instructions of &amp;#8220;&lt;a href="http://lifehacker.com/205090/geek-to-live--set-up-a-personal-home-ssh-server"&gt;Geek to Live: Set up a personal, home &lt;span class="caps"&gt;SSH&lt;/span&gt; server&lt;/a&gt;&amp;#8220;.&lt;/li&gt;
&lt;li&gt;Find out the name of the windows syste via &lt;code&gt;hostname&lt;/code&gt; (it&amp;#8217;s&amp;nbsp;SaraPC).&lt;/li&gt;
&lt;li&gt;In order to access the &lt;code&gt;ssh&lt;/code&gt; server from the backup Linux box, the &lt;code&gt;ssh&lt;/code&gt; port of 22 must be open in the Windows Firewall. You can check ports status by attempting connect via &lt;code&gt;ssh&lt;/code&gt; (e.g. &lt;code&gt;ssh Sara@SaraPC&lt;/code&gt;).  If this command appears to hang or time out (as it did for me), the port is likely blocked.  You&amp;#8217;ll need to go to your &lt;a href="http://windows.microsoft.com/en-us/windows/open-port-windows-firewall#1TC=windows-7"&gt;Windows Firewall&lt;/a&gt; and open port&amp;nbsp;22.&lt;/li&gt;
&lt;li&gt;Transfer the public key for the &lt;code&gt;backup_user&lt;/code&gt; on the Linux Backup server to &lt;code&gt;/home/Sara/.ssh/authorized_keys&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make sure that in the files &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; and &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt; that you have &lt;code&gt;RSAAuthentication yes&lt;/code&gt; and &lt;code&gt;PubKeyAuthentication yes&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Test ssh and&amp;nbsp;rsync&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;On the Linux Backup server, login as the &lt;code&gt;backup_user&lt;/code&gt; user.&lt;/li&gt;
&lt;li&gt;Test the connection via &lt;code&gt;ssh Sara@SaraPC&lt;/code&gt; in a terminal window on the Linux box (note to self: Case is important!).  You should login without a&amp;nbsp;password.&lt;/li&gt;
&lt;li&gt;Test rsync via the command &lt;code&gt;sudo rsync -azv --fake-super Sara@SaraPC:/home/Sara /mnt/backup/rsync-test9&lt;/code&gt;. You&amp;#8217;ll want to use the &lt;code&gt;--fake-super&lt;/code&gt; option to surpress some i&lt;a href="https://digitaldj.net/blog/2011/04/07/rsync-3-0-8-windows-and-chown/"&gt;issues with group ids&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Test the &lt;code&gt;/etc/rsnapshot.conf&lt;/code&gt; given earlier by running &lt;code&gt;rsnapshot hourly&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Restore Files with&amp;nbsp;rsnapshot&lt;/h3&gt;
&lt;p&gt;Restoring files are an no brainer because the backups are plain directories.
You can open a file browser or a terminal, enter a snapshot from a few hours/days/weeks/months ago,
find a working directory where your files are store, and copy them to where their needed.
In other words, you can use any regular tools on any snapshot.
No need to “revert” or “restore” files from backup, or run any special software.
This is mighty convenient, intuitive, and fool&amp;nbsp;proof.&lt;/p&gt;
&lt;h3&gt;Sources&lt;/h3&gt;
&lt;p&gt;I found these articles useful for writing this post and setting up my rsych / rsnapshot backup&amp;nbsp;scheme. &lt;/p&gt;
&lt;h4&gt;rsync&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2010/09/rsync-command-examples/"&gt;How to Backup Linux? 15 rsync Command&amp;nbsp;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tecmint.com/rsync-local-remote-file-synchronization-commands/"&gt;Rsync (Remote Sync): 10 Practical Examples of Rsync Command in&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2011/01/rsync-exclude-files-and-folders/"&gt;6 rsync Examples to Exclude Multiple Files and Directories using&amp;nbsp;exclude-from&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2011/07/rsync-over-ssh-without-password/"&gt;How to Setup Rsync with &lt;span class="caps"&gt;SSH&lt;/span&gt; on &lt;span class="caps"&gt;UNIX&lt;/span&gt; / Linux (rsync without&amp;nbsp;password)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mikerubel.org/computers/rsync_snapshots/"&gt;Easy Automated Snapshot-Style Backups with Linux and&amp;nbsp;Rsync&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Full_System_Backup_with_rsync"&gt;Full System Backup with&amp;nbsp;rsync&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;rsnapshot&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/linux-rsnapshot-backup-howto/"&gt;Debian / Ubuntu Linux Install and Configure Remote Filesystem Snapshot with rsnapshot Incremental Backup&amp;nbsp;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tecmint.com/rsnapshot-a-file-system-backup-utility-for-linux/"&gt;Rsnapshot (Rsync Based) – A Local/Remote File System Backup Utility for&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rsnapshot.org/howto/1.2/rsnapshot-HOWTO.en.html#create_the_config_file"&gt;rsnapshot &lt;span class="caps"&gt;HOWTO&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cyberciti.biz/faq/restoring-backup-files-with-rsnapshot-unix-linux-bsd-appleosx/"&gt;&lt;span class="caps"&gt;UNIX&lt;/span&gt; / Linux: Rsnapshot Restore&amp;nbsp;Backups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sites.google.com/site/rsync2u/home/rsync-tutorial/the-exclude-from-option"&gt;The &amp;#8220;exclude-from&amp;#8221; and &amp;#8220;recursive&amp;#8221;&amp;nbsp;options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.evbackup.com/support-misc-redundant-backups-with-rsnapshot/"&gt;Implementing Redundant Backups with&amp;nbsp;rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;rsnapshot with root&amp;nbsp;access&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technokracy.net/2011/01/07/root_sudo_rsnapshot/"&gt;Root, Sudo, and&amp;nbsp;Rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.kprod.net/?q=linux-backup-rsnapshot-no-root"&gt;Backup remote Linux hosts without root access, using&amp;nbsp;rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://derek.simkowiak.net/backing-up-multiple-servers-with-rsnapshot/"&gt;Backing Up Multiple Servers with&amp;nbsp;Rsnapshot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;rsync and rsnapshot with&amp;nbsp;Windows&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.smellems.com/tiki-read_article.php?articleId=14"&gt;Backup from Windows to Linux with Rsync and &lt;span class="caps"&gt;SSH&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://optics.ph.unimelb.edu.au/help/rsync/rsync_pc1.html"&gt;Installing ssh and rsync on a Windows machine: minimalist&amp;nbsp;approach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.trueblade.com/knowledge/using-rsync-and-cygwin-to-sync-files-from-a-linux-server-to-a-windows-notebook-pc"&gt;Using rsync and cygwin to Sync Files from a Linux Server to a Windows Notebook &lt;span class="caps"&gt;PC&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://terokarvinen.com/rsync_from_windows.html"&gt;Rsync from&amp;nbsp;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:A"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
&lt;a href="http://www.lostsaloon.com/technology/understanding-file-linking-hard-link-vs-symbolic-link-in-linux/"&gt;Hard links are similar to symlinks&lt;/a&gt;.
They are normally created using the &lt;code&gt;ln&lt;/code&gt; command but without the &lt;code&gt;-s&lt;/code&gt; switch.
A hard link is when two file entries point to the same &lt;a href="http://en.wikipedia.org/wiki/Inode"&gt;inode&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Block_(data_storage)"&gt;disk blocks&lt;/a&gt;.
Unlike &lt;a href="http://en.wikipedia.org/wiki/Symbolic_link"&gt;symlinks&lt;/a&gt; there isn&amp;#8217;t a file and a pointer to the file, but rather two links to the same file.
If you delete either entry the other will remain and will still contain the data.&amp;#160;&lt;a class="footnote-backref" href="#fnref:A" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:B"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
The command &lt;code&gt;ssh-copy-id&lt;/code&gt; may not work if your attempting use the
root login instand of pi on the remote machine.
In this case, you&amp;#8217;ll need to manually move the public key to its destination.
The artical &amp;#8220;&lt;a href="http://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/"&gt;Create &lt;span class="caps"&gt;SSH&lt;/span&gt; Passwordless Login Using &lt;span class="caps"&gt;SSH&lt;/span&gt; Keygen&lt;/a&gt; can show you how to do this.&amp;#160;&lt;a class="footnote-backref" href="#fnref:B" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:C"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
Because of an abundance of paranoia,
remote root login over &lt;code&gt;ssh&lt;/code&gt; session is disabled in some Linux distributions for &lt;a href="http://www.cyberciti.biz/tips/linux-unix-bsd-openssh-server-best-practices.html"&gt;security reasons&lt;/a&gt;.
By default, the Root account password is locked in Ubuntu and most other version of Linux.
The account has no password, even thou it prompts you to provide one.
This means that you cannot login as Root directly or use the su command to become the Root user.
However, since the Root account physically exists it is still possible to
run programs with root-level privileges.
This is where &lt;a href="https://help.ubuntu.com/community/RootSudo"&gt;sudo&lt;/a&gt; comes in - it allows authorized users (normally &amp;#8220;Administrative&amp;#8221; users)
to run certain programs as Root without having to know the root password.&amp;#160;&lt;a class="footnote-backref" href="#fnref:C" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:D"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
One of the most common warnings you will likely encounter is a host key error
which may not happen until long after you have made your first connection to a host.
If any of several identifying features of the host change,
a new host key could be created and if that happens your ssh client will let you know
by refusing to log you into that system without first prompting you to confirm the warning,
or may even force you to provide the login&amp;#8217;s password.
It can be confusing on how to clean this up, but these two articals can help:
&lt;a href="http://xmodulo.com/2013/05/how-to-accept-ssh-host-keys-automatically-on-linux.html"&gt;How to accept ssh host keys automatically on Linux&lt;/a&gt;
and &lt;a href="http://stackoverflow.com/questions/9299651/warning-permanently-added-to-the-list-of-known-hosts-message-from-git"&gt;“Warning: Permanently added to the list of known hosts” message from Git&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:D" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:E"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
The suppresion of this warning does reduce the security profile of the system.
Instead of suppressing the warning for all ssh access to *RPi,
you could implement this functionality &lt;a href="http://www.garron.me/en/linux/remove-offending-key-ssh.html"&gt;solely for the &lt;code&gt;rsync&lt;/code&gt; command&lt;/a&gt; by using
the option &lt;code&gt;-e "ssh -o CheckHostIP=no -o StrictHostKeyChecking=no"&lt;/code&gt;.
See &lt;a href="http://security.stackexchange.com/questions/10532/ecdsa-keys-changed-ssh-insecure-now"&gt;&lt;span class="caps"&gt;ECDSA&lt;/span&gt; Keys Changed, &lt;span class="caps"&gt;SSH&lt;/span&gt; insecure now&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:E" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:F"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
The sudoers configuration file enables a huge amount of configurability,
including but not limited to: enabling root commands only from the invoking terminal;
not requiring a password for certain commands;
requiring a password per user or group;
requiring re-entry of a password every time or never requiring a password at all for a particular command line.
It can also be configured to permit passing arguments or multiple commands,
and even supports commands with regular expressions.&amp;#160;&lt;a class="footnote-backref" href="#fnref:F" rev="footnote" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:G"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
I choose a &lt;span class="caps"&gt;UID&lt;/span&gt; of 400 so that the &lt;code&gt;backup_user&lt;/code&gt; would not appear on the Ubuntu login screen list.
To hide a user from the Ubuntu login screen list,
you should be able to add the name to the hidden-users
list in the file &lt;code&gt;/etc/lightdm/users.conf&lt;/code&gt;, but there is a &lt;a href="http://www.cyberciti.biz/faq/howto-change-rename-user-name-id/"&gt;problem&lt;/a&gt;.
The is an alternative, and that is to choose a &lt;span class="caps"&gt;UID&lt;/span&gt; value less than 500
(See the &amp;#8220;minimum-uid&amp;#8221; in &lt;code&gt;/etc/lightdm/users.conf&lt;/code&gt;).&amp;#160;&lt;a class="footnote-backref" href="#fnref:G" rev="footnote" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:H"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
To automate rsnapshot backup to a remote servers,
you&amp;#8217;ll also need to set up key-based authentication over &lt;span class="caps"&gt;SSH&lt;/span&gt; on the remote
machines that you want to backup,
so that they can be accessed without need for a password login.
And you need to make sure this arrangement survives a reboot.
To accomplish this, you will need to create an &lt;span class="caps"&gt;SSH&lt;/span&gt; public and private keys to authenticate on the rsnapshot server.
This was all discussed earlier.&amp;#160;&lt;a class="footnote-backref" href="#fnref:H" rev="footnote" title="Jump back to footnote 8 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:I"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
The configuration file requires tabs between elements
and all drectories require a trailing slash.
Just open config file using a text editor such as vi or gedit but be careful.
Many editors are set to convert any tabs entered by the user to spaces.
This can be a source of great confusion and frustration!&amp;#160;&lt;a class="footnote-backref" href="#fnref:I" rev="footnote" title="Jump back to footnote 9 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:J"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt;
The cron service (daemon) runs in the background and constantly checks the &lt;code&gt;/etc/crontab&lt;/code&gt; file,
and &lt;code&gt;/etc/cron.*/&lt;/code&gt; directories.
It also checks the &lt;code&gt;/var/spool/cron/&lt;/code&gt; directory.
Review the article &lt;a href="https://help.ubuntu.com/community/CronHowto"&gt;CronHowTo&lt;/a&gt; to see how you can schedule and run tasks
in the background automatically at regular intervals using crontab files. 
Crontab ( &lt;strong&gt;cron&lt;/strong&gt; &lt;strong&gt;tab&lt;/strong&gt;le ) is a file which contains the schedule of cron entries to be run and at specified times.
(If the system isn&amp;#8217;t running 24x7, consider using &lt;a href="http://www.thegeekstuff.com/2011/05/anacron-examples/"&gt;anacron&lt;/a&gt;).&amp;#160;&lt;a class="footnote-backref" href="#fnref:J" rev="footnote" title="Jump back to footnote 10 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sat, 08 Feb 2014 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2014-02-08:posts/2014/Feb/08/network-backups-via-rsync-and-rsnapshot/</guid><category>Linux</category><category>Rsync</category><category>Rsnapshot</category></item><item><title>Having Fun with Wine, VirtualBox, and TurboTax</title><link>http://jeffskinnerbox.me/posts/2014/Jan/15/having-fun-with-wine-virtualbox-and-turbotax/</link><description>&lt;p&gt;Sometime ago, I committed myself to Linux and &lt;a href="http://www.winehq.org/"&gt;Wine&lt;/a&gt;,
with the promise that I would sincerely abandon Microsoft Windows by
not &lt;a href="http://en.wikipedia.org/wiki/Multi-booting"&gt;dual booting&lt;/a&gt; my system nor installing any &lt;a href="http://en.wikipedia.org/wiki/Virtualization"&gt;virtualization&lt;/a&gt; software.
Well, it is now tax-time and the Federial goverment wants their &amp;#8220;fair share&amp;#8221; of my income.
Will my prefered tax software package, &lt;a href="https://turbotax.intuit.com/"&gt;TurboTax&lt;/a&gt;, run with Linux &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Wine?
All the evidence I have gathered (see &lt;a href="http://appdb.winehq.org/objectManager.php?sClass=application&amp;amp;iId=623"&gt;Wine&amp;#8217;s ratings&lt;/a&gt; for one data point)
on the web leads me to believe I will be very disapointed.
I can&amp;#8217;t find any success stories!
Never the less, I will use this as a learning opportunity.
I&amp;#8217;m going to plung forward and try to get TurboTax working with Wine, &amp;#8230;.
and it it fails me, resort to &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;,
which appears to have at least &lt;a href="https://blogs.oracle.com/wbays/entry/turbotax_on_virtualbox_problem_solved"&gt;some success&lt;/a&gt;&amp;nbsp;stories.&lt;/p&gt;
&lt;h1&gt;Installing and Configuring&amp;nbsp;Wine&lt;/h1&gt;
&lt;p&gt;Wine can be installed via the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo add-apt-repository ppa:ubuntu-wine/ppa
sudo apt-get update
sudo apt-get install wine
sudo apt-get install cabextract
sudo apt-get install winetricks
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;winetricks&lt;/code&gt; is a script which automates the installation of various useful packages,
offering a friendly interface to do so.
The &lt;code&gt;cabextract&lt;/code&gt; package is a native Linux application that extracts Microsoft Cabinet files (&lt;span class="caps"&gt;CAB&lt;/span&gt;).
&lt;code&gt;ppa:ubuntu-wine/ppa&lt;/code&gt; will get the latest versions for Wine and keep it updated with new releases.
This is important since the Wine support team is frequently
fixing and twecking it to get Microsoft Windows software working.
To test if you got things installed properly&lt;sup id="fnref:A"&gt;&lt;a class="footnote-ref" href="#fn:A" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;,
execute one of the already installed Microsoft Windows packages.
Try the following: &lt;code&gt;wine notepad.exe&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Installing TurboTax with&amp;nbsp;Wine&lt;/h1&gt;
&lt;p&gt;Wine is complex and large.
I don&amp;#8217;t have the patience for hours of configuring and testing; 
particularly if in the end I can&amp;#8217;t print or electronically email my tax return.
I&amp;#8217;m going to plung into installing TurboTax via Wine,
and see if I can get things running with minimal&amp;nbsp;effort.&lt;/p&gt;
&lt;p&gt;So, I put the &lt;span class="caps"&gt;CD&lt;/span&gt; in the drive, right clicked on the setup.exe file, picked the menu item
&amp;#8220;Open With Wine Windows Program Loader&amp;#8221;, and got a error screen titled
&lt;a href="https://ttlc.intuit.com/questions/1899606-error-we-can-t-install-turbotax-on-your-computer-just-yet"&gt;&amp;#8220;We can&amp;#8217;t install TurboTax on your computer just yet&amp;#8230;&amp;#8221;&lt;/a&gt;.
Appears that TurboTax doesn&amp;#8217;t like Wine&amp;#8217;s version of the .&lt;span class="caps"&gt;NET&lt;/span&gt; Framework.
A little &lt;a href="http://superuser.com/questions/476872/installing-net-4-0-framework-on-wine-using-winetricks"&gt;research&lt;/a&gt; surggested that I should install .&lt;span class="caps"&gt;NET&lt;/span&gt; 4 via this&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;winetricks dotnet40
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After this, I still got a .&lt;span class="caps"&gt;NET&lt;/span&gt; related error.
Specifically, the TurboTax installer was looking for the &lt;code&gt;netfx40testapplication.exe&lt;/code&gt;.
Another quick search brought me to these bug report: #&lt;a href="http://www.winehq.org/pipermail/wine-bugs/2012-January/308034.html"&gt;1&lt;/a&gt; and &lt;a href="http://wine.1045685.n5.nabble.com/Bug-29666-New-TurboTax-2011-fails-to-install-td5161768.html"&gt;#2&lt;/a&gt;.
I have had enough &amp;#8230; on to&amp;nbsp;VirtualBox!!&lt;/p&gt;
&lt;h1&gt;Installing TurboTax with&amp;nbsp;VirtualBox&lt;/h1&gt;
&lt;p&gt;VirtualBox is being setup with Microsoft Windows (specifically Windows 8.1)
as a the Guest &lt;span class="caps"&gt;OS&lt;/span&gt; and with the native Linux (specifically Ubuntu 13.10) as the Host &lt;span class="caps"&gt;OS&lt;/span&gt;.
&lt;a href="http://www.lifehacker.com.au/2013/10/virtualbox-4-3-adds-windows-8-1-support/"&gt;VirtualBox version 4.3 has added Windows 8.1 support&lt;/a&gt;,
so that is the version I wish to install.
I initially installed VirtualBox via Unbuntu&amp;#8217;s software center
(eqivalent to using &lt;code&gt;sudo apt-get install virtualbox virtualbox-qt&lt;/code&gt;),
which installed version 4.2.16-dfsg-3, and I had to back it out.
Instead, I install VirtualBox from the Oracle maintained repository,
following the &lt;a href="https://www.virtualbox.org/wiki/Linux_Downloads"&gt;procedures outlined by Oracle&lt;/a&gt;.
I added the following lines (for the approprate linux distribution; mine is saucy)
to the &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# Oracle&amp;#39;s software repository for VirtualBox
deb http://download.virtualbox.org/virtualbox/debian saucy contrib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Downloaded the Oracle public key for the&amp;nbsp;software:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now install VirtualBox version&amp;nbsp;4.3:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get update
sudo apt-get install dkms virtualbox-4.3
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configuring VirtualBox and Installing Windows&amp;nbsp;8.1&lt;/h3&gt;
&lt;p&gt;It appears you can install 32 or 64 bit Windows (assuming you have virtualization suporting processor).
I choose the 64 bit version.
As to the installation steps, I was guided by the posting &amp;#8220;&lt;a href="http://www.geekthis.net/blog/95/windows-81-in-virtualbox"&gt;Windows 8.1 in VirtualBox&lt;/a&gt;&amp;#8220;,
and the steps are basically the&amp;nbsp;following:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure&amp;nbsp;VirtualBox&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fired up VirtualBox, clicked the &amp;#8220;New&amp;#8221; button, and used the Wizard to create a virtual partition for&amp;nbsp;Window&lt;/li&gt;
&lt;li&gt;I gave the virtual machine the name &amp;#8220;&lt;span class="caps"&gt;MS&lt;/span&gt;&amp;nbsp;Windows&amp;#8221;&lt;/li&gt;
&lt;li&gt;I allocated to the virtual machine the maximum amount of &lt;span class="caps"&gt;RAM&lt;/span&gt;, that being 3.&lt;span class="caps"&gt;584GB&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;I created a &lt;span class="caps"&gt;50GB&lt;/span&gt; virtual hard drive with a VirtualBox Disk Image (&lt;span class="caps"&gt;VDI&lt;/span&gt;).  I Choose to have the virtual drive to grow&amp;nbsp;dyanamically.&lt;/li&gt;
&lt;li&gt;I opened up &amp;#8220;Settings&amp;#8221; and under &amp;#8220;System&amp;#8221; &amp;gt; &amp;#8220;Processor&amp;#8221;, enable &amp;#8220;&lt;span class="caps"&gt;PAE&lt;/span&gt;/&lt;span class="caps"&gt;NX&lt;/span&gt;&amp;#8221;. I also increased the &lt;span class="caps"&gt;CPU&lt;/span&gt; Cores to the number supported on my box (i.e.&amp;nbsp;4).&lt;/li&gt;
&lt;li&gt;Under &amp;#8220;Display&amp;#8221; &amp;gt; &amp;#8220;Video&amp;#8221;, I increased the Video Memory as high as I can, disable 3D Acceleration but enabled 2D&amp;nbsp;Acceleration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Install Windows&amp;nbsp;8.1&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Still in the &amp;#8220;Settings&amp;#8221; window, go to &amp;#8220;Storage&amp;#8221; and under &amp;#8220;&lt;span class="caps"&gt;IDE&lt;/span&gt;&amp;#8221; where it shows &amp;#8220;Empty&amp;#8221;, click the disk next to it and installed Windows 8.1 64-bit &lt;span class="caps"&gt;DVD&lt;/span&gt; into the&amp;nbsp;drive.&lt;/li&gt;
&lt;li&gt;Still with &amp;#8220;Storage&amp;#8221;, click the disk icon right of the &amp;#8220;&lt;span class="caps"&gt;CD&lt;/span&gt;/&lt;span class="caps"&gt;DVD&lt;/span&gt; Drive&amp;#8221; and select &amp;#8220;Host Drive &amp;#8230;&amp;#8221;.  Also check &amp;#8220;Passthrough&amp;#8221;. Click &amp;#8220;&lt;span class="caps"&gt;OK&lt;/span&gt;&amp;#8221;.&lt;/li&gt;
&lt;li&gt;Select the &amp;#8220;Start&amp;#8221; button om the VirtualBox Manager&amp;nbsp;window.&lt;/li&gt;
&lt;li&gt;At this point, a window should pop up and you see the Windows 8.1 install process&amp;nbsp;begin.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installing TurboTax on&amp;nbsp;VirtualBox&lt;/h3&gt;
&lt;p&gt;This is easy.
Fire up the &amp;#8220;&lt;span class="caps"&gt;MS&lt;/span&gt; WIndows&amp;#8221; vitual machine, and load TruboTax like you would any other Microsoft Windows&amp;nbsp;application.&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Everything seems to be working perfectly within TurboTax using VirtualBox!
I believe VirtualBox is destine to stay load on my Linux box.
As to Wine, &amp;#8230;. we&amp;#8217;ll&amp;nbsp;see.&lt;/p&gt;
&lt;h1&gt;Sources&lt;/h1&gt;
&lt;p&gt;Getting Wine&amp;nbsp;Working&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tuxarena.com/static/tut_wine_guide.php"&gt;A Guide to Wine on Ubuntu for&amp;nbsp;Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.howtogeek.com/105271/how-to-run-windows-software-on-ubuntu-with-wine/"&gt;How To Run Windows Software on Ubuntu with&amp;nbsp;Wine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linuxuser.co.uk/tutorials/use-wine-to-run-windows-software-on-linux"&gt;Use Wine to run Windows software on&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tecmint.com/install-wine-on-ubuntu-and-linux-mint/"&gt;Wine 1.7.9 Released – Install on Ubuntu 13.04/12.10/12.04/11.10 and Linux Mint&amp;nbsp;16/13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thegeekstuff.com/2009/08/ubuntu-tips-how-to-use-windows-application-in-linux-desktop-distributions/"&gt;Ubuntu Tips: How To Use Windows Applications in Linux Desktop&amp;nbsp;Distributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.simplehelp.net/2007/05/18/how-to-install-windows-programs-in-linux-using-wine/"&gt;How to install Windows programs in Linux using&amp;nbsp;Wine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yolinux.com/TUTORIALS/LinuxTutorialRunMicrosoftExe.html"&gt;Running Microsoft &lt;span class="caps"&gt;DOS&lt;/span&gt; and Microsoft Windows Software on&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.winehq.org/winetricks"&gt;winetricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Getting TurboTax or Quicken&amp;nbsp;Working&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://appdb.winehq.org/objectManager.php?sClass=application&amp;amp;iId=623"&gt;History of TurboTax Support via Wine on&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.jdpfu.com/2010/11/29/solved-quicken-2011-working-on-linux"&gt;Solved-Quicken 2011 Working on&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Getting VitualBox&amp;nbsp;Working&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.linuxjournal.com/content/using-windows-xp-virtualbox-linux"&gt;Using Windows &lt;span class="caps"&gt;XP&lt;/span&gt; in VirtualBox on&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/187424/install-windows-7-through-virtual-box-in-ubuntu-12-04"&gt;Install windows 7 through virtual box in ubuntu&amp;nbsp;12.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.wikihow.com/Install-Windows-XP-on-Ubuntu-with-VirtualBox"&gt;How to Install Windows &lt;span class="caps"&gt;XP&lt;/span&gt; on Ubuntu with&amp;nbsp;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://betanews.com/2013/10/21/install-windows-8-1-on-oracle-virtualbox/"&gt;Install Windows 8.1 on Oracle&amp;nbsp;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.geekthis.net/blog/95/windows-81-in-virtualbox"&gt;Windows 8.1 in&amp;nbsp;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/community/VirtualBox/Installation"&gt;VirtualBox/Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.virtualbox.org/manual/ch01.html#idp51679504"&gt;Starting&amp;nbsp;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:A"&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;NOTE&lt;/span&gt;:&lt;/strong&gt; Use the utility &lt;a href="http://wiki.winehq.org/winecfg"&gt;&lt;code&gt;winecfg&lt;/code&gt;&lt;/a&gt; to configure Wine and change settings like
sound, graphics, Windows version, and so on.&amp;#160;&lt;a class="footnote-backref" href="#fnref:A" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Wed, 15 Jan 2014 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2014-01-15:posts/2014/Jan/15/having-fun-with-wine-virtualbox-and-turbotax/</guid><category>Wine</category><category>VirtualBox</category></item><item><title>IPython Notebook in Virtualenv</title><link>http://jeffskinnerbox.me/posts/2013/Oct/06/ipython-notebook-in-virtualenv/</link><description>&lt;p&gt;I discovered a problem with using &lt;a href="http://ipython.org/ipython-doc/rel-1.0.0/interactive/nbconvert.html"&gt;nbconvert&lt;/a&gt; for posting &lt;a href="http://ipython.org/notebook.html"&gt;IPython Notebooks&lt;/a&gt; to my blog.
Basically it doesn&amp;#8217;t work for my version of IPython, so I looked for an upgrade.
I found it but its only delivered bundled with the latest version of IPython.
Currently, I&amp;#8217;m stuck with using IPython 0.13.2 on my Ubuntu system, at least if I use the
distribution provide via Ubuntu.
And I can only expect to have problems if I try mixing an older version of IPython with the latest
version of&amp;nbsp;nbconvert.&lt;/p&gt;
&lt;p&gt;I sure Ubuntu will be getting around to supporting the latest version of IPython (i.e. IPython 1.1.0).
in the next few weeks to months, but that doesn&amp;#8217;t help me now.
I&amp;#8217;m hesitant to do a whole sale upgrade of IPython on my system since it my upset other thing I got going&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;The answer to my dilemma will be using the Python Org tool &lt;a href="https://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt; (see &lt;a href="http://www.virtualenv.org/en/latest/index.html"&gt;this&lt;/a&gt; for full documentation).
This tool will give me a virtual environment that will not disrupt my other projects.
Virtualenv is a tool to create isolated Python environments, quite like &lt;a href="https://help.ubuntu.com/community/BasicChroot"&gt;chroot jail&lt;/a&gt; on Unix systems.
In a chroot, programs cannot access anything outside of chroot but in virtualenv as the name implies,
it creates isolated environments only with respect to libraries,
but the programs can still access the files and folders normally.
With this, I can support my blog IPython 1.1.0 while also maintaining my other projects which requires IPython&amp;nbsp;0.13.2.&lt;/p&gt;
&lt;h2&gt;Virtualenv Setup and&amp;nbsp;Usage&lt;/h2&gt;
&lt;p&gt;One might think that you could just install virtualenv and IPython and go
but it turns out that there are a couple other steps needed to make this work.
The steps I outline below were derived from the posts:
&lt;a href="http://iamzed.com/2009/05/07/a-primer-on-virtualenv/"&gt;A Primer on virtualenv&lt;/a&gt;,
&lt;a href="http://www.jontourage.com/2011/02/09/virtualenv-pip-basics/"&gt;Virtualenv and pip Basic&lt;/a&gt;, and
&lt;a href="http://warpedtimes.wordpress.com/2012/09/23/a-tutorial-on-virtualenv-to-isolate-python-installations/"&gt;A tutorial on Virtualenv to isolate python installations&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 0: Check For&amp;nbsp;Installations&lt;/h3&gt;
&lt;p&gt;It&amp;#8217;s wise to check for an existing installations of virtualenv and its companion tools.
It appears possible (but I&amp;#8217;m not sure) to install multiple copies if you mix package management tools
like apt-get, pip, and easy_install.  So first perform this check to see if you get any&amp;nbsp;response:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;virtualenv --version
virtualenvwrapper --version
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/"&gt;virtualenvwrapper&lt;/a&gt; is a set of extensions to virtualenv.
The extensions include wrappers for creating and deleting virtual environments and otherwise managing your development workflow.
Use the virtualenvwrapper script to make working with and changing to/from multiple virtualenvs easy
(see &lt;a href="http://www.jontourage.com/2011/02/09/virtualenv-pip-basics/"&gt;Virtualenv and pip Basics&lt;/a&gt; for&amp;nbsp;examples).&lt;/p&gt;
&lt;h3&gt;Step 1: Install Virtualenv and&amp;nbsp;Virtualenvwrapper&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;m installing virtualenv and virtualenvwrapper but will not be using only the later here.
I want the tool installed for potential future use, but for now,
I will only have a single virtual environment that I need to work&amp;nbsp;with.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo pip install virtualenv
sudo pip install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 2: Create a&amp;nbsp;Virtualenv&lt;/h3&gt;
&lt;p&gt;The following command creates a clean virtualenv devoid of any packages in a directory called &lt;code&gt;_notebook&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;$ virtualenv --no-site-packages _notebook
New python executable in _notebook/bin/python
Installing Setuptools........................................done.
Installing Pip...............................................done.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The way virtualenv works is that it creates the directory &lt;code&gt;_notebook&lt;/code&gt; symlinks to your global python installation, as you can see clearly using the tree&amp;nbsp;utility.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;$ tree -d _notebook
_notebook
├── bin
├── include
│   └── python2.7 -&amp;gt; /usr/include/python2.7
├── lib
│   └── python2.7
│       ├── distutils
│       ├── encodings -&amp;gt; /usr/lib/python2.7/encodings
│       ├── lib-dynload -&amp;gt; /usr/lib/python2.7/lib-dynload
│       └── site-packages
│           ├── _markerlib
│           ├── pip
│           │   ├── backwardcompat
│           │   ├── commands
│           │   ├── vcs
│           │   └── vendor
│           │       ├── distlib
│           │       │   └── _backport
│           │       └── html5lib
│           │           ├── filters
│           │           ├── serializer
│           │           ├── treebuilders
│           │           ├── treewalkers
│           │           └── trie
│           ├── pip-1.4.1-py2.7.egg-info
│           ├── setuptools
│           │   ├── _backport
│           │   │   └── hashlib
│           │   ├── command
│           │   └── tests
│           └── setuptools-0.9.8-py2.7.egg-info
└── local
    ├── bin -&amp;gt; /home/jeff/myblog/_notebook/bin
    ├── include -&amp;gt; /home/jeff/myblog/_notebook/include
    └── lib -&amp;gt; /home/jeff/myblog/_notebook/lib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the &lt;code&gt;-–no-site-packages&lt;/code&gt; option is for you to isolate your environment from the main site packages directory.
By default, virtualenv will symlink to your system’s site-packages if you install a package in the virtualenv that is already installed on your system.
If you use the &lt;code&gt;--no-site-packages&lt;/code&gt; option you are starting with a bare Python install and will need to install all the things you have forgotten about since the first time you set your system.
Do you want this virtualenv to use packages from your system site-packages, if not, then&lt;br /&gt;
pass in the &lt;code&gt;-–no-site-packages&lt;/code&gt; switch when creating your&amp;nbsp;virtualenv.&lt;/p&gt;
&lt;h3&gt;Step 3: Use the&amp;nbsp;Environment&lt;/h3&gt;
&lt;p&gt;So we now have a new virtualenv, it now has to be activated. To do this, change to the virtualenv directory you just created and source the activation script from the bin directory in your&amp;nbsp;virtualenv:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;~/myblog$ cd _notebook
~/myblog/_notebook$ source bin/activate
(_notebook)~/myblog/_notebook$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that the command prompt is modified after the sourcing.
When you activate a virtualenv, it modifies your current prompt to prepend the name of the virtualenv in parentheses so that you know at a glance you have it active.
Other than the prompt change, the main changes the activate script makes&amp;nbsp;are:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;VIRTUAL_ENV=&amp;quot;/home/jeff/myblog/_notebook&amp;quot;
export VIRTUAL_ENV

_OLD_VIRTUAL_PATH=&amp;quot;$PATH&amp;quot;
PATH=&amp;quot;$VIRTUAL_ENV/bin:$PATH&amp;quot;
export PATH
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This sets up an environment variable with the virtualenv path and also modifies your path so the bin directory in the virtualenv is first.
This is important since running python from the command line when your virtualenv is active runs it from there instead of your system path.
This means through the magic of the Python site module the site-packages in your virtualenv will be in sys.path and not your system’s&amp;nbsp;site-packages.&lt;/p&gt;
&lt;h3&gt;Step 4: Installing Packages in&amp;nbsp;Virtualenv&lt;/h3&gt;
&lt;p&gt;Now that we are in the virtual envirnment, if you list the installed python packages,
you&amp;#8217;ll find very&amp;nbsp;little:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;(_notebook)~/myblog/_notebook$ pip freeze
argparse==1.2.1
wsgiref==0.1.2
(_notebook)~/myblog/_notebook$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can simply install your desired additional packages using pip.
This does not require &lt;code&gt;sudo&lt;/code&gt; access, as all the packages are installed in the virtualenv  &lt;code&gt;_notebook&lt;/code&gt; created.
For my IPython Notebook blogging effort, I require the following&amp;nbsp;packages:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;pip install numpy
pip install matplotlib
pip install pandas
pip install scipy
easy_install yolk
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To install the basemap for matplotlib, you&amp;#8217;ll need to &lt;a href="http://matplotlib.org/basemap/users/installing.html"&gt;download&lt;/a&gt; the source from Matplotlib Org website.
Basemap is an add-on toolkit for matplotlib that lets you plot data on map projections with coastlines, lakes, rivers and political&amp;nbsp;boundaries.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;tar -zxvf basemap-1.0.7.tar.gz
cd basemap-1.0.7
cd geos-3.3.3
export GEOS_DIR=&amp;quot;/home/jeff/myblog/_notebook/lib&amp;quot;
./configure --prefix=$GEOS_DIR
make; make install
cd ..
python setup.py install
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 5: Installing&amp;nbsp;IPython&lt;/h3&gt;
&lt;p&gt;The final install is IPython version 1.1.0 itself, but there are several dependencies packages that should be installed.
These dependencies should be load automatically, but in case there are problems,
they are &lt;a href="http://ipython.org/ipython-doc/stable/install/install.html"&gt;documented on the IPython website&lt;/a&gt;.
You can download the latest IPython package from the &lt;a href="https://pypi.python.org/pypi/ipython"&gt;Python Org website&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;unzip ipython-1.1.0.zip 
cd ipython-1.1.0
easy_install ipython[all]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can validate that IPython has been installed by running &lt;code&gt;ipython notebook&lt;/code&gt;.
I did this by moving my IPython Notebooks that were destine for my blog to a directory called &lt;code&gt;ipnb&lt;/code&gt; within &lt;code&gt;_notebook&lt;/code&gt;.
It is with &lt;code&gt;~/myblog/_notebook/ipnb&lt;/code&gt;.  More on this in another&amp;nbsp;posting.&lt;/p&gt;
&lt;h2&gt;Virtualenv&amp;nbsp;Usage&lt;/h2&gt;
&lt;p&gt;For further usage information, check out the tutorials:
&lt;a href="http://simononsoftware.com/virtualenv-tutorial/"&gt;Virtualenv Tutorial&lt;/a&gt;,
and &lt;a href="http://www.silverwareconsulting.com/index.cfm/2012/7/24/Getting-Started-with-virtualenv-and-virtualenvwrapper-in-Python"&gt;Getting Started with virtualenv and virtualenvwrapper in Python&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an environment called &amp;#8220;foobar&amp;#8221;: &lt;code&gt;virtualenv foobar&lt;/code&gt;.  With this, virtualenv inherits packages from the system&amp;#8217;s default site-packages directory.  This is especially useful when relying on certain packages being available, so you don&amp;#8217;t have to go through installing them in every environment.  If you wish to install everything fresh, use &lt;code&gt;virtualenv --no-site-packages foobar&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Activate the environment by sourcing its activate script, which is located in the environment&amp;#8217;s bin/ directory: &lt;code&gt;source foobar/bin/activate&lt;/code&gt;.  This will change your $&lt;span class="caps"&gt;PATH&lt;/span&gt; so its first entry is the virtualenv’s bin/&amp;nbsp;directory.&lt;/li&gt;
&lt;li&gt;To install a package in your virtual environment, make sure the environment is active an then use &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;easy_install&lt;/code&gt; or any of the standard python package management tools. You&amp;#8217;ll see that executable scripts are placed in foobar/bin/ and eggs in&amp;nbsp;foobar/lib/python2.X/site-packages/.&lt;/li&gt;
&lt;li&gt;Yolk is a small command line tool which can, among other things, list the currently installed Python packages in your environment: &lt;code&gt;yolk -l&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To leave an environment, simply run &lt;code&gt;deactivate&lt;/code&gt;. (Note: if you run &lt;code&gt;yolk -l&lt;/code&gt; once deactivated, you&amp;#8217;ll get no packages&amp;nbsp;listed.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Warning&amp;nbsp;Message&lt;/h2&gt;
&lt;p&gt;For reasons I don&amp;#8217;t full understand, after installing virtualenv, I repeatedly
got the warning message&amp;nbsp;below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;/usr/local/bin/virtualenv:5: UserWarning: Module dap was already imported from None, but /usr/lib/python2.7/dist-packages is being added to sys.path
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I took the advice given at the posting &amp;#8220;&lt;a href="http://jhshi.me/2013/04/13/userwarning-module-dap-was-already-imported-from-none/"&gt;UserWarning: Module Dap Was Already Imported From None&lt;/a&gt;&amp;#8221; to clear the&amp;nbsp;problem.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 06 Oct 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-10-06:posts/2013/Oct/06/ipython-notebook-in-virtualenv/</guid><category>IPython Notebook</category><category>Virtualenv</category></item><item><title>I’m Moving so I can Blog with IPython Notebook</title><link>http://jeffskinnerbox.me/posts/2013/Sep/01/im-moving-so-i-can-blog-with-ipython-notebook/</link><description>&lt;p&gt;&lt;a href="http://www.dummies.com/store/product/Signals-and-Systems-For-Dummies.productCd-111847581X,navId-322489,descCd-description.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="S&amp;S logo" src="/images/SignalsandSystemsForDummies.jpg" width="20%" height="20%" /&gt;
&lt;/a&gt;
To gain a deeper understanding of the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki" title="GNU Radio home page"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio&lt;/a&gt; software, I want to rebuild
some skills &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; insights in digital signal processing.  But before I take on this topic,
I want to refresh my signals &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; systems skills I learned long ago while in college.
I have chosen Mark Wickert’s book, &lt;a href="http://www.dummies.com/store/product/Signals-and-Systems-For-Dummies.productCd-111847581X,navId-322489,descCd-description.html" title="The book Signals and Systems For Dummies web site"&gt;Signals and Systems For Dummies&lt;/a&gt;, to do&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.packtpub.com/learning-ipython-for-interactive-computing-and-data-visualization/book"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: right" alt="S&amp;S logo" src="/images/learning-ipython-for-interactive-computing-and-data-visualization.jpg" width="20%" height="20%" /&gt;
&lt;/a&gt;
Go ahead and laugh if you wish, but I got good reasons for choosing this book.
I like its brevity, since I don’t want to spend a great deal of time re-honing
these old skills (I expect them to come back quickly), and its use of &lt;a href="http://ipython.org/" title="IPython's web page"&gt;IPython&lt;/a&gt;
will help me master a powerful tool that I foresee using within this blog;
specifically the &lt;a href="http://ipython.org/notebook.html" title="IPython Notebook's web page"&gt;IPython Notebook&lt;/a&gt;.  To begin learning IPython, I’m currently
reading &lt;a href="http://www.packtpub.com/learning-ipython-for-interactive-computing-and-data-visualization/book" title="The books web page"&gt;Learning IPython for Interactive Computing and Data Visualization&lt;/a&gt; by Cyrille Rossant.
So it’s currently “back to school” for me on many&amp;nbsp;levels.  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://ipython.org/notebook.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="S&amp;S logo" src="/images/ipython-notebook-screen.png" width="20%" height="20%" /&gt;
&lt;/a&gt;
So this brings me to the topic of this posting.  Initially I considered moving
my blog off of WordPress.com to a WordPress.org hosting site.  This should allow
me to post IPython Notebook pages.  WordPress.com is very restrictive on what you can do with your blog,
but the WordPress software, when &lt;a href="http://www.wpbeginner.com/beginners-guide/self-hosted-wordpress-org-vs-free-wordpress-com-infograph/"&gt;self hosted via WordPress.org&lt;/a&gt;, can provide you a great deal of blogging freedom.
I need to take advantage of some of the powerful WordPress Plugins and WordPress.com
will not support any of them.  Moving to a self-hosted WordPress blog doesn’t
appear to be very difficult.  The biggest trick will be picking the right web hosting
company that is strong WordPress supporter who will make it easily move my blog from WordPress.com to&amp;nbsp;WordPress.org.&lt;/p&gt;
&lt;p&gt;I then took a closer look at how others have successfully using IPython Notebook for blogging.
I took a very close look at &lt;a href="http://carlboettiger.info/"&gt;Carl Boettiger’s&lt;/a&gt; &lt;a href="http://carlboettiger.info/2012/09/28/Welcome-to-my-lab-notebook.html"&gt;Online Lab Notebook&lt;/a&gt;.
This introduced me to &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; and &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;.
With these tools you can create an archived, static site that is hosted for free.
I saw the synergy between these tools and how I work with my Linux box, electronics,
and now IPython and its seemed like the way to&amp;nbsp;go.&lt;/p&gt;
&lt;p&gt;Jekyll is a simple, blog aware, static site generator. It takes a template directory (representing the raw form of a website), runs it through Textile or Markdown and Liquid converters, and spits out a complete, static website suitable for serving with Apache or your favorite web server.
The site “&lt;a href="http://www.andrewmunsell.com/tutorials/jekyll-by-example/index.html#why-jekyll"&gt;Learning Jekyll By Example: Build a Jekyll Website, Start to Finish&lt;/a&gt;” says it&amp;nbsp;well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jekyll can be hosted on any web hosting service that serves static&amp;nbsp;files.&lt;/li&gt;
&lt;li&gt;Jekyll-powered websites are also extremely&amp;nbsp;secure.&lt;/li&gt;
&lt;li&gt;Jekyll is mainly targeted at tech-savvy&amp;nbsp;bloggers.&lt;/li&gt;
&lt;li&gt;But what Jekyll lacks in newbie-friendliness it makes up for in power and&amp;nbsp;flexibility.&lt;/li&gt;
&lt;li&gt;Jekyll allows you, the content author, to display your work as you see fit, without the typical restrictions imposed by other blogging&amp;nbsp;platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Installing&amp;nbsp;Jekyll&lt;/h3&gt;
&lt;p&gt;Following the instructions on the &lt;a href="http://jekyllrb.com/docs/quickstart/"&gt;Jekyll&lt;/a&gt; and &lt;a href="http://askubuntu.com/questions/305884/how-to-install-jekyll"&gt;Ubuntu&lt;/a&gt; web sites,
I used the following to install the required software and get a skeleton established for my&amp;nbsp;blog.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install ruby1.9.1-dev
sudo apt-get install rdiscount
sudo gem install jekyll
sudo apt-get install rake
jekyll new myblog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What is produced looks like&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="terminal image" src="/images/myblog-directory-structure.png" title="directory tree structure created by Jekyll" /&gt;&lt;/p&gt;
&lt;p&gt;To see how this will be rendered on within a browser, execute &lt;code&gt;jekyll serve --watch&lt;/code&gt; within &lt;code&gt;~/myblog&lt;/code&gt;
and then set your browse to &lt;code&gt;http://localhost:4000&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Moving Blog from&amp;nbsp;WordPress.com&lt;/h3&gt;
&lt;p&gt;Next, I want to import my old website to myblog and convert it to Jekyll.
First I need to export my site, and I can do this by going to
&lt;code&gt;https://jeffskinnerbox.wordpress.com/wp-admin/export.php&lt;/code&gt; and, executing the commands there,
place the &lt;span class="caps"&gt;HTML&lt;/span&gt; file created in a temporary place.  Then install these&amp;nbsp;tools:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo gem install jekyll-import --pre
sudo gem install hpricot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To do the actual conversion and down loading of the site, you use the&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;jekyll import wordpressdotcom --source ~/tmp/jeff039sskinnerbox.wordpress.2013-08-14.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creating Your Local Git&amp;nbsp;Repository&lt;/h3&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd ~/myblog
git init
git add .
git commit -m &amp;#39;Initial commit&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creating the GitHub Page (Remote&amp;nbsp;Repository)&lt;/h3&gt;
&lt;p&gt;Github Pages provides a simple service for serving up static &lt;span class="caps"&gt;HTML&lt;/span&gt; from a GitHub repository.
It’s the perfect place for project documentation, when combined with Jekyll it can
support a blog.  The post &lt;a href="http://xlson.com/2010/11/09/getting-started-with-github-pages.html"&gt;Getting started with GitHub Pages&lt;/a&gt; provide a good overview.
The steps to get the web site up and running go like&amp;nbsp;this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On my GitHub site, I created a new Repository call&amp;nbsp;jeffskinnerbox.github.com &lt;/li&gt;
&lt;li&gt;From the &lt;span class="caps"&gt;PC&lt;/span&gt;, load the web site to the GitHub&amp;nbsp;Repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;git remote add origin http://github.com/jeffskinnerbox/jeffskinnerbox.github.com
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Verify that your web page is availalbe by going to &lt;a href="http://jeffskinnerbox.github.com/"&gt;http://jeffskinnerbox.github.com/&lt;/a&gt;.  This could take up to 10 minutes for GitHub the first&amp;nbsp;time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Using a Custom Domain&amp;nbsp;Name&lt;/h3&gt;
&lt;p&gt;GitHub Pages allows you to direct a domain name of your choice at your GitHup Page.
My custom domain name is &lt;code&gt;www.jeffskinnerbox.me&lt;/code&gt;. To do the setup, I found the postings
&lt;a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages"&gt;Setting up a custom domain with Pages&lt;/a&gt; and 
&lt;a href="http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap/"&gt;Setting the &lt;span class="caps"&gt;DNS&lt;/span&gt; for GitHub Pages on Namecheap&lt;/a&gt; helful.  It goes like&amp;nbsp;this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Telling the GitHub server to serve from the custome domain by creating a file named &lt;code&gt;CNAME&lt;/code&gt; in the root of your site and put string with the domain (i.e. jeffskinnerbox.me) into the&amp;nbsp;file.&lt;/li&gt;
&lt;li&gt;Go to your Domain Name Registrar and make the changes outline in the posts referance above.  It may take as long as 24 hours for these changes to take&amp;nbsp;effect.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Closing&lt;/h4&gt;
&lt;p&gt;All in all, I am very pleased with Jekyll so far. It did take a little longer than I’d have thought to migrate this blog as it is from WordPress, while also preserving the site’s characteristics, but it didn’t take too long and I love the results.
I doubt I would ever want to look&amp;nbsp;back! &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 01 Sep 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-09-01:posts/2013/Sep/01/im-moving-so-i-can-blog-with-ipython-notebook/</guid><category>IPython</category><category>Jekyll</category><category>Bootstrap</category><category>Blog</category></item><item><title>Building My Linux Box...The Implementation</title><link>http://jeffskinnerbox.me/posts/2013/Aug/01/building-my-linux-box-the-implementation/</link><description>&lt;p&gt;&lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Ubuntu 13.04 Raring Ringtail" src="/images/ubuntu-13-04-raring-ringtail.jpg" width="15%" height="15%" /&gt;
In an earlier post, I outlined &lt;a href="http://jeffskinnerbox.wordpress.com/2013/04/28/building-my-linux-box-the-plan/"&gt;my plan for building a Linux Box&lt;/a&gt;.  Here I will post how that plan was ultimately implemented. Life has taught me that all good planning is ultimately undone, and at some point, you must improvise.  That has also proven true for this quest to up grade my computation.  Specifically:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;After ordering all the hardware, it came to me that it was dumb to attempt to reuse my old semi-reliable, slow &lt;span class="caps"&gt;CD&lt;/span&gt; drive.  So I purchase the &lt;span class="caps"&gt;HP&lt;/span&gt; 24X Multiformat &lt;span class="caps"&gt;DVD&lt;/span&gt;/&lt;span class="caps"&gt;CD&lt;/span&gt; Writer (dvd1260i) at Best Buy for &lt;mathjax&gt;$40.&lt;/li&gt;
    &lt;li&gt;I discovered that the my old PC had &lt;a href="http://www.webopedia.com/TERM/A/ATA.html"&gt;ATA&lt;/a&gt; hard drives (commonly called an IDE drive) and my new Mobo only supports &lt;a href="http://www.webopedia.com/TERM/S/Serial_ATA.html"&gt;SATA&lt;/a&gt; (SATA 3Gb/s &amp;amp; 6GB/s and it includes an external eSATA port).   This blows my plan to reuse my existing hard drives ... stupid me, I should have checked.  I did a quick scan for ATA controller cards and found a few (not many) for $&lt;/mathjax&gt;15 to &lt;mathjax&gt;$30.  I could buy the card and make this work but it doesn't seem like a good investment.  The drives are 400G drives and has a maximum data transfer rate of about 133MB/s (i.e. ATA/66).  The maximum data transfer rates of SATA II and SATA III are 300 MB/s and 600 MB/s, respectively.  I can buy a Seagate - Barracuda 500GB SATA II Internal Hard Drive for $&lt;/mathjax&gt;70.  Given my objective to increase the performance of my computing experience, buying a new &lt;span class="caps"&gt;SATA&lt;/span&gt; &lt;span class="caps"&gt;III&lt;/span&gt; hard drive should have been part of&amp;nbsp;the original plan.&lt;/li&gt;
    &lt;li&gt;After &lt;a href="http://www.cyberciti.biz/tips/raid-hardware-vs-raid-software.html"&gt;reading up on &lt;span class="caps"&gt;RAID&lt;/span&gt;&lt;/a&gt; and the Intel Rapid Storage Technology (&lt;span class="caps"&gt;RST&lt;/span&gt;), I concluded that it would be best to do a Software Raid and not use &lt;span class="caps"&gt;RST&lt;/span&gt;.&lt;/li&gt;
    &lt;li&gt;While I assumed in my original plan that I would dual boot the box with Linux and &lt;span class="caps"&gt;MS&lt;/span&gt; Windows, the &lt;a href="http://jeffskinnerbox.wordpress.com/2013/04/28/building-my-linux-box-the-plan/"&gt;comment from armahillo@gmail.com &lt;/a&gt;convinced me of what I suspected I should do; and that was to make &lt;a href="http://www.winehq.org/"&gt;wine&lt;/a&gt;, &lt;a href="http://www.mono-project.com/Main_Page"&gt;mono&lt;/a&gt;, and &lt;a href="http://www.playonlinux.com/"&gt;PlayOnLinux&lt;/a&gt; work for me.  While I haven&amp;#8217;t stressed them, so far so good.  I have not installed VirtualBox and I suspect I will not &amp;#8230; unless I get&amp;nbsp;desperate.&lt;/li&gt;
    &lt;li&gt;I was planning to reuse my old keyboard and mouse, but you know, I hated that keyboard and the mouse was already acting badly and about to die on me.  So I ended up replacing them with sometime worthy of my new&amp;nbsp;system.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Configuring&amp;nbsp;Ubuntu&lt;/h2&gt;
You&amp;#8217;ll find many recommendations on how to jazz up a newlly install Ubuntu system.  I found some of these suggestions useful:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://debianhelp.wordpress.com/2012/09/28/to-do-list-after-installing-ubuntu-13-04-aka-raring-ringtail-operating-system/"&gt;To Do List After installing Ubuntu 13.04 aka Raring Ringtail &lt;span class="caps"&gt;OS&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.noobslab.com/2013/04/tweaksthings-to-do-after-install-of.html"&gt;Things/Tweaks to do after Install of Ubuntu 13.04 Raring&amp;nbsp;Ringtail&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://mambochimbo.blogspot.com/2013/05/to-do-top-things-to-do-after-installing.html"&gt;Top things to do after installing Ubuntu&amp;nbsp;13.04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Installing &amp;#8220;dot&amp;#8221;&amp;nbsp;Files&lt;/h2&gt;
Like may, over the years I have made a large time investment in tuning my &lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.vimrc&lt;/code&gt;, and other such resource files.  I installed my beloved &amp;#8220;dot&amp;#8221; files from my &lt;a href="https://github.com/jeffskinnerbox"&gt;Git repository&lt;/a&gt;.
&lt;h2&gt;Installing Google Chrome’s Native &lt;span class="caps"&gt;PDF&lt;/span&gt; Reader in&amp;nbsp;Chromium&lt;/h2&gt;
Chromium is a fully open-source version of Google&amp;#8217;s Chrome, and for licensing reasons, it doesn&amp;#8217;t come packaged with the integrated Flash or a native &lt;span class="caps"&gt;PDF&lt;/span&gt; reader.  Lucky, there is a work around and that is documented here: &lt;a href="http://www.omgubuntu.co.uk/2010/07/use-google-chrome%E2%80%99s-native-pdf-reader-in-chromium"&gt;Use Google Chrome’s Native &lt;span class="caps"&gt;PDF&lt;/span&gt; reader in Chromium&lt;/a&gt;.
&lt;h2&gt;Installing My Squeeze&amp;nbsp;Box&lt;/h2&gt;
I have a &lt;a href="http://www.mysqueezebox.com/index/Home"&gt;SqueezeBox&lt;/a&gt; device in my workshop for playing music.  On my old &lt;span class="caps"&gt;PC&lt;/span&gt;, I had installed the SlimServer which would provide the music stream.  I want to now reestablish that capability on the Linux box. The post &lt;a href="http://www.ehow.com/how_7314755_use-squeezebox-ubuntu.html"&gt;How to Use Squeezebox With Ubuntu&lt;/a&gt; and the &lt;a href="http://wiki.slimdevices.com/index.php/DebianPackage"&gt;Logitech SqueezeBox Wiki&lt;/a&gt; gives you all the information you should&amp;nbsp;need.&lt;/p&gt;
&lt;p&gt;The Ubuntu (Debian) software for the &lt;a href="http://wiki.slimdevices.com/index.php/Logitech_Media_Server"&gt;SqueezeCenter&lt;/a&gt; or now called the Logitech Media Server (formerly known as SlimServer) is maintained by Logitech, and therefore, will not be installed via &lt;code&gt;get-apt&lt;/code&gt;.  To make it part of the package resource list (used to locate archives of the package distribution system in use on the system), you need to update the &lt;a href="http://linux.die.net/man/5/sources.list"&gt;&lt;code&gt;sources.list&lt;/code&gt;&lt;/a&gt; file.  To do this, do the following:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo vim /etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
Scroll to the bottom of the file and enter the following information and then&amp;nbsp;save:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;## This software is not part of Ubuntu, but is offered by Logitech for the Logitech Media Server (formerly known as SqueezeCenter or SlimServer).
deb http://debian.slimdevices.com stable main
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now do the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get remove --purge logitechmediaserver
sudo apt-get update
sudo apt-get install logitechmediaserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now open a browser and type &amp;#8220;&lt;code&gt;http://desktop:9000&lt;/code&gt;&amp;#8221; as the &lt;span class="caps"&gt;URL&lt;/span&gt;, where &amp;#8220;desktop&amp;#8221; is the name of your Linux system.  This brings you to a Squeezebox interface to configure the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;If you want to start/stop Logitech Media Server manually you can run:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo /etc/init.d/logitechmediaserver stop&lt;/code&gt;
and
&lt;code&gt;sudo /etc/init.d/logitechmediaserver start&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;iPod&amp;nbsp;Support&lt;/h2&gt;

&lt;p&gt;Ubuntu comes with &lt;a href="https://wiki.gnome.org/Apps/Rhythmbox"&gt;Rhythmbox&lt;/a&gt; as its music playing application and can be used to synch with a iPod. 
Also, you&amp;#8217;ll want to install several Rhythmbox &lt;a href="http://www.webupd8.org/2012/08/rhythmbox-third-party-plugins-ubuntu-ppa.html"&gt;plugins&lt;/a&gt;.
That can be done&amp;nbsp;via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo add-apt-repository ppa:fossfreedom/rhythmbox-plugins
sudo add-apt-repository ppa:phw/musicbrainz
sudo apt-get update
sudo apt-get install rhythmbox-plugin-complete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After installing any of the above Rhythmbox plugins, enable them from the main menu: Rhythmbox &amp;gt;&amp;nbsp;Plugins.&lt;/p&gt;
&lt;h2&gt;Setting-Up Harmony&amp;nbsp;Remote&lt;/h2&gt;

&lt;p&gt;I have the &lt;a href="http://www.logitech.com/en-us/product/harmony-remote-650"&gt;Logitech Harmony 650 Universal Remote Control&lt;/a&gt; for my home theater system.  To program the device, it must be tethered to a web site via a Windows or Mac &lt;span class="caps"&gt;PC&lt;/span&gt;.  The Harmony web site does reference some &lt;a href="http://forums.logitech.com/t5/Harmony-Remotes/Harmony-Linux-support/td-p/294061"&gt;Linux support done by others&lt;/a&gt;.  The posting &amp;#8220;&lt;a href="http://openattitude.com/2011/01/27/how-to-set-up-a-harmony-remote-using-linux/"&gt;How to set up a Harmony remote using Linux&lt;/a&gt;&amp;#8221; and &amp;#8220;&lt;a href="http://madabar.com/techblog/2011/09/09/logitech-harmony-universal-remote-linux-software-support/"&gt;Logitech Harmony Universal Remote Linux Software Support&lt;/a&gt;&amp;#8221; give you the basics of what you need to do.  Within these sites you lean about the utilities &lt;a href="http://www.phildev.net/harmony/"&gt;&lt;code&gt;concordance&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;a href="http://sourceforge.net/projects/congruity/"&gt;congruity&lt;/a&gt;&lt;/code&gt;. The first utility provides most of the functionality of the Windows software provided by Logitech and the second is a &lt;span class="caps"&gt;GUI&lt;/span&gt; application for programming Logitech Harmony remote using concordance.  To install these utilities, do the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install concordance
sudo apt-get install congruity
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You also have to configure the web browser to ask what to do with download links. It is best to use Firefox and you can configure downloads via: Edit-&amp;gt;Preferences-&amp;gt;General-&amp;gt;Downloads-&amp;gt;Always ask me where to save&amp;nbsp;files.&lt;/p&gt;
&lt;p&gt;Now plug the remote into the &lt;span class="caps"&gt;PC&lt;/span&gt; using the provided cable, and enter the command: &lt;code&gt;sudo concordance -i -v&lt;/code&gt;.  You should get a bunch of data and the word &amp;#8220;Success&amp;#8221;, verifying that you can talk to the&amp;nbsp;device.&lt;/p&gt;
&lt;p&gt;Now go through the following process:
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Plug in the remote via the provided &lt;span class="caps"&gt;USB&lt;/span&gt;&amp;nbsp;cable.&lt;/li&gt;
    &lt;li&gt;Visit the Harmony Remote&amp;#8217;s member site &lt;a href="http://members.harmonyremote.com/EasyZapper/New/Main.asp?WebProcessAction=Start&amp;amp;ClassId=HarmonyProcess%2EProcLogin&amp;amp;RelativePath=ProcLogin%2F&amp;amp;ReturnUrl=%2FEasyZapper%2FUserHome%2Easp&amp;amp;AccountType=Normal&amp;amp;Error=&amp;amp;UserName=&amp;amp;Password=&amp;amp;BrowserType=Mozilla%2F5%2E0%20%28X11%3B%20Linux%20i686%29%20AppleWebKit%2F537%2E22%20%28KHTML%2C%20like%20Gecko%29%20Ubuntu%20Chromium%2F25%2E0%2E1364%2E160%20Chrome%2F25%2E0%2E1364%2E160%20Safari%2F537%2E22"&gt;&lt;span class="caps"&gt;URL&lt;/span&gt;&lt;/a&gt;.  This appears to be a legacy support site and Logitech site listed in the documentation with the device will not work under&amp;nbsp;Linux.&lt;/li&gt;
    &lt;li&gt;Create an account or login into your existing&amp;nbsp;account.&lt;/li&gt;
    &lt;li&gt;Skip/ignore the “you need to update your software” steps, and eventually a download prompt&amp;nbsp;appears.&lt;/li&gt;
    &lt;li&gt;Choosing ‘open’ rather than ‘save’ impressively results in the Congruity graphical setup up&amp;nbsp;launching.&lt;/li&gt;
    &lt;li&gt;Step through the setup boxes as&amp;nbsp;prompted.&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
&lt;h2&gt;Setting-Up Keyboard &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;Mouse&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/logitech-wireless-illuminated-keyboard-k800.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Logitech Wireless Illuminated Keyboard K800" src="/images/logitech-wireless-illuminated-keyboard-k800.jpg?w=150" width="150" height="70" /&gt;
&lt;/a&gt;
 To improve my driving experience, I purchased the
&lt;a href="http://www.logitech.com/en-us/product/wireless-illuminated-keyboard-k800"&gt;Logitech Wireless Illuminated Keyboard K800&lt;/a&gt;
and the
&lt;a href="http://www.logitech.com/en-us/product/wireless-mouse-m510"&gt;Logitech M510 Wireless Mouse&lt;/a&gt;.
These devices use the &lt;a href="http://www.logitech.com/en-us/promotions/6072"&gt;Logitech Unifying wireless technology&lt;/a&gt;, which allows a single wireless receiver to connect with multiple Unifying devices.  I plugged in the mouse&amp;#8217;s receiver  and in short order the mouse was working.
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/logitech-m510-wireless-mouse.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Logitech M510 Wireless Mouse" src="/images/logitech-m510-wireless-mouse.jpg" width="75" height="57" /&gt;
&lt;/a&gt;
I was a bit concerned about the ability of the receiver to support multiple device (i.e. the keyboard) simultaneously under Linux.
Doing a quick search I found a post discussing how to do the &lt;a href="http://askubuntu.com/questions/113984/is-logitechs-unifying-receiver-supported"&gt;device pairing under Linux&lt;/a&gt;.  &lt;a href="https://lekensteyn.nl/logitech-unifying.html#ltunify"&gt;To install&lt;/a&gt; the &lt;a href="https://git.lekensteyn.nl/ltunify/"&gt;&lt;code&gt;ltunify&lt;/code&gt;&lt;/a&gt; pairing software, and do the pairing, do the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd ~/src
git clone https://git.lekensteyn.nl/ltunify.git
cd ltunify
make install-home&amp;lt;/code&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To list the devices that are paired: &lt;code&gt;sudo ltunify list&lt;/code&gt;
To pair a device: &lt;code&gt;sudo ltunify pair&lt;/code&gt;, then turn your wireless device off and on to start pairing.
To unpair a device: &lt;code&gt;sudo ltunify unpair mouse&lt;/code&gt;
To get help: &lt;code&gt;sudo ltunity --help&lt;/code&gt;
&lt;h2&gt;Mouse&amp;nbsp;Xbindkeys&lt;/h2&gt;
The M510 mouse has extra buttons on its left side and the scroll wheel  has a side-to-side click, but out of the box,the don&amp;#8217;t do anything under Linux.  It would be nice to make use of these extra buttons.  To address this problem, I found pointers in these posts: &lt;a href="http://ubuntuforums.org/showthread.php?t=1957300"&gt;How to get all those extra mouse buttons to work&lt;/a&gt;, &lt;a href="http://askubuntu.com/questions/24916/how-do-i-remap-certain-keys"&gt;How do I remap certain keys&lt;/a&gt;,  &lt;a href="http://blog.hanschen.org/2009/10/13/mouse-shortcuts-with-xbindkeys/"&gt;Mouse shortcuts with xbindkeys&lt;/a&gt;, and &lt;a href="http://forums.logitech.com/t5/Mice-and-Pointing-Devices/Guide-for-setup-Performance-MX-mouse-on-Linux-with-KDE/td-p/517167"&gt;Guide for setup Performance &lt;span class="caps"&gt;MX&lt;/span&gt; mouse on Linux (with &lt;span class="caps"&gt;KDE&lt;/span&gt;)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Basically, using&lt;a href="http://www.nongnu.org/xbindkeys/#utilisation"&gt; Xbindkeys&lt;/a&gt;, I want to map the mouse buttons with desired actions. I want to setup the M510 mouse extra buttons as follows:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Left-side Button&lt;/strong&gt;: &lt;strong&gt;up&lt;/strong&gt; mapped to &lt;strong&gt;Page Up&lt;/strong&gt; and &lt;strong&gt;down&lt;/strong&gt; mapped to &lt;strong&gt;Page&amp;nbsp;Down&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;move left&lt;/strong&gt; mapped to &lt;strong&gt;Copy&lt;/strong&gt; and &lt;strong&gt;move right&lt;/strong&gt; mapped to &lt;strong&gt;Paste&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;press&lt;/strong&gt; mapped to &lt;strong&gt;Paste&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;a href="http://linux.die.net/man/1/xev"&gt;&lt;code&gt;xev&lt;/code&gt;&lt;/a&gt; prints the contents of X events by creating a window and then asks the X Server to send it events whenever anything happens to the window.  It&amp;#8217;s sort of a keyboard and mouse events sniffer.  If we know what event name the X Server gives to our buttons, then we can remap them. Using this program, we find out the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Left-side Button&lt;/strong&gt;: &lt;strong&gt;up&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button&amp;nbsp;9&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Left-side Button&lt;/strong&gt;: &lt;strong&gt;down&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button&amp;nbsp;8
&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;move left&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button&amp;nbsp;6&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;move right&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button&amp;nbsp;7&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Scroll Wheel&lt;/strong&gt;: &lt;strong&gt;press&lt;/strong&gt; is known by the X Server as &lt;strong&gt;button&amp;nbsp;2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Now we need a mechanism to re-map mouse (or keyboard) button inputs.  &lt;a href="https://wiki.archlinux.org/index.php/Xbindkeys"&gt;&lt;code&gt;Xbindkeys&lt;/code&gt;&lt;/a&gt; is is a X Windows program that enables us to bind commands to certain keys or key combinations on the keyboard and it will also work for the mouse.  The file  &lt;code&gt;~/.xbindkeysrc&lt;/code&gt; is what &lt;code&gt;xbindkeys&lt;/code&gt; uses as a configuration file to link a command to a key/button on your keyboard/mouse.  There is also &lt;code&gt;xbindkeys_config&lt;/code&gt; is an easy to use gtk program for configuring &lt;code&gt;xbindkeys&lt;/code&gt;. To install these tools, do the following:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install xautomation xbindkeys xbindkeys-config&lt;/code&gt;&lt;/p&gt;
To create your initial xbindkeys configuration file, just run the following command:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;xbindkeys --defaults &amp;gt; $HOME/.xbindkeysrc&lt;/code&gt;&lt;/p&gt;
The syntax of the contents of .xbindskesrc is simple and is illustrated below:
&lt;pre style="padding-left:30px;"&gt;# short comment
    "command to start"
        associated key&lt;/pre&gt;
The &lt;code&gt;"command to start"&lt;/code&gt; is simply a shell command (that you can run from a terminal),  and &lt;code&gt;"associated key"&lt;/code&gt; is the key or&amp;nbsp;button.&lt;/p&gt;
&lt;p&gt;Now, using an editor, update the .xbindkeysrc file to include the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# Do a Page Down when mouse left-side down button is pressed
&amp;quot;xte &amp;#39;key Page_Down&amp;#39;&amp;quot;
    b:8
# Do a Page Up when mouse left-side up button is pressed
&amp;quot;xte &amp;#39;key Page_Up&amp;#39;&amp;quot;
    b:9
# Move scroll wheel to the left to copy text
&amp;quot;xte &amp;#39;keydown Control_L&amp;#39; &amp;#39;keydown Shift_L&amp;#39; &amp;#39;key c&amp;#39; &amp;#39;keyup Control_L&amp;#39; &amp;#39;keyup Shift_L&amp;#39;&amp;quot;
    b:6
# Move scroll wheel to the right to paste text
&amp;quot;xte &amp;#39;keydown Control_L&amp;#39; &amp;#39;keydown Shift_L&amp;#39; &amp;#39;key v&amp;#39; &amp;#39;keyup Control_L&amp;#39; &amp;#39;keyup Shift_L&amp;#39;&amp;quot;
    b:7
# Press scroll wheel to paste text
&amp;quot;xte &amp;#39;keydown Control_L&amp;#39; &amp;#39;keydown Shift_L&amp;#39; &amp;#39;key v&amp;#39; &amp;#39;keyup Control_L&amp;#39; &amp;#39;keyup Shift_L&amp;#39;&amp;quot;
    b:2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To activate any modification of the .xbindkeysrc configuration file, your have to restart xbindkeys.   This can be done via:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;pkill xbindkeys
xbindkeys&lt;/code&gt;&lt;/p&gt;
Other useful resources are:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;code&gt;xte&lt;/code&gt; is a program that generates fake input using the XTest&amp;nbsp;extension&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;xvkbd&lt;/code&gt; is a virtual (graphical) keyboard program for X Window System which provides facility to enter characters onto other X clients by clicking on a keyboard displayed on the&amp;nbsp;screen.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;xbindkeys_show&lt;/code&gt; is a program to show the grabbing keys used in&amp;nbsp;xbindkeys&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Xmodmap"&gt;&lt;code&gt;xmodmap&lt;/code&gt;&lt;/a&gt; is a utility for modifying keymaps and pointer button mappings in &lt;a href="https://wiki.archlinux.org/index.php/Xorg"&gt;Xorg&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Moving from SplashID to&amp;nbsp;KeePass&lt;/h2&gt;
I have been using the &lt;span class="caps"&gt;MS&lt;/span&gt; Windows based &lt;a href="https://www.splashid.com/"&gt;SplashID&lt;/a&gt; to store passwords, credit cards, account numbers, etc. securely on my &lt;span class="caps"&gt;PC&lt;/span&gt; and cell phone.  I got it to work under &lt;a href="http://www.winehq.org/"&gt;Wine&lt;/a&gt; but I&amp;#8217;m considering Linux alternatives.  I&amp;#8217;m growing tired of purchasing SplashID licenses and the user interface looks like it was designed in the 1970&amp;#8217;s.  I came across &amp;#8220;&lt;a href="http://lifehacker.com/5529133/five-best-password-managers"&gt;Five Best Password Managers&lt;/a&gt;&amp;#8221; which gave me the incentive to check out &lt;a href="http://keepass.info/"&gt;KeePass&lt;/a&gt;.  KeePass is a cross platform, open source password manager.  It is extendable via its plugin framework, where additional functionality can be added.  It looks like I can use &lt;a href="https://www.dropbox.com/install?os=lnx"&gt;Dropbox&lt;/a&gt; and &lt;a href="http://www.keepassdroid.com/"&gt;KeePassDroid&lt;/a&gt; to get the data on my cell phone.  I found these sites useful to get the job done:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.androidpolice.com/2011/03/30/tutorial-sync-passwords-across-computers-and-android-with-keepass/"&gt;Sync Passwords Across Computers And Android With&amp;nbsp;KeePass&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://lifehacker.com/5063176/how-to-use-dropbox-as-the-ultimate-password-syncer"&gt;How to Use Dropbox as the Ultimate Password&amp;nbsp;Syncer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The first step was to get KeePass installed in Ubuntu.  I found it on the &lt;a href="http://en.wikipedia.org/wiki/Ubuntu_Software_Center"&gt;Ubuntu Software Center&lt;/a&gt; or you can use:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install keepass2 keepass2-doc&lt;/code&gt;&lt;/p&gt;
I then exported the contents of my SplashID database to a &lt;a href="http://en.wikipedia.org/wiki/Comma-separated_values"&gt;&lt;span class="caps"&gt;CSV&lt;/span&gt; file&lt;/a&gt; and imported it into keepass2.  I set up the KeePass2 database within my Dropbox folder.  This way, it can be scych&amp;#8217;ed with my cell phone. I then installed KeePassDroid on my cell phone, pointing it at the database with the cell phones Dropbox.  &lt;a href="http://www.keepassdroid.com/"&gt;KeePassDroid&lt;/a&gt; is a port of the KeePass password safe for the Android&amp;nbsp;platform.&lt;/p&gt;
&lt;p&gt;There is some cleanup of the fields within the KeePass2 database, but the data is now accessable on both my &lt;span class="caps"&gt;PC&lt;/span&gt; and my cell phone.
&lt;h2&gt;Installing&amp;nbsp;Wine&lt;/h2&gt;
&lt;a href="http://www.winehq.org/"&gt;Wine&lt;/a&gt; allows you to run many Windows programs on Linux. Instead of simulating internal Windows logic like a virtual machine or emulator, Wine translates Windows &lt;span class="caps"&gt;API&lt;/span&gt; calls into Linux calls.  I used the following to install&amp;nbsp;Wine:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo add-apt-repository ppa:ubuntu-wine/ppa
sudo apt-get update
sudo apt-get install wine
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using Wine on Windows programs can be as simple  or complex, it all depends on the program.  &lt;a href="https://help.ubuntu.com/community/Wine"&gt;Ubuntu provides some guidance on how to use Wine&lt;/a&gt;, also check out &lt;a href="http://www.winehq.org/site/documentation"&gt;Wine Documentation&lt;/a&gt; and &lt;a href="http://wiki.winehq.org/HowTo"&gt;Wine HowTo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As of this writing of the post, the only thing I loaded via Wine was SplashID, which worked without any challenges.
&lt;h2&gt;Installing&amp;nbsp;PlayOnLinux&lt;/h2&gt;
&lt;a href="http://www.playonlinux.com/en"&gt;PlayOnLinux&lt;/a&gt; is based on Wine, and so profits from all its features, yet it keeps the user from having to deal with all its complexity.  I also install this package, in part because it comes pre-configured to load some popular tools.  I used it to install Internet Explore (sometimes its the only browser you can get to work on a site), and Kindle.
&lt;h2&gt;Installing &lt;span class="caps"&gt;RAID&lt;/span&gt;&lt;/h2&gt;
&lt;span class="caps"&gt;RAID&lt;/span&gt; is an acronym for Redundant Array of Independent Disks and &lt;span class="caps"&gt;RAID&lt;/span&gt; as the first tier in your data protection strategy. It uses multiple hard disks storing the same data to protect against some degree of physical disk failure. The amount of protection it affords depends upon the type of &lt;span class="caps"&gt;RAID&lt;/span&gt; used.  I&amp;#8217;m not going to go into all the types of &lt;span class="caps"&gt;RAID&lt;/span&gt;, nor their benefits, but you can find much of this information, and much more, in the following links:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://wiki.ubuntu.com/Raid"&gt;Raid&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://help.ubuntu.com/community/FakeRaidHowto"&gt;FakeRaidHowto&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://augmentedtrader.wordpress.com/2012/05/13/10-things-raid/"&gt;10 Surprising Facts About &lt;span class="caps"&gt;RAID&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Mdadm"&gt;Mdadm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
In my case, I had an existing disk drive (non-&lt;span class="caps"&gt;RAID&lt;/span&gt;), loaded with data, and I wanted to add an additional drive to make it a &lt;span class="caps"&gt;RAID&lt;/span&gt;.  This presents some challenges since you&amp;#8217;re attempting to preserve the data.  In this regard, I found the following links helpful:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://ascend4.org/Installing_Raid_1_on_Existing_Ubuntu_Server"&gt;Installing Raid 1 on Existing Ubuntu&amp;nbsp;Server&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://ubuntuforums.org/showthread.php?t=1703904"&gt;Using &lt;span class="caps"&gt;MDADM&lt;/span&gt; to add &lt;span class="caps"&gt;RAID&lt;/span&gt; 1 setup to existing data&amp;nbsp;drive&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Convert_a_single_drive_system_to_RAID"&gt;Convert a single drive system to &lt;span class="caps"&gt;RAID&lt;/span&gt; &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://feeding.cloud.geek.nz/posts/setting-up-raid-on-existing/"&gt;Setting up &lt;span class="caps"&gt;RAID&lt;/span&gt; on an existing Debian/Ubuntu&amp;nbsp;installation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://linuxconfig.org/linux-software-raid-1-setup#h1-introduction"&gt;Software Raid 1&amp;nbsp;Setup&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://linhost.info/2012/05/configure-a-software-raid1-array-in-linux/"&gt;Configure Software &lt;span class="caps"&gt;RAID1&lt;/span&gt; Array In&amp;nbsp;Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
I had already installed one &lt;a href="http://en.wikipedia.org/wiki/Solid-state_drive"&gt;&lt;span class="caps"&gt;SSD&lt;/span&gt;&lt;/a&gt; and one &lt;a href="http://en.wikipedia.org/wiki/Hard_disk_drive"&gt;&lt;span class="caps"&gt;HHD&lt;/span&gt;&lt;/a&gt; disk drives in my system.  I then installed a third drive that matched the &lt;span class="caps"&gt;HHD&lt;/span&gt; drive.  My &lt;span class="caps"&gt;128GB&lt;/span&gt; &lt;span class="caps"&gt;SSD&lt;/span&gt; has the device name of &lt;code&gt;/dev/sda1&lt;/code&gt; and mounted as &lt;code&gt;/boot&lt;/code&gt;.  The currently installed &lt;span class="caps"&gt;1TB&lt;/span&gt; &lt;span class="caps"&gt;SATA&lt;/span&gt; &lt;span class="caps"&gt;HDD&lt;/span&gt; has the device name of &lt;code&gt;/dev/sdb1&lt;/code&gt; and mounted as /home.  The newly install &lt;span class="caps"&gt;1TB&lt;/span&gt; &lt;span class="caps"&gt;SATA&lt;/span&gt; &lt;span class="caps"&gt;HDD&lt;/span&gt; has the device name of &lt;code&gt;/dev/sdc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Description of the procedures I used to create the &lt;span class="caps"&gt;RAID&lt;/span&gt; is as follows:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Physically install the additional hard&amp;nbsp;drive.&lt;/li&gt;
    &lt;li&gt;Install &lt;a href="http://en.wikipedia.org/wiki/Mdadm"&gt;mdadm&lt;/a&gt;, which is the Linux utility used to manage software &lt;span class="caps"&gt;RAID&lt;/span&gt;&amp;nbsp;devices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo apt-get install mdadm&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Partition the newly installed disk. Use the following inputs: n to establish a logic partition, p to make it a primary partition, 1  should be the partition number, use the same sectors as the currently installed drive, t to set the partition type, fd hex code type, p to print what the partition table will look like, w to write all of the changes to&amp;nbsp;disk.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo fdisk /dev/sdc&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Create a single-disk &lt;span class="caps"&gt;RAID&lt;/span&gt;-1 array (aka degraded array) with the existing hard drive. (Note the &amp;#8220;missing&amp;#8221; keyword is specified as one of the devices. We are going to fill this missing device later with the new&amp;nbsp;drive.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo mdadm --create /dev/md0 --level=1 --raid-devices=2 missing /dev/sdc1&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;At this point, if you do a &lt;code&gt;sudo fdisk -l | grep '^Disk'&lt;/code&gt;, you see a new disk, that being &lt;code&gt;/dev/md0&lt;/code&gt;.  This is the &lt;span class="caps"&gt;RAID&lt;/span&gt; but not yet fully&amp;nbsp;created.&lt;/li&gt;
    &lt;li&gt;Make the file system (ext3 type like the currently installed hard drive) on the &lt;span class="caps"&gt;RAID&lt;/span&gt; device.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo mkfs -t ext3 -j -L RAID-ONE /dev/md0&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Make a mount point for the &lt;span class="caps"&gt;RAID&lt;/span&gt; and mount the&amp;nbsp;device.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo mkdir /mnt/raid1
sudo mount /dev/md0 /mnt/raid1&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Copy over the files form the original hard drive to the new hard drive using &lt;a href="http://en.wikipedia.org/wiki/Rsync"&gt;rsync&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo rsync -avxHAXS --delete --progress /home/* /mnt/raid1&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Just  in case of a disaster, copy the original hard drive to the &lt;span class="caps"&gt;SSD&lt;/span&gt; &lt;code&gt;/dev/sda1&lt;/code&gt; root file system as /&lt;code&gt;home_backup.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo rsync -avxHAXS --delete --progress /home /home_backup&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;After the copy, to see the status of the &lt;span class="caps"&gt;RAID&lt;/span&gt;, use the command &lt;code&gt;sudo mdadm --detail /dev/md0&lt;/code&gt;.  What you see is that the &lt;code&gt;/dev/sdc1&lt;/code&gt; drives is in &amp;#8220;active sync &amp;#8221; state but no reference to the other drive.  When you do &lt;code&gt;cat /proc/mdstat&lt;/code&gt; you see &amp;#8220;&lt;code&gt;md0 : active raid1 sdc1[1]&lt;/code&gt;&amp;#8221; but again no reference to the other&amp;nbsp;drive.&lt;/li&gt;
    &lt;li&gt;Edit your &lt;code&gt;/etc/fstab&lt;/code&gt; file and edit all references of &lt;code&gt;/dev/sdb1&lt;/code&gt; to &lt;code&gt;/dev/md0&lt;/code&gt; and reboot the system.  With this, &lt;code&gt;/dev/md0&lt;/code&gt; will be used as &lt;code&gt;/home&lt;/code&gt; on the next boot. This will free up the existing hard drive so it can be made ready for the &lt;span class="caps"&gt;RAID&lt;/span&gt;.&lt;/li&gt;
    &lt;li&gt;With fdisk, re-partition /dev/sdb1 with a partition of type fd. Use the following inputs: n to establish a logic partition, p to make it a primary partition, 1  should be the partition number, use the same sectors as the currently installed drive, t to set the partition type, fd hex code type, p to print what the partition table will look like, w to write all of the changes to&amp;nbsp;disk.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo fdisk /dev/sdb1&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Add &lt;code&gt;/dev/sdb1&lt;/code&gt; to your existing &lt;span class="caps"&gt;RAID&lt;/span&gt;&amp;nbsp;array.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;mdadm /dev/md0 --add /dev/sdb1&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;The &lt;span class="caps"&gt;RAID&lt;/span&gt; array will now start to rebuild so that the two drives have the same data. Use the following command to check the status of the&amp;nbsp;rebuild.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;p style="padding-left:90px;"&gt;&lt;code&gt;sudo mdadm -D /dev/md0&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;For Ubuntu, it seems it is also necessary to update the &lt;code&gt;/etc/mdadm/mdadm.conf&lt;/code&gt; file. If this is not done, the &lt;span class="caps"&gt;RAID&lt;/span&gt; device will not be mounted when you reboot the system. The solution is to run the following command on your system, once the &lt;span class="caps"&gt;RAID&lt;/span&gt; drive has been&amp;nbsp;configured:&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo cp /etc/mdadm/mdadm.conf /etc/mdadm/mdadm.conf_backup
sudo mdadm --detail --scan &amp;amp;gt;&amp;amp;gt; /etc/mdadm/mdadm.conf
&lt;/pre&gt;&lt;/div&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Thu, 01 Aug 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-08-01:posts/2013/Aug/01/building-my-linux-box-the-implementation/</guid><category>Linux</category><category>Ubuntu</category><category>Squeeze Box</category><category>Harmony Remote</category><category>Chrome</category><category>Xbindkeys</category><category>KeePass</category><category>Wine</category><category>RAID</category></item><item><title>GNU Radio and Gqrx SDR Receiver</title><link>http://jeffskinnerbox.me/posts/2013/Jul/08/gnu-radio-and-gqrx-srd-receiver/</link><description>&lt;p&gt;&lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/GNURadioCompanion"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="grc logo" src="/images/gnu_radio_logo.png" width="256" height="256" /&gt;
&lt;/a&gt;
In &lt;a href="http://jeffskinnerbox.wordpress.com/2013/05/26/rtl-sdr-software-defined-radio-sdr-for-20/"&gt;my last post&lt;/a&gt;, I was using the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/Hardware"&gt;&lt;span class="caps"&gt;RTL2832&lt;/span&gt; &lt;span class="caps"&gt;TV&lt;/span&gt; tuner&lt;/a&gt; dongle to get a simple &lt;a href="http://en.wikipedia.org/wiki/Software-defined_radio"&gt;Software Defined Radio (&lt;span class="caps"&gt;SDR&lt;/span&gt;)&lt;/a&gt; operational.  I wanted to use the &lt;a href="http://sdrsharp.com/"&gt;&lt;span class="caps"&gt;SDR&lt;/span&gt;#&lt;/a&gt; program as my receiver but found that the &lt;span class="caps"&gt;MS&lt;/span&gt; Windows tool would not work and so I targeted &lt;a href="http://www.oz9aec.net/index.php/gnu-radio/gqrx-sdr"&gt;Gqrx&lt;/a&gt; as an alternative. Gqrx is dependent on the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio&lt;/a&gt;.  So in this post, I plan to get Gqrx and &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio up and operational with the &lt;a href="http://rtlsdr.org/"&gt;&lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; dongle&lt;/a&gt;.  I spend some time with other tools to help further verify (with mixed success) that &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio is&amp;nbsp;working.&lt;/p&gt;
&lt;p&gt;The contain here comes from multiple source and I attempt to list those sources below.  For a good video to get a sense of what your in for, check out this &lt;a href="http://dangerousprototypes.com/2013/05/22/tutorial-kali-linux-with-gnu-radio-gqrx-and-rtl-sdr-dongle/"&gt;video&lt;/a&gt;. Also, this &lt;a href="http://blog.opensecurityresearch.com/2012/06/getting-started-with-gnu-radio-and-rtl.html"&gt;post&lt;/a&gt; covers many of the topics&amp;nbsp;here.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio is a free &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; open-source software development toolkit that provides signal processing blocks to implement software defined radios. It can be used with readily-available low-cost external &lt;span class="caps"&gt;RF&lt;/span&gt; hardware to create software-defined radios, or without hardware in a simulation-like environment. It is being used in hobbyist, academic, and commercial environments to support both wireless communications research and real-world radio systems. &lt;a href="http://radioware.nd.edu/documentation"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gqrx is an experimental &lt;span class="caps"&gt;AM&lt;/span&gt;, &lt;span class="caps"&gt;FM&lt;/span&gt; and Single Side Band (&lt;span class="caps"&gt;SSB&lt;/span&gt;) software defined receiver implemented using &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio and the Qt &lt;span class="caps"&gt;GUI&lt;/span&gt; toolkit. Currently it works on Linux and can use the RTL_SDR dongles as input&amp;nbsp;source.&lt;/p&gt;
&lt;p&gt;Also within this post, I venture out from gqrx to examine a few other tools.  I don&amp;#8217;t cover much territory, nor have much success.  The insperation to examine these other tools comes mainly from the lengthy post &amp;#8220;&lt;a href="http://superkuh.com/rtlsdr.html#simple_ra"&gt;&lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; and &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio with Realtek &lt;span class="caps"&gt;RTL2832U&lt;/span&gt; [Elonics E4000/Raphael Micro &lt;span class="caps"&gt;R820T&lt;/span&gt;] software defined radio receiver&lt;/a&gt;&amp;#8220;.  Also check out &amp;#8220;&lt;a href="http://blog.opensecurityresearch.com/2012/06/getting-started-with-gnu-radio-and-rtl.html"&gt;Getting Started with &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio and &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; (on Backtrack)&lt;/a&gt;&amp;#8220;.
&lt;h2&gt;Build &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio on&amp;nbsp;Ubuntu&lt;/h2&gt;
The &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio web site has &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/InstallingGR#Using-the-build-gnuradio-script"&gt;specific instructions&lt;/a&gt; and a build script for installing it on Ubuntu (I&amp;#8217;m using version 13.04).  This process claims it may take 1-2 hours to do the install (for me it ran in 1 hour 14 minutes).  The steps are as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd ~/src
mkdir ~/gnuradio
cd ~/gnuradio
wget http://www.sbrac.org/files/build-gnuradio &amp;amp;&amp;amp; chmod a+x ./build-gnuradio &amp;amp;&amp;amp; ./build-gnuradio --verbose
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When prompted, tell it to proceed and give it &lt;code&gt;sudo&lt;/code&gt; privilege by typing &amp;#8220;Y&amp;#8221;. Because of the &lt;code&gt;--verbose&lt;/code&gt; option, you will see a lot of text whizzing by as the &lt;code&gt;build-gnuradio&lt;/code&gt; script does its thing. You’ll also see a percentage complete indicator as the script works its way down it&amp;nbsp;tasks.&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio build creates a large variety of tools which get installed into &lt;code&gt;/usr/local/bin&lt;/code&gt;.  You also notice that tools not directly related to &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio are also created. I&amp;#8217;ll leave it for another time to understand and explain the &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio environment.
&lt;h2&gt;The &amp;#8220;Hello World&amp;#8221; of &lt;span class="caps"&gt;GNU&lt;/span&gt;&amp;nbsp;Radio&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/dial_tone-grc-home-jeff-gnu-radio-companion_006.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="dial_tone.grc - -home-jeff - GNU Radio Companion_006" src="/images/dial_tone-grc-home-jeff-gnu-radio-companion.png" width="250" height="138" /&gt;
&lt;/a&gt;
To verify that the software is working, best thing is to create the typical &amp;#8220;Hello, World&amp;#8221; program, just we might have done for our first foray into C++, Python, or other programming language.  In the world of &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio, this program has come to be the phone dial tone. To do this, I followed the video &lt;a href="http://www.youtube.com/watch?v=xxe87CdIq-s"&gt;The &amp;#8220;Hello World&amp;#8221; of &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio: Dial Tone&lt;/a&gt; and the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/TutorialsWritePythonApplications"&gt;gnuradio.org&lt;/a&gt;.  I did this using the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/GNURadioCompanion"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio Companion&lt;/a&gt; (executable located at &lt;code&gt;/usr/local/bin/gnuradio-companion&lt;/code&gt;).  &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio Companion (&lt;span class="caps"&gt;GRC&lt;/span&gt;) is a graphical tool for creating signal flow graphical models and generating Python source code for the model&amp;nbsp;created.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;GRC&lt;/span&gt;&amp;#8217;s generated flow and code for the &amp;#8221;Hello, World&amp;#8221; program is listed below. The Python code for the dial tone program was placed in the home directory, and in my case, it was called &lt;code&gt;dail_tone.py&lt;/code&gt;. While it can be executed via the &lt;code&gt;gnuradio-companion&lt;/code&gt;, it can also be executed via &lt;code&gt;python dial_tone.py&lt;/code&gt;. The user interface for the &lt;span class="caps"&gt;GRC&lt;/span&gt; and the corresponding Python code it generated is listed&amp;nbsp;below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Gnuradio Python Flow Graph&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Title: Dial Tone&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Author: Jeff Irland&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Description: &amp;quot;Hello, World&amp;quot; program - produces phone dial tone&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;# Generated: Sat Jun 22 21:24:56 2013&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; analog
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; audio
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; blocks
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; eng_notation
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; gr
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; window
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.eng_option&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; eng_option
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.gr&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; firdes
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.wxgui&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; fftsink2
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.wxgui&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; forms
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;gnuradio.wxgui&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; scopesink2
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;grc_gnuradio&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; wxgui &lt;span style="color: #006699; font-weight: bold"&gt;as&lt;/span&gt; grc_wxgui
&lt;span style="color: #006699; font-weight: bold"&gt;from&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;optparse&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; OptionParser
&lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;wx&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;class&lt;/span&gt; &lt;span style="color: #00AA88; font-weight: bold"&gt;dial_tone&lt;/span&gt;(grc_wxgui&lt;span style="color: #555555"&gt;.&lt;/span&gt;top_block_gui):

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;__init__&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;):
        grc_wxgui&lt;span style="color: #555555"&gt;.&lt;/span&gt;top_block_gui&lt;span style="color: #555555"&gt;.&lt;/span&gt;__init__(&lt;span style="color: #336666"&gt;self&lt;/span&gt;, title&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Dial Tone&amp;quot;&lt;/span&gt;)
        _icon_path &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;quot;/usr/share/icons/hicolor/32x32/apps/gnuradio-grc.png&amp;quot;&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;SetIcon(wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;Icon(_icon_path, wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;BITMAP_TYPE_ANY))

        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;# Variables&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate &lt;span style="color: #555555"&gt;=&lt;/span&gt; samp_rate &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;32000&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; noise_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #555555"&gt;.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;005&lt;/span&gt;

        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;# Blocks&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        _noise_slider_sizer &lt;span style="color: #555555"&gt;=&lt;/span&gt; wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;BoxSizer(wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;VERTICAL)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_text_box &lt;span style="color: #555555"&gt;=&lt;/span&gt; forms&lt;span style="color: #555555"&gt;.&lt;/span&gt;text_box(
            parent&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            sizer&lt;span style="color: #555555"&gt;=&lt;/span&gt;_noise_slider_sizer,
            value&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider,
            callback&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_noise_slider,
            label&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;#39;noise_slider&amp;#39;&lt;/span&gt;,
            converter&lt;span style="color: #555555"&gt;=&lt;/span&gt;forms&lt;span style="color: #555555"&gt;.&lt;/span&gt;float_converter(),
            proportion&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; forms&lt;span style="color: #555555"&gt;.&lt;/span&gt;slider(
            parent&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            sizer&lt;span style="color: #555555"&gt;=&lt;/span&gt;_noise_slider_sizer,
            value&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider,
            callback&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_noise_slider,
            minimum&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            maximum&lt;span style="color: #555555"&gt;=.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;,
            num_steps&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1000&lt;/span&gt;,
            style&lt;span style="color: #555555"&gt;=&lt;/span&gt;wx&lt;span style="color: #555555"&gt;.&lt;/span&gt;SL_VERTICAL,
            cast&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;float&lt;/span&gt;,
            proportion&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;Add(_noise_slider_sizer)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; scopesink2&lt;span style="color: #555555"&gt;.&lt;/span&gt;scope_sink_f(
            &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            title&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Scope Plot&amp;quot;&lt;/span&gt;
            sample_rate&lt;span style="color: #555555"&gt;=&lt;/span&gt;samp_rate,
            v_scale&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            v_offset&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            t_scale&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            ac_couple&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
            xy_mode&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
            num_inputs&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;,
            trig_mode&lt;span style="color: #555555"&gt;=&lt;/span&gt;gr&lt;span style="color: #555555"&gt;.&lt;/span&gt;gr_TRIG_MODE_AUTO,
            y_axis_label&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;Counts&amp;quot;&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;Add(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;win)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; fftsink2&lt;span style="color: #555555"&gt;.&lt;/span&gt;fft_sink_f(
            &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;GetWin(),
            baseband_freq&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            y_per_div&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;,
            y_divs&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;,
            ref_level&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;,
            ref_scale&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;2.0&lt;/span&gt;,
            sample_rate&lt;span style="color: #555555"&gt;=&lt;/span&gt;samp_rate,
            fft_size&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1024&lt;/span&gt;,
            fft_rate&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #FF6600"&gt;15&lt;/span&gt;,
            average&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
            avg_alpha&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;None&lt;/span&gt;,
            title&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;FFT Plot&amp;quot;&lt;/span&gt;,
            peak_hold&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #336666"&gt;False&lt;/span&gt;,
        )
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;Add(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;win)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; blocks&lt;span style="color: #555555"&gt;.&lt;/span&gt;add_vff(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;audio_sink_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; audio&lt;span style="color: #555555"&gt;.&lt;/span&gt;sink(&lt;span style="color: #FF6600"&gt;32000&lt;/span&gt;, &lt;span style="color: #CC3300"&gt;&amp;quot;pulse&amp;quot;&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_1 &lt;span style="color: #555555"&gt;=&lt;/span&gt; analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;sig_source_f(samp_rate, analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;GR_COS_WAVE, &lt;span style="color: #FF6600"&gt;350&lt;/span&gt;, &lt;span style="color: #555555"&gt;.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;sig_source_f(samp_rate, analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;GR_COS_WAVE, &lt;span style="color: #FF6600"&gt;440&lt;/span&gt;, &lt;span style="color: #555555"&gt;.&lt;/span&gt;&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_noise_source_x_0 &lt;span style="color: #555555"&gt;=&lt;/span&gt; analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_source_f(analog&lt;span style="color: #555555"&gt;.&lt;/span&gt;GR_GAUSSIAN, noise_slider, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;)

        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;# Connections&lt;/span&gt;
        &lt;span style="color: #0099FF; font-style: italic"&gt;##################################################&lt;/span&gt;
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;audio_sink_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_1, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_noise_source_x_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;connect((&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;blocks_add_xx_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;), (&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0, &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;))

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;get_samp_rate&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;):
        &lt;span style="color: #006699; font-weight: bold"&gt;return&lt;/span&gt; &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;set_samp_rate&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;, samp_rate):
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate &lt;span style="color: #555555"&gt;=&lt;/span&gt; samp_rate
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sampling_freq(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_sig_source_x_1&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sampling_freq(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_fftsink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sample_rate(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;wxgui_scopesink2_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_sample_rate(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;samp_rate)

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;get_noise_slider&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;):
        &lt;span style="color: #006699; font-weight: bold"&gt;return&lt;/span&gt; &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider

    &lt;span style="color: #006699; font-weight: bold"&gt;def&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;set_noise_slider&lt;/span&gt;(&lt;span style="color: #336666"&gt;self&lt;/span&gt;, noise_slider):
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider &lt;span style="color: #555555"&gt;=&lt;/span&gt; noise_slider
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;analog_noise_source_x_0&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_amplitude(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_slider&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_value(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider)
        &lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;_noise_slider_text_box&lt;span style="color: #555555"&gt;.&lt;/span&gt;set_value(&lt;span style="color: #336666"&gt;self&lt;/span&gt;&lt;span style="color: #555555"&gt;.&lt;/span&gt;noise_slider)

&lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; __name__ &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #CC3300"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    parser &lt;span style="color: #555555"&gt;=&lt;/span&gt; OptionParser(option_class&lt;span style="color: #555555"&gt;=&lt;/span&gt;eng_option, usage&lt;span style="color: #555555"&gt;=&lt;/span&gt;&lt;span style="color: #CC3300"&gt;&amp;quot;%prog: [options]&amp;quot;&lt;/span&gt;)
    (options, args) &lt;span style="color: #555555"&gt;=&lt;/span&gt; parser&lt;span style="color: #555555"&gt;.&lt;/span&gt;parse_args()
    tb &lt;span style="color: #555555"&gt;=&lt;/span&gt; dial_tone()
    tb&lt;span style="color: #555555"&gt;.&lt;/span&gt;Run(&lt;span style="color: #336666"&gt;True&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When the &lt;span class="caps"&gt;GRC&lt;/span&gt; flow execution button is pressed, the scope and &lt;span class="caps"&gt;FFT&lt;/span&gt; plots are are created as shown&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/dial-tone_005.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Dial Tone_005" src="/images/dial-tone_005.png" width="250" height="266" /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The build for &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio also installs the &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; software, so it would be wise to test &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio with the RTL_SDR hardware and make sure everything is operating as expected.  I want to make a simple &lt;span class="caps"&gt;FM&lt;/span&gt; receiver, comparable to what was done via &lt;a href="http://kmkeen.com/rtl-demod-guide/index.html"&gt;&lt;code&gt;rtl_fm&lt;/code&gt;&lt;/a&gt; in &lt;a href="http://jeffskinnerbox.wordpress.com/2013/05/26/rtl-sdr-software-defined-radio-sdr-for-20/"&gt;&lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; – Software Defined Radio (&lt;span class="caps"&gt;SDR&lt;/span&gt;) for $20&lt;/a&gt;. Something equivalent to:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;rtl_fm -W -f 99.5M | play -r 32k -t raw -e signed-integer -b 16 -c 1 -V1 -&lt;/code&gt;&lt;/p&gt;
Using the following postings as a guide:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=KWeY2yqwVA0"&gt;How To Build an &lt;span class="caps"&gt;FM&lt;/span&gt; Receiver with the &lt;span class="caps"&gt;USRP&lt;/span&gt; in Less Than 10&amp;nbsp;Minutes&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://cegt201.bradley.edu/projects/proj2011/sdr/update_files/FM_radio_receiver.pdf"&gt;Construction of an &lt;span class="caps"&gt;FM&lt;/span&gt;&amp;nbsp;Receiver&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://files.meetup.com/2179791/FM-Demo-by-GNU-Radio.pdf"&gt;Assembling an &lt;span class="caps"&gt;FM&lt;/span&gt; Receiver Like Blazes by &lt;span class="caps"&gt;GNU&lt;/span&gt;&amp;nbsp;Radio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://blog.chris007.de/?p=391"&gt;Simple &lt;span class="caps"&gt;FM&lt;/span&gt; Receiver with OsmoSDR in&amp;nbsp;GNURadio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://dutchgnuradio.blogspot.com/2013/04/rtl2832u-based-wide-band-fm-receiver.html"&gt;&lt;span class="caps"&gt;RTL2832U&lt;/span&gt; Based Wide Band &lt;span class="caps"&gt;FM&lt;/span&gt; receiver using &lt;span class="caps"&gt;GNU&lt;/span&gt; &lt;span class="caps"&gt;RADIO&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
I had sufficient success to convince myself that &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio was work.
&lt;h2&gt;Building Gqrx on&amp;nbsp;Ubuntu&lt;/h2&gt;
Gqrx is a software defined &lt;span class="caps"&gt;AM&lt;/span&gt;, &lt;span class="caps"&gt;FM&lt;/span&gt; and &lt;span class="caps"&gt;SSB&lt;/span&gt; software defined radio receiver for &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; based dongles (as well as the &lt;a href="http://en.wikipedia.org/wiki/Universal_Software_Radio_Peripheral"&gt;Universal Software Radio Peripherals&lt;/a&gt; and &lt;a href="http://sdr.osmocom.org/trac/wiki/Hardware"&gt;Osmo &lt;span class="caps"&gt;SDR&lt;/span&gt; devices&lt;/a&gt;).  It features a  &lt;a href="http://en.wikipedia.org/wiki/Qt_(framework)"&gt;Qt &lt;span class="caps"&gt;GUI&lt;/span&gt;&lt;/a&gt;.  As a &lt;span class="caps"&gt;QT&lt;/span&gt; program, you&amp;#8217;ll need to make sure you have &lt;span class="caps"&gt;QT4&lt;/span&gt; installed (version 5 will not work) and that you have the &lt;a href="http://en.wikipedia.org/wiki/Qt_Creator"&gt;&lt;code&gt;qtcreator&lt;/code&gt;&lt;/a&gt; tool is&amp;nbsp;installed:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install qt4-default
sudo apt-get install phonon-backend-gstreamer
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now download the source for &lt;a href="http://www.oz9aec.net/index.php/gnu-radio/gqrx-sdr"&gt;Gqrx via its page on GitHub&lt;/a&gt;  and extract it into your target directory. The posting &lt;a href="http://www.thepowerbase.com/2012/06/getting-started-with-rtl-sdr/2/"&gt;Getting Started With &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt;&lt;/a&gt; and the &lt;a href="https://github.com/csete/gqrx/blob/master/README.md"&gt;&lt;span class="caps"&gt;README&lt;/span&gt;&lt;/a&gt; on the GitHub site where useful in understanding how to do the install.  I did the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;git clone git://github.com/csete/gqrx.git
cd gqrx
qmake gqrx.pro
make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, you should find the gqrx executable in &lt;code&gt;~/src/gqrx&lt;/code&gt; directory.  Start up via &lt;code&gt;./gqrx&lt;/code&gt; and you&amp;#8217;ll get the screen below (or set your values to equal this):
&lt;p&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/configure-i-o-devices_001.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Configure I-O devices_001" src="/images/configure-i-o-devices_001.png" width="301" height="346" /&gt;
&lt;/a&gt;
&lt;p&gt;
Click &amp;#8220;&lt;span class="caps"&gt;OK&lt;/span&gt;&amp;#8221; and the screen below will pop up.  Make sure you have the &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; dongle plugged in and select the button on the top left to start processing data.  I have tuned the radio to a local &lt;span class="caps"&gt;FM&lt;/span&gt; station at 85.7MHz and listen to Washington Nationals vs.&amp;nbsp;Phillies baseball!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/gqrx-0-0-rtl0_004.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Gqrx 0.0 - rtl=0_004" src="/images/gqrx-0-0-rtl0_004.png" width="500" height="384" /&gt;
&lt;/a&gt;
&lt;h2&gt;Building Multimode Radio&amp;nbsp;Receiver&lt;/h2&gt;
This radio receiver is capable of demodulating muitiple modes, specifically &lt;span class="caps"&gt;AM&lt;/span&gt;, &lt;span class="caps"&gt;FM&lt;/span&gt;, &lt;span class="caps"&gt;USB&lt;/span&gt;, &lt;span class="caps"&gt;LSB&lt;/span&gt; , &lt;span class="caps"&gt;WFM&lt;/span&gt;. &lt;span class="caps"&gt;TV&lt;/span&gt;-&lt;span class="caps"&gt;FM&lt;/span&gt;, &lt;span class="caps"&gt;PAL&lt;/span&gt;-&lt;span class="caps"&gt;FM&lt;/span&gt;. It&amp;#8217;s easy to use and  has an automated scanning and spectral zoom features where clicking on the spectrogram or panorama to tune to the frequency of&amp;nbsp;interest.&lt;/p&gt;
&lt;p&gt;Multimode documentation is sparse to non existent. The posts &amp;#8220;&lt;a href="http://foxgulch.com/WordPress/?p=615"&gt;Using the Realtek &lt;span class="caps"&gt;RTL2832&lt;/span&gt; &lt;span class="caps"&gt;USB&lt;/span&gt; “dongle” as a gnuradio multimode receiver&lt;/a&gt;&amp;#8221; and &amp;#8220;&lt;a href="http://superkuh.com/rtlsdr.html#multimodeappnote"&gt;&lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; and &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio with Realtek &lt;span class="caps"&gt;RTL2832U&lt;/span&gt; [Elonics E4000/Raphael Micro &lt;span class="caps"&gt;R820T&lt;/span&gt;] software defined radio receiver&lt;/a&gt;&amp;#8221; and &amp;#8220;&lt;a href="http://blog.opensecurityresearch.com/2012/06/getting-started-with-gnu-radio-and-rtl.html"&gt;Getting Started with &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio and &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; (on Backtrack)&lt;/a&gt;&amp;#8221; gave some important hints on how to install multimode and get it operational.  I did the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd ~
svn co https://www.cgran.org/svn/projects/multimode/trunk/ ~/src/multimode
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When I executed &lt;code&gt;multimode.py&lt;/code&gt;, it didn&amp;#8217;t product a display.  I suspect its some subtle Python code problem, or more likely.  incompatibility with the latest &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio libraries.  For now, I&amp;#8217;m going to abandon this.
&lt;h2&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio Signal&amp;nbsp;Scanner&lt;/h2&gt;
&lt;a href="http://www.techmeology.co.uk/gr-scan/"&gt;gr-scan&lt;/a&gt; is a program  built upon &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio, rtl-sdr, and the OsmoSDR Source Block.  This receiver constantly changes frequencies in a set order looking for a frequency that has someone transmitting. It is intended to scan a range of frequencies and print a list of discovered signals.  Installation involved the following&amp;nbsp;steps:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd ~./src
mkdir gr-scan
cd gr-scan
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;with your browser, download: &lt;code&gt;http://www.techmeology.co.uk/gr-scan/gr-scan-2012082301.tar.gz&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;gzip -d gr-scan-2012082301.tar.gz
tar -xvvf gr-scan-2012082301.tar
cd gr-scan-2012082301
make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When I attempted to do the &lt;code&gt;make&lt;/code&gt;, it complained about missing Gun Radio files.  I suspect the &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio libraries and include files are layed out differently since the time &lt;code&gt;gr-scan&lt;/code&gt; was designed (August of 2012).  I&amp;#8217;m leaving fixing this to another time.
&lt;h2&gt;What&amp;#8217;s&amp;nbsp;Next&lt;/h2&gt;
In this and the &lt;a href="http://jeffskinnerbox.wordpress.com/2013/05/26/rtl-sdr-software-defined-radio-sdr-for-20/"&gt;previous &lt;span class="caps"&gt;SDR&lt;/span&gt; posts&lt;/a&gt;, I focused on getting a taste of the technology without committing myself to much of an effort.  I really need to study and understand the tools that I have assembled. I still need to do a great deal more studying of  the radio spectrum itself &amp;#8230; I feel like I&amp;#8217;m wondering in the dark most of the&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;Also, I feel that I&amp;#8217;m very limited by the antenna I&amp;#8217;m presently using (the &lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/71ratxr2wjl-_sl1500_.jpg"&gt;pitiful dipole &lt;/a&gt;that came with the &lt;span class="caps"&gt;RTL&lt;/span&gt; dongle).  I&amp;#8217;m thinking of building a better antenna.  Maybe try to pickup a &lt;span class="caps"&gt;NOAA&lt;/span&gt; weather satellites, with its distinctive audio signal when demodulated, and decode one of its satellite weather photos &amp;#8230;.&amp;nbsp;maybe.&lt;/p&gt;
&lt;p&gt;Another problem with the &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; is that its internal oscillator is cheap  and drifts, resulting in clock errors with  many kHz of frequency display error in &lt;span class="caps"&gt;SDR&lt;/span&gt; - depending on a band you&amp;#8217;re listening to.  This is very annoying if you use your dongle as a radio scanner - what&amp;#8217;s the point of knowing frequency of a transmitter if it&amp;#8217;s almost random on your &lt;span class="caps"&gt;SDR&lt;/span&gt;?   This frequency error is linear across the spectrum, and can be adjusted in most &lt;span class="caps"&gt;SDR&lt;/span&gt; programs by entering a &lt;span class="caps"&gt;PPM&lt;/span&gt; (parts per million) offset value.  So I need to calculate this error offset so I can  calibrate the &lt;span class="caps"&gt;SDR&lt;/span&gt;&amp;nbsp;software.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Mon, 08 Jul 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-07-08:posts/2013/Jul/08/gnu-radio-and-gqrx-srd-receiver/</guid><category>RTL-SDR</category><category>Software Defined Radio</category></item><item><title>Linux Reboot ... or ... My System is Frozen and I Can't Get Up!</title><link>http://jeffskinnerbox.me/posts/2013/Jun/16/linux-reboot-or-my-system-is-frozen-and-i-cant-get%20up/</link><description>&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/06/sysrq-key.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="sysrq-key" src="/images/sysrq-key.jpg" width="300" height="199" /&gt;
&lt;/a&gt;
While I was building the environment for my Linux box,  I ran into some problems with Ubuntu.  I found myself with frozen screens or booted up into blank screens and other such things.  Seems that Ubuntu 13.04 is currently a bit unstable or I just screwed things up badly &amp;#8230; a little of both I suspect. I managed to get through these problems, but too often I got desperate and I hitting the on/off switch to get the box rebooted.  Doing this can result in corrupted files and other such nasty things.  So this motivated me to research the &amp;#8220;correct&amp;#8221; way to get out of these Linux near&amp;nbsp;death experiences.&lt;/p&gt;
&lt;p&gt;The golden nugget here is actually at the end of this posting, that is the Magic SysRq Key.  This gem can get you out of most any freeze but I provide more here since the alternatives might be less intrusive.
&lt;h2&gt;Stopping a Running&amp;nbsp;Process&lt;/h2&gt;
While this post&amp;#8217;s focus is on how to reboot Linux, keep in mind that sometimes the problem that your attempting to solve may be handled via a simpler approach.  Specifically, maybe you just need to kill a running&amp;nbsp;process.&lt;/p&gt;
&lt;p&gt;In the Bash shell, you can use job control:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Ctrl+C – halts the current&amp;nbsp;command&lt;/li&gt;
    &lt;li&gt;Ctrl+Z – stops the current command, resume with fg in the foreground or bg in the&amp;nbsp;background&lt;/li&gt;
    &lt;li&gt;Ctrl+D – log out of current session, similar to&amp;nbsp;exit&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
On a Desktop version of Linux, there are normally six text consoles sessions available and one graphics session.  You could leave a frozen &lt;span class="caps"&gt;GUI&lt;/span&gt;, and go to a console screen to kill an offending process:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;You can access the consoles by pressing &lt;span class="caps"&gt;CTRL&lt;/span&gt; + &lt;span class="caps"&gt;ALT&lt;/span&gt; + Fx (where Fx is a function key on the keyboard from F1 to&amp;nbsp;F6).&lt;/li&gt;
    &lt;li&gt;Once you enter one of the consoles, you will be prompted for user name and password. Enter them and then you’ll reach a command prompt.  Now you can kill the offending process using the kill&amp;nbsp;command.&lt;/li&gt;
    &lt;li&gt;To switch back to the graphic session, just click &lt;span class="caps"&gt;CTRL&lt;/span&gt; + &lt;span class="caps"&gt;ALT&lt;/span&gt; +&amp;nbsp;F7.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The process &amp;#8220;killing&amp;#8221; could be done via the recommended &lt;code&gt;kill -SIGTERM &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt;  or the more forceful &lt;code&gt;kill -SIGKILL &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt;. There are also versions of these tools, &lt;a href="http://www.thegeekstuff.com/2009/12/4-ways-to-kill-a-process-kill-killall-pkill-xkill/"&gt;&lt;code&gt;killall&lt;/code&gt; and &lt;code&gt;pkill&lt;/code&gt;&lt;/a&gt;, that use the name of the process as an argument instead of the process &lt;span class="caps"&gt;ID&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xkill&lt;/code&gt; is a utility for forcing the X server to close connections to clients. Closing an X application that has become unresponsive, or misbehaving in general. Execute &lt;code&gt;xkill&lt;/code&gt;, and once it&amp;#8217;s running, you simply click on the window you wish to  kill, and it performs a &lt;code&gt;kill -9&lt;/code&gt;.
&lt;h2&gt;When Kill -9 Does Not&amp;nbsp;Work&lt;/h2&gt;
You are supposed to be able to kill any process with &lt;code&gt;kill -9 &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt;, but you may come across a process that just will not die. Usually this happens when you are trying to kill a &lt;a href="http://en.wikipedia.org/wiki/Zombie_process"&gt;zombie process or defunct process&lt;/a&gt;. These are processes that are dead and have exited, but they remain as &lt;a href="http://www-cdf.fnal.gov/offline/UNIX_Concepts/concepts.zombies.txt"&gt;zombies in the process list&lt;/a&gt;. The kernel keeps them in the process list until the parent process retrieves the exit status code by calling the wait() system call. This does not usually happen with daemon processes because they detach themselves from their parent process and are adopted by the init process (&lt;span class="caps"&gt;PID&lt;/span&gt;=1) which will automatically call wait() to clear them out of the process&amp;nbsp;list.&lt;/p&gt;
&lt;p&gt;You may sometimes see the daemon defunct &lt;span class="caps"&gt;PID&lt;/span&gt; in the process list for a brief moment before it gets cleaned up by the init process. You don&amp;#8217;t have to worry about these. You can also end up with an unkillable process if a process is stuck waiting for the kernel to finish something. This usually happens when the kernel is waiting for I/O. Where you see this most often is with network filesystems such as &lt;span class="caps"&gt;NFS&lt;/span&gt; and SaMBa that have disconnected uncleanly. This also happens when a drive fails or if someone unplugs a cable to a mounted drive. If the device had a memmapped file or was used for swap then you may be really screwed. Any kernel calls that flush &lt;span class="caps"&gt;IO&lt;/span&gt; may hang forever waiting for the device to&amp;nbsp;respond.&lt;/p&gt;
&lt;p&gt;Zombies can be identified in the output from the process status command &lt;code&gt;ps&lt;/code&gt; by the presence of a &amp;#8220;Z&amp;#8221; in the &amp;#8220;&lt;span class="caps"&gt;STAT&lt;/span&gt;&amp;#8221; column. Zombies that exist for more than a short period of time typically indicate a bug in the parent program, or just an uncommon decision to reap children.  A zombie process is not the same as an orphan process. An orphan process is a process that is still executing, but whose parent has died. They do not become zombie processes; instead, they are adopted by init (process &lt;span class="caps"&gt;ID&lt;/span&gt; 1), which waits on its children.
&lt;h2&gt;Standard Reboot&amp;nbsp;Commands&lt;/h2&gt;
The vast majority of your systm shut downs or reboots will follow one of these two forms.  The first will halt the system so you can power it off and the second will reboot the system:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;shutdown -h now
shutdown -r now&lt;/code&gt;&lt;/p&gt;
&lt;a href="http://linux.die.net/man/8/shutdown"&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; is the preferred and the safest ways to stop Linux. Never the less, in the tradition of Unix, Linux gives you more than one  way to accomplish this task.   &lt;a href="http://manpages.ubuntu.com/manpages/lucid/man8/reboot.8.html"&gt;&lt;code&gt;reboot&lt;/code&gt;, &lt;code&gt;halt&lt;/code&gt;, and &lt;code&gt;poweroff&lt;/code&gt;&lt;/a&gt; are some additional commands that Linux provides to stop the system.  These commands can be more &amp;#8220;forceful&amp;#8221; than &lt;code&gt;shutdown&lt;/code&gt; but &lt;a href="http://askubuntu.com/questions/64995/what-is-the-difference-between-shutdown-and-poweroff-commands"&gt;similar to it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The simplicity of these commands give the illusion that the system state of Linux is running or not running.  It isn&amp;#8217;t quite that simple.  Linux can operate in several states called runlevels.
&lt;h2&gt;Linux&amp;nbsp;Runlevels&lt;/h2&gt;
A &lt;a href="http://en.wikipedia.org/wiki/Runlevel"&gt;runlevel&lt;/a&gt; is a preset operating state for the Linux operating system.  A system can be booted into  any of several runlevels, each of which is represented by a single digit integer. Each runlevel designates a different system configuration and allows access to a different combination of processes and system&amp;nbsp;resources.&lt;/p&gt;
&lt;p&gt;Seven runlevels are supported in the standard Linux kernel. They are:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;0 - System Halted:&lt;/strong&gt;  all system activity is stopped, the system can be safely powered&amp;nbsp;down&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;1 - Single User:&lt;/strong&gt;  single superuser is the only active login and no daemons (services) are started. It is mainly used for&amp;nbsp;maintenance.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;2 - Multiple Users:&lt;/strong&gt; multiple users allowed but network filesystem (&lt;span class="caps"&gt;HFS&lt;/span&gt;) is&amp;nbsp;not.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;3 - Multiple Users:&lt;/strong&gt;  multiple users are allowed command line (i.e., all-text mode); the standard runlevel for most&amp;nbsp;servers&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;4 -&amp;nbsp;User-Definable&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;5 - Multiple Users:&lt;/strong&gt; multiple users are allowed graphical user interface; the standard runlevel for most desktop&amp;nbsp;systems&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;6 - Reboot:&lt;/strong&gt; just like run level 0 except a reboot is issued, used when restarting the&amp;nbsp;system&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
In the interests of completeness, there is also a runlevel &amp;#8216;S&amp;#8217; that the system uses on it&amp;#8217;s way to another runlevel. Read the &lt;a href="http://linux.about.com/od/commands/l/blcmdl8_init.htm"&gt;man page for the &lt;code&gt;init&lt;/code&gt;&lt;/a&gt; command for more information, but you can safely skip this for all practical&amp;nbsp;purposes.&lt;/p&gt;
&lt;p&gt;By default Linux boots either to runlevel 3 or to runlevel 5. The former permits the system to run all services except for a &lt;span class="caps"&gt;GUI&lt;/span&gt;. The latter allows all services including a &lt;span class="caps"&gt;GUI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Booting into a different runlevel can help solve certain problems. For example, if a change made in the X Window System configuration on a machine that has been set up to boot into a &lt;span class="caps"&gt;GUI&lt;/span&gt; has rendered the system unusable, it is possible to temporarily boot into a console (i.e., all-text mode) runlevel (i.e., runlevels 3 or 1) in order to repair the error and then reboot into the &lt;span class="caps"&gt;GUI&lt;/span&gt;.  Likewise, if a machine will not boot due to a damaged configuration file or will not allow logging-in because of a corrupted /etc/passwd file  or because of a forgotten password, the problem can solved by first booting into single-user mode (i.e. runlevel&amp;nbsp;1).&lt;/p&gt;
&lt;p&gt;There are two commands for directly reading or manipulating the Linux rumlevels:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;code&gt;runlevel&lt;/code&gt;&lt;/strong&gt; - Use the runlevel command to tell you two things: The last run level, and the current run level.  If the first character is &amp;#8217;N&amp;#8217;, it stands for none, meaning there has been no run level change since powering&amp;nbsp;up.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;code&gt;telinit&lt;/code&gt;&lt;/strong&gt; - The program responsible for altering the runlevel is init, and it can be called using the telinit&amp;nbsp;command.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The &lt;a href="http://www.debian-administration.org/articles/212"&gt;topic of runlevels&lt;/a&gt; is actually much richer than what is illustrated here.  It plays a key role in Linux background processes, called services or daemons.  For more, check out this &lt;a href="http://pthree.org/2008/02/26/managing-services-in-ubuntu-part-i-an-introduction-to-runlevels/"&gt;Managing Services in Ubuntu, Part I: An Introduction to Runlevels&lt;/a&gt; and &lt;a href="http://pthree.org/2008/02/27/managing-services-in-ubuntu-part-ii-managing-runlevels/"&gt;Part &lt;span class="caps"&gt;II&lt;/span&gt;&lt;/a&gt;.
&lt;h2&gt;Getting a Login From a Frozen &lt;span class="caps"&gt;GUI&lt;/span&gt;&amp;nbsp;Screen&lt;/h2&gt;
A not so common problem is when a frozen, full screen X application takes control over your mouse and keyboard and it seems that the only way to regain access to the system is to force a shutdown.  The fact is, if you could get to a some form of terminal session, you might be able to kill the offending process and get out of this frozen state.  This is where accessing a console screen by pressing &lt;span class="caps"&gt;CTRL&lt;/span&gt; + &lt;span class="caps"&gt;ALT&lt;/span&gt; + Fx (where Fx is a function key on the keyboard from F1 to F6) can be very&amp;nbsp;handy.&lt;/p&gt;
&lt;p&gt;The X Server can often be the source of these frozen screen situations, so restarting the X Server may be the solution.  This can be done via the key combination Ctrl+Alt+Backspace.  Keep in mind that you will loses any unsaved data in applications.  Also, this capability is turned off by default on may Linux systems (including Ubuntu).  This was done to avoid confusion by  people accustom to &lt;span class="caps"&gt;MS&lt;/span&gt; Windows.  An alternative key combination is as follows:
&lt;p style="padding-left:30px;"&gt;Press AltGR + SysRQ + K instead (AltGR is the &lt;span class="caps"&gt;RIGHT&lt;/span&gt; &lt;span class="caps"&gt;ALT&lt;/span&gt; button and SysRQ is labelled &amp;#8220;Print Screen&amp;#8221; most of the times, and remember to press and hold the keys in the in the right sequence, e.g. starting with ALtGR, and ending with the K(ill)&amp;nbsp;key).&lt;/p&gt;
You can turn back on the Ctrl+Alt+Backspace by following the instructions &lt;a href="https://wiki.ubuntu.com/XorgCtrlAltBackspace"&gt;here&lt;/a&gt;.
&lt;h2&gt;Magic SysRq&amp;nbsp;Key&lt;/h2&gt;
If the system is completely locks up, or &lt;a href="http://www.linuxjournal.com/content/rebooting-magic-way"&gt;your filesystem fails&lt;/a&gt;, there are still alternatives. The &amp;#8220;&lt;a href="http://en.wikipedia.org/wiki/Magic_SysRq_key"&gt;magic SysRq key&lt;/a&gt;&amp;#8221; provides a way to send commands directly to the kernel through the &lt;a href="http://www.linuxjournal.com/article/8381"&gt;&lt;code&gt;/proc&lt;/code&gt; filesystem&lt;/a&gt;. It is enabled via a kernel compile time option, CONFIG_MAGIC_SYSRQ, which seems to be standard on most distributions.The magic SysRq key (or PrintScrn or Print Screen on some keyboards) is a key combination understood by the Linux kernel, which allows the user to perform various low-level commands regardless of the system&amp;#8217;s state. This is a surprising feature of the kernel but is commonly used to perform a safe reboot of a locked-up Linux computer.  See this post for some &lt;a href="http://royal.pingdom.com/2012/06/26/sysadmin-needs-sysrq-magic/"&gt;historical perspective of the SysReq key&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To check if the CONFIG_MAGIC_SYSRQ option is enable on your Linux kernel, check the configuration file that installed to /boot partition.  Do this via:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;cat /boot/config-$(uname -r) | grep CONFIG_MAGIC_SYSRQ&lt;/code&gt;&lt;/p&gt;
If your get &amp;#8220;&lt;code&gt;CONFIG_MAGIC_SYSRQ=y"&lt;/code&gt;, then its enabled on&amp;nbsp;your kernel.&lt;/p&gt;
&lt;p&gt;When running a kernel with SysRq compiled in, &lt;code&gt;/proc/sys/kernel/sysrq&lt;/code&gt; controls the functions allowed to be invoked via the SysRq key.  If the file contains &amp;#8220;&lt;code&gt;1&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;, that means that every possible SysRq request is allowed. See &lt;a href="http://lxr.linux.no/linux/Documentation/sysrq.txt"&gt;here&lt;/a&gt; for more on the &lt;code&gt;/proc/sys/kernel/sysrq&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To actually reboot the machine there is a well know key sequence to follow: &lt;span class="caps"&gt;REISUB&lt;/span&gt; (or &lt;span class="caps"&gt;REISUO&lt;/span&gt; if you want to turn off the system instead of reboot).  Basically, if you keep pressed &lt;span class="caps"&gt;ALT&lt;/span&gt; + SysRq + R and then while you keep pressed &lt;span class="caps"&gt;ALT&lt;/span&gt; + SysRq you press E, I, S, U, B with about 1 second between each letter (do not type it fast). Your system will reboot. This  is a safer alternative to just cold rebooting the&amp;nbsp;computer.&lt;/p&gt;
&lt;p&gt;Mnemonic for &lt;span class="caps"&gt;REISUB&lt;/span&gt; is &lt;strong&gt;R&lt;/strong&gt;eboot &lt;strong&gt;E&lt;/strong&gt;ven &lt;strong&gt;I&lt;/strong&gt;f  &lt;strong&gt;S&lt;/strong&gt;ystem &lt;strong&gt;U&lt;/strong&gt;tterly &lt;strong&gt;B&lt;/strong&gt;roken, and the keys pressed do the following:
&lt;p style="padding-left:60px;"&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;R&lt;/strong&gt; - Switch to &lt;a href="http://unix.stackexchange.com/questions/16530/what-does-raw-unraw-keyboard-mode-mean"&gt;&lt;span class="caps"&gt;XLATE&lt;/span&gt;&amp;nbsp;mode&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; - Send &lt;a href="http://www.gnu.org/software/libc/manual/html_node/Termination-Signals.html"&gt;Terminate signal&lt;/a&gt; to all processes except for&amp;nbsp;init&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; - Send &lt;a href="http://meinit.nl/the-3-most-important-kill-signals-on-the-linux-unix-command-line"&gt;Kill signal&lt;/a&gt; to all processes except for&amp;nbsp;init&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;S&lt;/strong&gt; - &lt;a href="http://linux.die.net/man/1/sync"&gt;Sync&lt;/a&gt; all mounted&amp;nbsp;filesystems&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;U&lt;/strong&gt; - Remount filesystems as&amp;nbsp;read-only&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;B&lt;/strong&gt; -&amp;nbsp;Reboot&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The magic SysRq key supports more then just the &lt;span class="caps"&gt;REISUB&lt;/span&gt; keys.  To see the larger range of thing you can do via Magic SysRq Key&amp;#8217;s direct communications with the kernel, &lt;a href="http://www.isotton.com/devel/docs/sysrq-cheatsheet/"&gt;check out here&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 16 Jun 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-06-16:posts/2013/Jun/16/linux-reboot-or-my-system-is-frozen-and-i-cant-get up/</guid><category>Linux</category></item><item><title>RTL-SDR Software Defined Radio (SDR) for $20</title><link>http://jeffskinnerbox.me/posts/2013/May/26/rtl-sdr-software-defined-radio-SDR-for-20/</link><description>&lt;p&gt;While researching the &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio project, I came upon references to the &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki/Hardware"&gt;&lt;span class="caps"&gt;RTL2832&lt;/span&gt; &lt;span class="caps"&gt;TV&lt;/span&gt; tuners&lt;/a&gt;. These dongle are made to receive and decode the European standard digital television, &lt;a href="http://en.wikipedia.org/wiki/DVB-T"&gt;Digital Video Broadcasting — Terrestrial (&lt;span class="caps"&gt;DVB&lt;/span&gt;-T)&lt;/a&gt;. (By the way, the North American standard is &lt;a href="http://en.wikipedia.org/wiki/ATSC_tuner"&gt;Advanced Television Systems Committee (&lt;span class="caps"&gt;ATSC&lt;/span&gt;)&lt;/a&gt;, and not  compatible with &lt;span class="caps"&gt;DVB&lt;/span&gt;-T, so this will not work in North America for &lt;span class="caps"&gt;TV&lt;/span&gt; reception.)  In 2012, &lt;a href="http://thread.gmane.org/gmane.linux.drivers.video-input-infrastructure/44461/focus=44461"&gt;Antii Palosaari&lt;/a&gt;, discovered that there is a device mode for the Realtek &lt;span class="caps"&gt;DVB&lt;/span&gt;-T device chip (&lt;a href="http://www.realtek.com.tw/products/productsView.aspx?Langid=1&amp;amp;PFid=35&amp;amp;Level=4&amp;amp;Conn=3&amp;amp;ProdID=257"&gt;&lt;span class="caps"&gt;RTL2832U&lt;/span&gt;&lt;/a&gt;) in which raw samples can be captured and transferred to a host computer. This feature enables this device to be used as an inexpensive &amp;#8220;front end&amp;#8221;  for a &lt;a href="http://en.wikipedia.org/wiki/Software-defined_radio"&gt;Software Defined Radio (&lt;span class="caps"&gt;SDR&lt;/span&gt;)&lt;/a&gt; that could be implemented on a &lt;span class="caps"&gt;PC&lt;/span&gt; or other&amp;nbsp;device.&lt;/p&gt;
&lt;p&gt;A &lt;span class="caps"&gt;SDR&lt;/span&gt; provide the ability to sample and record the electromagnetic energy (or &lt;a href="http://en.wikipedia.org/wiki/Radio_frequency"&gt;radio frequency&lt;/a&gt;, called &amp;#8220;&lt;span class="caps"&gt;RF&lt;/span&gt;&amp;#8221; for short) with no preconceived idea as to the structure of the &lt;span class="caps"&gt;RF&lt;/span&gt; &lt;a href="http://en.wikipedia.org/wiki/Signal_(information_theory)"&gt;signal&lt;/a&gt;.  In a sense, you can interact with the &lt;span class="caps"&gt;RF&lt;/span&gt; signal in its must fundamental form.  In addition, a &lt;span class="caps"&gt;SDR&lt;/span&gt; allows you to implement, by means of software, a radio communication system where components that have been typically implemented in&amp;nbsp;hardware.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;SDR&lt;/span&gt; solutions for the professional-grade applications and amateur radio have been around for some time, but the appearance of cheap solutions for the hacker is new.  There are general purpose &lt;span class="caps"&gt;SDR&lt;/span&gt; platforms for over &lt;mathjax&gt;$1000, like the Ettus Research &lt;a href="http://www.ettus.com/"&gt;Universal Software Radio Peripheral (USRP)&lt;/a&gt;, the $&lt;/mathjax&gt;525 &lt;a href="http://www.rfspace.com/RFSPACE/SDR-IQ.html"&gt;&lt;span class="caps"&gt;SDR&lt;/span&gt;-&lt;span class="caps"&gt;IQ&lt;/span&gt; Receiver&lt;/a&gt;, to the &lt;mathjax&gt;$450 &lt;a href="http://nuand.com/bladeRF"&gt;bladeRF&lt;/a&gt; from the Kickstarter Nuand or Great Scott's &lt;a href="http://www.forbes.com/sites/andygreenberg/2012/10/19/darpa-funded-radio-hackrf-aims-to-be-a-300-wireless-swiss-army-knife-for-hackers/"&gt;DARPA-Funded&lt;/a&gt; &lt;a href="http://ossmann.blogspot.com/2012/06/introducing-hackrf.html"&gt;HackRF&lt;/a&gt; for an estimate $&lt;/mathjax&gt;300, and now the $20 hacker grade dongle discussed here.  But unlike most of the other referenced solutions,  the dongle  requires a &lt;span class="caps"&gt;PC&lt;/span&gt;, or some sort of attached processor, to provide the signal&amp;nbsp;processing.&lt;/p&gt;
&lt;p&gt;In all &lt;span class="caps"&gt;SDR&lt;/span&gt; solutions, a significant amounts of the &lt;a href="http://en.wikipedia.org/wiki/Signal_processing"&gt;signal processing&lt;/a&gt; is handed over to a numerical processor, rather than being done in special-purpose &lt;span class="caps"&gt;RF&lt;/span&gt; hardware. Such a design produces a radio which can receive and transmit widely different radio protocols (referred to as a waveform) based solely on the software used.  So in a &lt;span class="caps"&gt;SDR&lt;/span&gt; solution, the electromagnetic waveform is rapidly sampled, the sample values are converted to numerical values, and these numbers are manipulated via a discipline called &lt;a href="http://en.wikipedia.org/wiki/Digital_signal_processing"&gt;digital signal processing (&lt;span class="caps"&gt;DSP&lt;/span&gt;)&lt;/a&gt;.  Ultimately, the resulting &lt;span class="caps"&gt;DSP&lt;/span&gt; numerical values produced are converted to an analog signal that goes to a speaker, &lt;span class="caps"&gt;TV&lt;/span&gt;, or other such output&amp;nbsp;device.&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;DVB&lt;/span&gt;-T dongles can provide a critical component of a cheap &lt;span class="caps"&gt;SDR&lt;/span&gt;, since the chip allows transferring the raw I/Q samples to the host. What &lt;a href="http://www.ni.com/white-paper/4805/en"&gt;I/Q samples&lt;/a&gt; are is well beyond what I wish to describe here, but let it be said that practical hardware design concerns make I/Q data the critical for signal processing.  So the fact the dongle does the digital sampling, called a &lt;a href="http://en.wikipedia.org/wiki/Analog-to-digital_converter"&gt;analog-to-digital converter (&lt;span class="caps"&gt;ADC&lt;/span&gt;)&lt;/a&gt;, and outputs I/Q samples, makes it a valuable asset for a &lt;span class="caps"&gt;SDR&lt;/span&gt;&amp;nbsp;solution.&lt;/p&gt;
&lt;p&gt;So how does one get your &lt;span class="caps"&gt;PC&lt;/span&gt; configured to take the dongles I/Q output and create a &lt;span class="caps"&gt;SDR&lt;/span&gt;?  There is &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio&lt;/a&gt; (where this post first begun), but a simpler starting point would be the popular, easy, and open source &lt;a href="http://sdrsharp.com/"&gt;&lt;span class="caps"&gt;SDR&lt;/span&gt;#&lt;/a&gt;.  &lt;span class="caps"&gt;SDR&lt;/span&gt;# can perform the required signal processing in an intuitive user interface (if your into Ham Radio, or bit of a &lt;span class="caps"&gt;RF&lt;/span&gt; hacker, and such).  Unfortunately, I couldn&amp;#8217;t get &lt;span class="caps"&gt;SDR&lt;/span&gt;# (a &lt;span class="caps"&gt;MS&lt;/span&gt; Windows application) to operate under  Linux and I had to resorted to some simpler utilities.
&lt;h2&gt;The&amp;nbsp;Dongle&lt;/h2&gt;
All this sounds exciting to me (what a geek!) so I &lt;a href="http://www.amazon.com/gp/product/B008S7AVTC/ref=oh_details_o00_s00_i00?ie=UTF8&amp;amp;psc=1"&gt;purchased from Amazon&lt;/a&gt; one of the dongles, specifically the NooElec &lt;span class="caps"&gt;TV28T&lt;/span&gt; v2 &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;DVB&lt;/span&gt;-T,  &lt;span class="caps"&gt;FM&lt;/span&gt;+&lt;span class="caps"&gt;DAB&lt;/span&gt; &amp;amp; &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; Receiver, &lt;span class="caps"&gt;RTL2832U&lt;/span&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &lt;span class="caps"&gt;R820T&lt;/span&gt; Tuner, &lt;span class="caps"&gt;MCX&lt;/span&gt; Input.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;NooElec &lt;span class="caps"&gt;TV28T&lt;/span&gt;&lt;/strong&gt; - This is the &lt;a href="http://www.nooelec.com/store/software-defined-radio/sdr-receivers/tv28tv2.html#.UZQmefH_5k8"&gt;manufacture&lt;/a&gt; and model name for the&amp;nbsp;device&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;DVB&lt;/span&gt;-T&lt;/strong&gt; - This device is made to receive and decode the European standard digital television, &lt;a href="http://en.wikipedia.org/wiki/DVB-T"&gt;Digital Video Broadcasting — Terrestrial (&lt;span class="caps"&gt;DVB&lt;/span&gt;-T)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;FM&lt;/span&gt;+&lt;span class="caps"&gt;DAB&lt;/span&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; Receiver&lt;/strong&gt; - The device can also receive &lt;span class="caps"&gt;FM&lt;/span&gt; radio and &lt;a href="http://en.wikipedia.org/wiki/Digital_Audio_Broadcasting"&gt;Digital Audio Broadcasting (&lt;span class="caps"&gt;DAB&lt;/span&gt;)&lt;/a&gt; used in several countries, particularly in Europe. &lt;a href="http://www.rtlsdr.org/"&gt;&lt;span class="caps"&gt;RTLSDR&lt;/span&gt;&lt;/a&gt; is the popular name give to this class of device, which contain the &lt;span class="caps"&gt;RTL2832U&lt;/span&gt; chip, which can be hacked for &lt;span class="caps"&gt;SDR&lt;/span&gt;&amp;nbsp;use.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;RTL2832U&lt;/span&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &lt;span class="caps"&gt;R820T&lt;/span&gt; Tuner&lt;/strong&gt; - These are the &lt;a href="http://www.realtek.com.tw/products/productsView.aspx?Langid=1&amp;amp;PFid=35&amp;amp;Level=4&amp;amp;Conn=3&amp;amp;ProdID=257"&gt;&lt;span class="caps"&gt;DVB&lt;/span&gt;-T demodulator&lt;/a&gt; and &lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;ved=0CCwQFjAA&amp;amp;url=http%3A%2F%2Fsuperkuh.com%2Fgnuradio%2FR820T_datasheet-Non_R-20111130_unlocked.pdf&amp;amp;ei=PCuUUbnGI-e80QHfwoDwDw&amp;amp;usg=AFQjCNFUMXBDm9QvhzhIzJGckOLi8n5gaQ&amp;amp;sig2=FA2mXxtZhkdokBQ3oegvdQ&amp;amp;bvm=bv.46471029,d.dmQ"&gt;&lt;span class="caps"&gt;TV&lt;/span&gt; Tuner&lt;/a&gt; chips used in the&amp;nbsp;device.&lt;/li&gt;
    &lt;li&gt; &lt;strong&gt;&lt;span class="caps"&gt;MCX&lt;/span&gt; Input&lt;/strong&gt; – Is a 3.6 millimeter (0.14 in) micro coaxial (&lt;span class="caps"&gt;MCX&lt;/span&gt;) coaxial &lt;span class="caps"&gt;RF&lt;/span&gt; connector 30% smaller that Sub-Miniature version B (&lt;span class="caps"&gt;SMB&lt;/span&gt;) connectors that are typically used in the &lt;span class="caps"&gt;USA&lt;/span&gt;.  &lt;span class="caps"&gt;MCX&lt;/span&gt; is a standard in Europe. It provides broadband capability from &lt;span class="caps"&gt;DC&lt;/span&gt; to 6&amp;nbsp;GHz.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/71ratxr2wjl-_sl1500_.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="71RaTxr2WJL._SL1500_" src="/images/NooElec_TV28T.jpg" width="180" height="180" /&gt;
&lt;/a&gt;
 NooElec &lt;span class="caps"&gt;TV28T&lt;/span&gt;
From the research I have done, I have found that the NooElec &lt;span class="caps"&gt;TV28T&lt;/span&gt; dongle provides an approximate tuning range of 25MHz-1700MHz for the &lt;span class="caps"&gt;SDR&lt;/span&gt;.  It has been demonstrated to be compatible with most &lt;span class="caps"&gt;SDR&lt;/span&gt; software, including &lt;span class="caps"&gt;SDR&lt;/span&gt;#.  You can pick up &lt;span class="caps"&gt;FM&lt;/span&gt; radio but  don&amp;#8217;t expect to pick up long-wave or &lt;span class="caps"&gt;AM&lt;/span&gt; broadcasts since their spectrum lies below 25MHz. You can listen to the 12m 10m 6m 2m 1.25m 70cm 33cm and 23cm ham band, as well as &lt;span class="caps"&gt;CB&lt;/span&gt;, Marine &lt;span class="caps"&gt;VHF&lt;/span&gt;, &lt;span class="caps"&gt;RC&lt;/span&gt; Band, &lt;span class="caps"&gt;FRS&lt;/span&gt;, &lt;span class="caps"&gt;GMRS&lt;/span&gt;, and Airband&amp;nbsp;(Aviation).&lt;/p&gt;
&lt;p&gt;The dongle will not provide the desired &lt;span class="caps"&gt;SDR&lt;/span&gt; function out of the box.  It must first be configured (aka hacked) to stream the I/Q samples to the &lt;span class="caps"&gt;USB&lt;/span&gt; output.  This is where &lt;a href="http://sdr.osmocom.org/trac/wiki/rtl-sdr"&gt;Antii Palosaari&amp;#8217;s&lt;/a&gt; discovery comes into play.  The wiki&amp;#8217;s &lt;a href="http://rtlsdr.org/"&gt;rtlsdr.org&lt;/a&gt; and &lt;a href="http://sdr.osmocom.org/trac/"&gt;OsmoSDR&lt;/a&gt; are good sources for disparate information concerning &lt;span class="caps"&gt;RTL2832U&lt;/span&gt; based &lt;span class="caps"&gt;SDR&lt;/span&gt;, typically called &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt;.  For my purposes, I wanted to get something initially working on my &lt;span class="caps"&gt;PC&lt;/span&gt; (Linux &lt;span class="caps"&gt;OS&lt;/span&gt;) but ultimately I wanted to have the dongle attached to a Raspberry Pi (RPi) and have the RPi be a server or archive of I/Q samples (sort of a intelligent wide band scanner as done in &lt;a href="http://www.jpmeijers.com/drupal/node/15"&gt;Raspberry Pi and &lt;span class="caps"&gt;DVB&lt;/span&gt;-T receivers&lt;/a&gt; and here &lt;a href="http://www.hamradioscience.com/raspberry-pi-as-remote-server-for-rtl2832u-sdr/"&gt;Raspberry Pi as Remote Server for RTL2832u &lt;span class="caps"&gt;SDR&lt;/span&gt;&lt;/a&gt; and here &lt;a href="http://www.jpmeijers.com/drupal/node/15"&gt;&lt;span class="caps"&gt;SDR&lt;/span&gt; with Raspberry Pi and &lt;span class="caps"&gt;DVB&lt;/span&gt;-T receivers&lt;/a&gt;) that could be processed by my &lt;span class="caps"&gt;PC&lt;/span&gt;.  Therefore, the first step is to get the dongle and a good &lt;span class="caps"&gt;SDR&lt;/span&gt; processor working on my &lt;span class="caps"&gt;PC&lt;/span&gt;.
&lt;h2&gt;Building rtl-sdr Library and Capture&amp;nbsp;Tools&lt;/h2&gt;
The  OsmoSDR wiki has some good instructions on &lt;a href="http://sdr.osmocom.org/trac/wiki/rtl-sdr#Buildingthesoftware"&gt;how to build the rtl-sdr software&lt;/a&gt;. I basically followed the wiki&amp;#8217;s instructions but I had to first install &lt;a href="http://www.cmake.org/"&gt;cmake&lt;/a&gt; (&lt;code&gt;sudo apt-get install cmake&lt;/code&gt;) and &lt;a href="http://www.libusb.org/"&gt;libusb&lt;/a&gt; (&lt;code&gt;sudo apt-get install libusb-1.0-0-dev&lt;/code&gt;) to get a successful make.  I then using the following&amp;nbsp;commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd ~/src
git clone git://git.osmocom.org/rtl-sdr.git
cd rtl-sdr/
mkdir build
cd build
cmake ../
make
sudo make install
sudo ldconfig
cmake ../ -DINSTALL_UDEV_RULES=ON
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The result is source code placed in &lt;code&gt;~/src/rtl-sdr/build/src&lt;/code&gt; and the executables are placed in &lt;code&gt;/usr/local/bin&lt;/code&gt;: rtl_adsb, rtl_eeprom, rtl_fm, rtl_sdr, rtl_tcp, rtl_test.  The documentation for these utilities is nearly non-existent.  The only documentation I could fine is for the rtl_fm, a posting called &lt;a href="http://kmkeen.com/rtl-demod-guide/index.html"&gt;Rtl_fm Guide: The long lost documentation&lt;/a&gt;.  If you use the command line option &lt;code&gt;--help&lt;/code&gt;, you will get some description for each of the tools (see the very end of this post for some screen captures).  Here is a short description and some example usages:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;rtl_sdr&lt;/strong&gt; - This is an I/Q recorder for &lt;span class="caps"&gt;RTL2832&lt;/span&gt; based &lt;span class="caps"&gt;DVB&lt;/span&gt;-T receivers. To send 10 samples to stdout, and sampled at 1.8Ms/s with frequency tuned to 392MHz: &lt;code&gt;rtl_sdr -s1.8e6 -f392e6 -n10 -.&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_test&lt;/strong&gt; - Bench-marking tool for &lt;span class="caps"&gt;RTL2832&lt;/span&gt; based &lt;span class="caps"&gt;DVB&lt;/span&gt;-T receivers.  The &lt;code&gt;-t&lt;/code&gt; option only works for Elonics E4000 tuners (Therefore, on non-E4000 tuners, you can not test for the tuning range).  To check the possible tuning range: &lt;code&gt;rtl_test -t&lt;/code&gt;.  To check the maximum sample-rate possible on your machine (change the rate down until no sample loss occurs): &lt;code&gt;rtl_test -s 2.5e6&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_fm&lt;/strong&gt; - A simple narrow band &lt;span class="caps"&gt;FM&lt;/span&gt; demodulator for &lt;span class="caps"&gt;RTL2832&lt;/span&gt; based &lt;span class="caps"&gt;DVB&lt;/span&gt;-T receivers.  Rtl_fm is a general purpose analog demodulator. It can handle &lt;span class="caps"&gt;FM&lt;/span&gt;, &lt;span class="caps"&gt;AM&lt;/span&gt; and &lt;span class="caps"&gt;SSB&lt;/span&gt;. It can scan more than a hundred frequencies a second. Make sure &lt;code&gt;rtl_fm&lt;/code&gt; and the player are both set to use the same data rate.  Tune into a local &lt;span class="caps"&gt;FM&lt;/span&gt; radio station : &lt;code&gt;rtl_fm -W -f 99.5M | play -r 32k -t raw -e signed-integer -b 16 -c 1 -V1 -&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_tcp&lt;/strong&gt; -  An I/Q sample server for &lt;span class="caps"&gt;RTL2832&lt;/span&gt; based &lt;span class="caps"&gt;DVB&lt;/span&gt;-T receivers.  I/Q samples are streamed to a specified &lt;span class="caps"&gt;IP&lt;/span&gt; address and&amp;nbsp;port.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_adsb&lt;/strong&gt; - A simple Automatic dependent surveillance-broadcast (&lt;span class="caps"&gt;ADS&lt;/span&gt;-B) decoder.  &lt;span class="caps"&gt;ADS&lt;/span&gt;-B is a surveillance technology for tracking aircraft as part of the Next Generation Air Transportation System&amp;nbsp;(NextGen).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;rtl_eeprom&lt;/strong&gt; - An &lt;span class="caps"&gt;EEPROM&lt;/span&gt; programming tool for &lt;span class="caps"&gt;RTL2832&lt;/span&gt; based &lt;span class="caps"&gt;DVB&lt;/span&gt;-T&amp;nbsp;receivers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;First Run of the&amp;nbsp;Dongle&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/sdrsharp.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="sdrsharp" src="/images/sdrsharp.png?w=150" width="150" height="107" /&gt;
&lt;/a&gt;
The first thing to do is to plug in the dongle and run the test &lt;code&gt;rtl_test -t&lt;/code&gt;.  It gave me an error statement expressing &amp;#8220;installing the udev rules file rtl-sdr.rules&amp;#8221;.  The site &amp;#8220;&lt;a href="http://www.instructables.com/id/rtl-sdr-on-Ubuntu/step3/Setup-udev-rules/"&gt;rtl-sdr on Ubuntu&lt;/a&gt;&amp;#8221; provides some instructions on how to fix this.  The command &lt;code&gt;lsusb | grep Realtek&lt;/code&gt; gives me the information I need to create the following entry into &lt;code&gt;/etc/udev/rules.d&lt;/code&gt;:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;SUBSYSTEM=="usb", ATTRS{idVendor}=="0bda", ATTRS{idProduct}=="2838", GROUP="adm", MODE="0666", SYMLINK+="rtl_sdr"&lt;/code&gt;&lt;/p&gt;
After another try, I got a successful test.  Next, I sent ten I/O samples to stdout and then tuned into a local &lt;span class="caps"&gt;FM&lt;/span&gt; radio station using these commands:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;rtl_sdr -s1.8e6 -f392e6 -n10 -
rtl_fm -W -f 99.5M | play -r 32k -t raw -e signed-integer -b 16 -c 1 -V1 -&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Getting &lt;span class="caps"&gt;SDR&lt;/span&gt;# Running in Linux (didn&amp;#8217;t&amp;nbsp;work)&lt;/h2&gt;
The  rtlsdr.org wiki has some instructions on &lt;a href="http://rtlsdr.org/softwarelinux"&gt;how to get &lt;span class="caps"&gt;SDR&lt;/span&gt;# working within Linux&lt;/a&gt;.  Also, the &lt;a href="http://sdrsharp.com/"&gt;&lt;span class="caps"&gt;SDR&lt;/span&gt;# home page&lt;/a&gt; has a link called &lt;a href="http://pastebin.com/tgYwRBQt"&gt;One shot install script for Linux&lt;/a&gt;. Both these sites require you to build the software from source code. Mono is able to run Microsoft .&lt;span class="caps"&gt;NET&lt;/span&gt; applications in Linux.  I attempted this and got errors that I could not figure out (I&amp;#8217;m not a &lt;span class="caps"&gt;MS&lt;/span&gt; Windows developer type and I&amp;#8217;m not interested becoming&amp;nbsp;one!).&lt;/p&gt;
&lt;p&gt;Given this, I chose a different path. I found another posting that claim to &lt;a href="http://opensource.telkomspeedy.com/wiki/index.php/SDR:_SDRSharp_Ubuntu_12.04"&gt;get &lt;span class="caps"&gt;SDR&lt;/span&gt;# running in Linux&lt;/a&gt;. In this case, only executable will be loaded, not source code that needs to be compiled. You can download &lt;span class="caps"&gt;SDR&lt;/span&gt;# executable from this &lt;a href="http://sdrsharp.com/index.php/downloads"&gt;posting&lt;/a&gt;.  You&amp;#8217;ll also need to install &lt;a href="http://www.mono-project.com/Main_Page"&gt;mono&lt;/a&gt; and &lt;a href="http://www.portaudio.com/"&gt;PortAudio&lt;/a&gt;.  Here is how I did&amp;nbsp;it:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install mono-complete monodevelop
sudo apt-get install libportaudio2
cd ~/src
mkdir sdrsharp
cd sdrsharp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Within &lt;code&gt;~/src/sdrsharp&lt;/code&gt;, install the downloaded &lt;span class="caps"&gt;SDR&lt;/span&gt;# zip file and unzip&amp;nbsp;it.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cd sdr-nightly
ln -s /usr/local/lib/librtlsdr.so librtlsdr.dll
ln -s /usr/lib/i386-linux-gnu/libportaudio.so.2 libportaudio.so
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note, for the above link, you may need to use &lt;code&gt;locate libportaudio.so.2&lt;/code&gt; to find the&amp;nbsp;PortAudio library.&lt;/p&gt;
&lt;p&gt;To test things out, I ran the application using mono sdrsharp.exe and got a core dump.  I attempted this again using the stable version of &lt;span class="caps"&gt;SDR&lt;/span&gt;# instead of the nightly build and got the same results.  After the typical thrashing about, I found a &lt;a href="https://lists.ubuntu.com/archives/ubuntu-mono/2013-February/041580.html"&gt;bug report for this problem&lt;/a&gt;.  Also see &amp;#8220;&lt;a href="http://epic.geek.nz/page/2012/12/29/sdr-software-good-bad-and-ugly/"&gt;&lt;span class="caps"&gt;SDR&lt;/span&gt; Software – Good, bad and very ugly&lt;/a&gt;&amp;#8220;.  Also, there seems to be some sort of &lt;a href="http://dangerousprototypes.com/2012/08/05/confusion-over-sdr-vs-opensdrsharp/"&gt;dispute between &lt;span class="caps"&gt;SDR&lt;/span&gt;# and a new group calling itself Open &lt;span class="caps"&gt;SDR&lt;/span&gt;#&lt;/a&gt;.  I&amp;#8217;m not sure, but what appears to be at the heart of this is the level of support of &lt;span class="caps"&gt;SDR&lt;/span&gt;# within Linux.  All this is disappointing since &lt;span class="caps"&gt;SDR&lt;/span&gt;# is a very popular tool and I wish I could find away to make use of it within&amp;nbsp;Linux.&lt;/p&gt;
&lt;p&gt;The next logical &lt;span class="caps"&gt;SDR&lt;/span&gt; tool to try would be the Linux-based &lt;a href="http://www.oz9aec.net/index.php/gnu-radio/gqrx-sdr"&gt;Gqrx &lt;span class="caps"&gt;SDR&lt;/span&gt; receiver&lt;/a&gt;, but in this case, it is dependent on &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio&lt;/a&gt;.  I&amp;#8217;m attempting to delay my conquest of &lt;span class="caps"&gt;GNU&lt;/span&gt; Radio until I do some experimenting with the dongle.  So lets turn our attention to a much simpler tool.
&lt;h2&gt;Getting &lt;span class="caps"&gt;RTL&lt;/span&gt;-&lt;span class="caps"&gt;SDR&lt;/span&gt; Scanner&amp;nbsp;Running&lt;/h2&gt;
&lt;a href="http://eartoearoak.com/software/rtlsdr-scanner"&gt;&lt;span class="caps"&gt;RTLSDR&lt;/span&gt; Scanner&lt;/a&gt; is a simple frequency scanning &lt;span class="caps"&gt;GUI&lt;/span&gt; using the OsmoSDR rtl-sdr library.  I more or less followed the &lt;a href="http://eartoearoak.com/software/rtlsdr-scanner/rtlsdr-scanner-installation"&gt;installation instructions&lt;/a&gt; but they are confusing/out-of-date and you&amp;#8217;ll needed to do some adjustments.  The OsmoSDR rtlsdr library has already been installed earlier in the text, so its not listed here.  To get the required files for &lt;span class="caps"&gt;RTLSDR&lt;/span&gt;&amp;nbsp;Scanner:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install python python-wxgtk2.8 python-matplotlib python-numpy
cd ~/src
git clone git://github.com/roger-/pyrtlsdr.git
cd pyrtlsdr
sudo setup.py
cd ~/src
git clone git://github.com/EarToEarOak/RTLSDR-Scanner.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/demo_waterfall.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="demo_waterfall.py" src="/images/demo_waterfall.jpg" width="250" height="140" /&gt;
&lt;/a&gt;
With this, I found I could run &lt;code&gt;~/src/pyrtlsdr/demo_waterfall.py&lt;/code&gt;.  Make sure to read the comments in the file to understand how to change the center frequency, gain, etc.  The image below is &lt;code&gt;demo_waterfall.py&lt;/code&gt; tuned to the amateur radio &lt;a href="http://en.wikipedia.org/wiki/6-meter_band"&gt;6 meters band&lt;/a&gt;.  The image is called a &lt;a href="http://en.wikipedia.org/wiki/Spectrogram"&gt;spectrogram&lt;/a&gt; (sometimes call spectral waterfall) is a dynamic, visual representation of the spectrum of frequencies in the &lt;span class="caps"&gt;RF&lt;/span&gt; signal.  Blue is low signal strength, where yellow, and red are higher&amp;nbsp;strengths.&lt;/p&gt;
&lt;p&gt;To get
&lt;code&gt;~/src/RTLSDR-Scanner/src/rtlsdr_scan.py&lt;/code&gt; to work, I had to do some coping of files as shown&amp;nbsp;below:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;cp ~/src/pyrtlsdr/rtlsdr/rtlsdr.py  ~/src/RTLSDR-Scanner/src/rtlsdr.py
cp ~/src/pyrtlsdr/rtlsdr/librtlsdr.py  ~/src/RTLSDR-Scanner/src/librtlsdr.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtlsdr-scanner.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: right" alt="rtlsdr_scan.py" src="/images//rtlsdr-scanner.jpg" width="250" height="145" /&gt;
&lt;/a&gt;
The image below is from &lt;code&gt;rtlsdr_scan.py&lt;/code&gt;, again tuned to the amateur radio 6 meters band.  Here again you see the signal strength of the individual amateur radios as vertical spikes.
So we now have auditory and visual proof the dongle is doing its job. Now its on to &lt;a href="http://jeffskinnerbox.wordpress.com/2013/07/08/gnu-radio-and-gqrx-sdr-receiver/"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Radio&lt;/a&gt;!
&lt;h2&gt;Command-Line Options for &lt;span class="caps"&gt;RTLSDR&lt;/span&gt; Capture&amp;nbsp;Tools&lt;/h2&gt;
For reference purposes, below are screen shots of the &lt;span class="caps"&gt;RTLSDR&lt;/span&gt; capture tool&amp;#8217;s command line options.
&lt;p&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test-s.jpg"&gt;&lt;img class="float" alt="rtl_test -s" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test-s.jpg?w=150" width="150" height="118" /&gt;&lt;/a&gt; rtl_test -s
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test1.jpg"&gt;&lt;img class="float" alt="rtl_test" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_test1.jpg?w=150" width="150" height="138" /&gt;&lt;/a&gt;&amp;nbsp;rtl_test&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_tcp.jpg"&gt;&lt;img class="float" alt="rtl_tcp" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_tcp.jpg?w=150" width="150" height="118" /&gt;&lt;/a&gt; rtl_tcp
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_sdr1.jpg"&gt;&lt;img class="float" alt="rtl_sdr" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_sdr1.jpg?w=150" width="150" height="110" /&gt;&lt;/a&gt;&amp;nbsp;rtl_sdr &lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_adsb.jpg"&gt;&lt;img class="float" alt="rtl_adsb" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_adsb.jpg?w=150" width="150" height="88" /&gt;&lt;/a&gt; rtl_adsb
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_fm.jpg"&gt;&lt;img class="float" alt="rtl_fm" src="http://jeffskinnerbox.files.wordpress.com/2013/05/rtl_fm.jpg?w=150" width="150" height="138" /&gt;&lt;/a&gt;&amp;nbsp;rtl_fm&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 26 May 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-05-26:posts/2013/May/26/rtl-sdr-software-defined-radio-SDR-for-20/</guid><category>RTL-SDR</category><category>Software Defined Radio</category></item><item><title>Building My Linux Box...The Plan</title><link>http://jeffskinnerbox.me/posts/2013/Apr/28/building%20my%20linux%20box...the%20plan/</link><description>&lt;p&gt;I concluded it was time to retire my current &lt;span class="caps"&gt;PC&lt;/span&gt; (a &lt;a href="http://reviews.cnet.com/desktops/dell-xps-400-desktop/4505-3118_7-31530074.html"&gt;Dell Dimension &lt;span class="caps"&gt;XPS&lt;/span&gt; 400&lt;/a&gt;, Intel Pentium D 820, 2.8GHz w/Dual Core Technology, 2G of memory, purchased in January 2006 for  &lt;a href="http://www.pcmag.com/article2/0,2817,1864262,00.asp"&gt;~ &lt;mathjax&gt;$2,500&lt;/a&gt;) and replace it with something better, aka faster.  It's performing poorly, but most of all, I want to do some experimenting with &lt;a href="http://ipython.org/"&gt;iPython&lt;/a&gt; &amp;amp; &lt;a href="http://matplotlib.org/"&gt;matplotlib&lt;/a&gt;, as well as, &lt;a href="http://gnuradio.org/redmine/projects/gnuradio/wiki"&gt;GNU Radio&lt;/a&gt; &amp;amp; &lt;a href="http://en.wikipedia.org/wiki/Digital_signal_processing"&gt;digital signal processing&lt;/a&gt;.  To do this justice, I need a faster box and ideally loaded with Linux and X&amp;nbsp;Windows.&lt;/p&gt;
&lt;p&gt;I also think its time for me to &lt;a href="http://www.linuxplanet.com/linuxplanet/tutorials/6824/1"&gt;build my own box&lt;/a&gt;, instead of purchase it already&lt;a href="http://www.berkeleylug.com/?p=168"&gt; packaged and assembled&lt;/a&gt;.  They say you get more for your dollar, or at least you can invest the same money into things that will make a better system (instead of some more crappy speakers, mice, keyboards, etc.).  Given I'm building it, I want to pay special attention to getting the performance up.  I don't need the top of the line CPU (I don't believe you get sufficient value for your money), but I would invest in improving the predominate enemy of computer performance, that is I/O.  Also, I want the graphics to be fast and smooth.  The work on matplotlib and signal processing is likely to be graphically intensive.  I'm not going to be playing games on the system, but I'm going to keep an eye on the gaming communities hardware preferences.   I'm willing to go with a good (but not super, and therefore expensive) graphics&amp;nbsp;board.&lt;/p&gt;
&lt;p&gt;A fancy sound system isn't a priority for me.  While my interest in GNU Radio &amp;amp; digital signal processing may have some use for a good sound system, I think I could live with the integrated sound system that will come on the motherboard.  Like graphics, if  it proves unacceptable, I'll make the investment on&amp;nbsp;another occasion.&lt;/p&gt;
&lt;p&gt;Since I'm buying components and assembling it, I want to do some cherry picking.  When a vendor sells you an assembled box, they are often using cheaper / less functional components to save them cost.  I'm picking an Intel Core i5 CPU (I believe it has the best value for me).  Also, I'm going to get a -K Series Intel CPU and motherboard designed for overclocking and provide optimal performance for gamers and high-power users.  While I'm not doing gaming, I like the option to tuning the hardware and I have found the -K Series to be only slightly more expensive.  For a small amount of additional cash, I get some cool&amp;nbsp;capabilities.&lt;/p&gt;
&lt;p&gt;To get the better &lt;a href="http://en.wikipedia.org/wiki/Input/output"&gt;I/O&lt;/a&gt; that I want, I'm going to purchase one &lt;a href="http://en.wikipedia.org/wiki/Solid-state_drive"&gt;solid-state drive (SSD)&lt;/a&gt; from which I plan to boot Linux.  SSD's are very much more expensive byte-for-byte when compared to a standard hard drive but boy&lt;a href="http://www.zdnet.com/blog/bott/windows-7-and-ssds-just-how-fast-are-they/2902"&gt; they can fly&lt;/a&gt;!  Faster CPU and faster drives are my most valuable investment.  With the  financial investment in the SSD, I'm not going to purchase new hard drives but reuse the ones I have in my current PC (I'll need them since the SSD I can budget for will not be large).  They are newer then the original Dell box, and besides  the hard drive has over 6 years of stuff on it, including a MS Windows environment that I have grown dependent on.  That brings me to the next&amp;nbsp;point.&lt;/p&gt;
&lt;p&gt;I want to dual boot the system with both MS Windows and Linux.  The Linux will be on the SSD, and it is here that I plan to spend much of my time.  I want to pick a Linux distribution that is well supported, popular, and a good graphic desktop environment.   I grew up on the Linux command line (then it was Unix) and I feel at home there, but I would like to try out the X Windows desktop.  If at all possible  I want the MS Windows to boot from my current hard drive.  I don't want to have to reload software or copy an image ... you never can get it to be the same again.  If I must, I'll make the MS windows drive the default boot as it is now (and Microsoft seems to insist on being default).  If I can do this, moving into my new PC will be&amp;nbsp;painless.&lt;/p&gt;
&lt;p&gt;With my objectives and priorities fully articulated, lets explore what I intend to build.
&lt;h2&gt;Central Processing Unit&amp;nbsp;(CPU)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/intel_core-i5-3570k_retail.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="intel core i5 3570k with stock cooler" src="/images/intel_core-i5-3570k_retail.jpg" width="30%" height="30%" /&gt;
&lt;/a&gt;
For my CPU I have picked the Intel Core i5-3570K Ivy Bridge 3.4GHz (3.8GHz Turbo Boost and 6M Cache) LGA 1155 77W Quad-Core Desktop Processor which includes Virtualization Technology (VT-x), and Intel HD Graphics 4000.  What a mouth full .... here is what this all means:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/processors/core/core-processor-family.html"&gt;Intel Core&lt;/a&gt; - Intel Core (sometimes refereed to as&lt;a href="http://en.wikipedia.org/wiki/Core_2"&gt; Core 2&lt;/a&gt;) is a brand name that Intel uses for various mid-range to high-end consumer and business microprocessors. In general, processors sold as Core are more powerful variants of the same processors marketed as entry-level Celeron and Pentium. Similarly, identical or more capable versions of Core processors are also sold as Xeon processors for the server and workstation&amp;nbsp;market.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://ark.intel.com/products/65520"&gt;i5-3570K&lt;/a&gt; - The very first question after you concluded that your going with the Intel Core line, is &lt;a href="http://www.pugetsystems.com/blog/2012/08/17/core-i3-core-i5-and-core-i7-which-one-is-right-for-you/"&gt;Core i3 vs. i5 vs. i7 – Which one is right for me&lt;/a&gt;?   I'm driven to the i5 since the current Intel Core i5 models are generally considered the best price/performance choice for a gaming system and the i7  do NOT have built-in graphics capability (this would force me to buy a graphics card). Why K versions you ask? Well, the default Ivy Bridge processors are much harder to overclock, where the K series are unlocked and come with&lt;a href="http://www.intel.com/content/www/us/en/motherboards/desktop-motherboards/desktop-boards-software-extreme-tuning-utility.html"&gt; tools for overclocking&lt;/a&gt;.  This processor has overclocked &lt;a href="http://www.guru3d.com/articles_pages/core_i5_3570k_review,1.html"&gt;test results&lt;/a&gt; running at a stable&amp;nbsp;4.7GHz.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://software.intel.com/sites/billboard/article/gdc-2012-ivy-bridge-impresses-optimized-visual-functionality-power-and-efficiency?wapkw=ivy+bridge"&gt;Ivy Bridge&lt;/a&gt; -  Ivy Bridge is the &lt;a href="http://ark.intel.com/"&gt;latest generation of processors&lt;/a&gt; within the &lt;a href="http://www.intel.com/content/www/us/en/silicon-innovations/intel-tick-tock-model-general.html"&gt;Intel Tick-Tock Development Model&lt;/a&gt;.   Intel introduced its Sandy Bridge desktop and laptop processors at the start of 2011 as there new micro-architecture ...the tock.  Intel introduced Ivy Bridge in April 2012 new processor technology ... the tick.  There is a school of thought that says you shouldn't buy the last generation CPU because you can get more value (aka performance/dollar) from the previous generation.  But the prices I have seen and the &lt;a href="http://www.pcmag.com/article2/0,2817,2405317,00.asp"&gt;comparative reviews&lt;/a&gt; have given me the courage to go with the latest generation.  Also check out this review with a &lt;a href="http://www.phoronix.com/scan.php?page=article&amp;amp;item=intel_corei7_3770k&amp;amp;num=1"&gt;description of Ivy Bridge&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/architecture-and-technology/turbo-boost/turbo-boost-technology.html"&gt;Turbo Boost&lt;/a&gt; - This feature increases performance of both multi-threaded and single-threaded workloads.  Intel Turbo Boost Technology 2.0 allows the processor core to opportunistically and automatically run faster than its rated operating frequency/graphic render clock if it is operating below power, temperature, and current limits. It can boost the frequency up to&amp;nbsp;3.8GHz.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/CPU_cache"&gt;6M Cache&lt;/a&gt; - This refers to &lt;a href="http://en.wikipedia.org/wiki/Cache_(computing)"&gt;cache&lt;/a&gt; used by the central processing unit of a computer to reduce the average&lt;a href="http://arstechnica.com/gadgets/2002/07/caching/"&gt; time to access memory&lt;/a&gt;. The cache is a smaller, faster memory which stores copies of the data from the most frequently used main memory locations.  It comes it three types: L1, L2, and L3. L1 cache (sometimes called primary cashe) is the fastest cache and it usually comes within the processor chip itself.  L2 cache comes between L1 and RAM (processor-L1-L2-RAM) and is bigger than the primary cache. The L1 and L2 cache is per core but the last-level cache (L3), is shared among all cores and sometimes call &lt;a href="http://en.wikipedia.org/wiki/Smart_Cache"&gt;Smart Cache &lt;/a&gt;since cache can be dynamically assigned to a core as it needs it. The "6M" refers to the number of bytes of data that the L3 cache can&amp;nbsp;hold.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/LGA_1155"&gt;LGA 1155&lt;/a&gt; - LGA 1155, also called Socket H2, is an Intel microprocessor compatible 1155 pin socket which supports Intel Sandy Bridge and Ivy Bridge&amp;nbsp;microprocessors.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.tomshardware.com/news/core-i7-Ivy-Bridge-77w-tdp-processors,13733.html"&gt;77W&lt;/a&gt; - This is the  &lt;a href="http://www.geeks3d.com/20090611/tutorial-what-is-the-thermal-design-power-tdp/"&gt;Thermal Design Power (TDP)&lt;/a&gt; is the maximum power consumed by the CPU under normal / regular use. In other words, the TDP is the max power a device will dissipate when running real applications. What’s more the TDP is given for graphics card default clocks.  TDP is a manufacturer’s data, and thanks to this information, CPUcooler manufactures can size their CPU&amp;nbsp;coolers.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/products/processor/core2quad/"&gt;Quad-Core Desktop Processor&lt;/a&gt; - This is a &lt;a href="http://en.wikipedia.org/wiki/Quad-Core"&gt;multi-core processor&lt;/a&gt; (in fact a quad or 4 core)  computing component with four independent actual central processing units (called "cores").  Intel manufacturers the four cores onto a single integrated circuit die (known as a chip multiprocessor or CMP), or onto multiple dies in a single chip package.  The proximity of multiple CPU cores on the same die allows it to operation at a much higher clock-rate than is possible if the signals have to travel&amp;nbsp;off-chip.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/virtualization/virtualization-technology/hardware-assist-virtualization-technology.html"&gt;Virtualization Technology&lt;/a&gt; - VT-x  (i.e. x86 virtualization or Vanderpool) is the facility that allows multiple operating systems to simultaneously share x86 processor resources in a safe and efficient manner, a facility generically known as hardware virtualization. With virtualization, you can have several operating systems running in parallel, each one with several programs running.  Each operating system runs on a "virtual machine", i.e. each operating system thinks it is running on a completely independent computer. Note that on the Intel Core technology, the virtual machines are not assigned specific CPUs among the multiple CPUs but are shared by&amp;nbsp;all.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.intel.com/content/www/us/en/architecture-and-technology/hd-graphics/hd-graphics-developer.html"&gt;Intel HD Graphics 4000&lt;/a&gt; - Before the introduction of Intel HD Graphics, Intel integrated graphics were built into the motherboard's northbridge.  HD Graphics 4000 is Intel's 3rd generation of this integrated GPU technology.  The HD 4000 was completely redesigned and offers many improvement. The IPC (instructions per clock) can therefore be even 2x as fast  and &lt;a href="http://www.notebookcheck.net/Intel-HD-Graphics-4000.69168.0.html"&gt;overall up to 60% more performance should be possible&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
One highly desirable feature missing from the Intel i5 line is &lt;a href="http://www.intel.com.au/content/www/au/en/architecture-and-technology/hyper-threading/hyper-threading-technology.html"&gt;Hyper-Threading Technology&lt;/a&gt;.  Hyper-Threading (HT) is a means for improving processor performance by supporting the execution of multiple threads (two is the current limit) on the same processor at once: the threads share the various on-chip execution units.  HT is available on the i7 line of processors but I just can't justify the cost of this additional functionality.
&lt;h2&gt;Motherboard&amp;nbsp;(Mobo)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/intel-desktop-board-dz77ga-70k.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Intel Desktop Board DZ77GA-70K" src="/images/intel-desktop-board-dz77ga-70k.jpg" width="300" height="200" /&gt;
&lt;/a&gt;
I need to match the CPU to a -K Series motherboard and I picked the &lt;a href="http://www.intel.com/content/www/us/en/motherboards/desktop-motherboards/desktop-board-dz77ga-70k.html"&gt;Intel Desktop Board DZ77GA-70K&lt;/a&gt; with &lt;a href="http://www.intel.com/content/www/us/en/chipsets/performance-chipsets/z77-express-chipset.html"&gt;Intel Z77 Express Chipset&lt;/a&gt; family which includes &lt;a href="http://www.intel.com/content/www/us/en/chipsets/high-definition-audio.html"&gt;Intel High Definition Audio&lt;/a&gt;.
The Intel high-definition audio chip allows you to use your computer to send digital audio signals to speakers, headphones, telephones and other audio equipment. Early computer audio systems could only produce simple stereo sound reproduction. The Intel HD audio system supports surround sound up to Dolby 7.1.  It supports the  usual 32GB of RAM, &lt;a href="http://www.intel.com/content/www/us/en/solid-state-drives/ssd-smart-response-video.html"&gt;Smart Response Technology&lt;/a&gt;, &lt;a href="http://www.intel.com/support/services/smartconnect/sb/CS-033108.htm"&gt;Smart Connect Technology&lt;/a&gt;, Intel &lt;a href="http://www.intel.com/support/chipsets/imsm/sb/CS-020784.htm"&gt;Rapid Storage Technology&lt;/a&gt; (Intel RST) for &lt;a href="http://en.wikipedia.org/wiki/RAID"&gt;RAID&lt;/a&gt; 0, 1, 5, and 10. The "GA" in the motherboard's name means that it contains Bluetooth/WiFi and the a front panel USB 3.0 module  ("GAL" means it has no Bluetooth/WiFi). The board supports Intel's &lt;a href="http://www.intel.com/content/www/us/en/intelligent-systems/intel-boot-loader-development-kit/boot-loader-technology-brief.html"&gt;Fast Boot Technology&lt;/a&gt; which can dramatically reduce the time to boot the system. Support for high end graphics boards. It has eight  &lt;a href="http://www.intel.com/content/www/us/en/io/universal-serial-bus/universal-serial-bus.html"&gt;USB 3.0&lt;/a&gt; ports (4 external/4 header), ten &lt;a href="http://www.intel.com/content/www/us/en/io/universal-serial-bus/universal-serial-bus.html"&gt;USB 2.0&lt;/a&gt; ports (4 external (2 Hi-Current/Fast Charging) / 6 internal), four Serial ATA 6.0 Gb/s ports, one eSATA 6.0 Gb/s, four &lt;a href="http://www.intel.com/content/www/us/en/io/serial-ata/serial-ata-developer.html"&gt;Serial ATA&lt;/a&gt; 3.0 Gb/s ports and many other&amp;nbsp;features.&lt;/p&gt;
&lt;p&gt;The Mobo comes with the &lt;a href="http://www.intel.com/content/www/us/en/motherboards/desktop-motherboards/desktop-boards-software-visual-bios.html"&gt;Intel Visual BIOS&lt;/a&gt; graphical interface and animated controls, which allow you to configure settings faster and take full advantage of your Intel -K processors. The Visual BIOS uses the &lt;a href="http://whatis.techtarget.com/definition/Unified-Extensible-Firmware-Interface-UEFI"&gt;Unified Extensible Firmware Interface (UEFI)&lt;/a&gt; which defines a software interface between an operating system and Mobo firmware. &lt;a href="http://h30565.www3.hp.com/t5/Feature-Articles/The-30-year-long-Reign-of-BIOS-is-Over-Why-UEFI-Will-Rock-Your/ba-p/198"&gt;UEFI is meant to replace&lt;/a&gt; the &lt;a href="http://en.wikipedia.org/wiki/BIOS"&gt;Basic Input/Output System (BIOS)&lt;/a&gt; firmware interface, present in all IBM PC-compatible personal&amp;nbsp;computers.&lt;/p&gt;
&lt;p&gt;The form factor for this Mobo is ATX.  &lt;a href="http://www.pcmag.com/encyclopedia/term/38148/atx-motherboard"&gt;ATX (Advanced Technology eXtended)&lt;/a&gt; is a motherboard form factor specification developed by Intel in 1995 to improve on previous de facto standards like the AT form factor.  There are &lt;a href="http://www.youtube.com/watch?v=3_t7sZs8XBs"&gt;different form factor of motherboards&lt;/a&gt; including microATX, Standard ATX and XL-ATX.  This is important to keep in mind when picking a&amp;nbsp;case.&lt;/p&gt;
&lt;p&gt;The selling feature for me was that its an Intel product (motherboards are new to me and I need the emotional support), seems easy to setup, it has gotten &lt;a href="http://www.pcmag.com/article2/0,2817,2405934,00.asp"&gt;reasonable reviews&lt;/a&gt; (and&lt;a href="http://www.hardocp.com/article/2012/08/06/intel_dz77ga70k_lga_1155_motherboard_review/1#.UX1AQKLCZ8E"&gt; here is another&lt;/a&gt;), and reasonable price.  It isn't most feature full Mobo nor what a die-hard overclocker would buy but it seems a solid, stable product that will not give me any troubles or support problems and will perform well.
&lt;h2&gt;Memory&amp;nbsp;(RAM)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/corsair-vengeance.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Corsair Vengeance" src="/images/corsair-vengeance.jpg" width="300" height="172" /&gt;
&lt;/a&gt;
I'm going with 8GB of RAM in an effort to assure good I/O and 12GB or 16GB just seems like more than I will need.  That amount of memory seems &lt;a href="http://blog.betaforcepc.com/computer-memory/2012/01/"&gt;sufficient for you average gamer&lt;/a&gt; and should work for me.  And the reviews I have seen also claim they have successively &lt;a href="http://www.hardwaresecrets.com/article/152"&gt;overclocked this memory&lt;/a&gt;.
According to the September 2011 &lt;a href="http://store.steampowered.com/hwsurvey"&gt;Steam hardware survey&lt;/a&gt;, 4GB of RAM is currently the most popular configuration among gaming PCs. This may be sufficient for a light home user, however, many power users and enthusiasts find 4GB to be insufficient. Many recommend at least 6GB for any enthusiast PC, especially in light of the&amp;nbsp;relatively&lt;/p&gt;
&lt;p&gt;I also want to keep open the option to do some overclocking, so I need to consider memory based on Intel's  &lt;a href="http://www.intel.com/content/www/us/en/gaming/gaming-computers/intel-extreme-memory-profile-xmp.html?wapkw=(xmp)."&gt;Extreme Memory Profile (XMP)&lt;/a&gt;.  I also want a memory provider with a solid reparation.  The Intel Core i5-3570K processor &lt;a href="http://ark.intel.com/products/65520"&gt;requires DDR3-1333/1600&lt;/a&gt; memory.  With all this in mind, I choose the &lt;a href="http://www.corsair.com/en/vengeance-8gb-dual-channel-ddr3-memory-kit-cmz8gx3m2a1600c9b.html"&gt;8GB (2X4 GB) Corsair Vengeance Blue, 9-9-9-24, 1.5V  PC3-12800 1600MHz DDR3 240-Pin SDRAM Dual Channel Memory&lt;/a&gt;.   They are not top of the line memory but seem a good fit for my needs and have gotten &lt;a href="http://www.legitreviews.com/article/1740/1/"&gt;solid reviews&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;DDR3 or DDR3 SDRAM, an abbreviation for &lt;a href="http://en.wikipedia.org/wiki/DDR3_SDRAM"&gt;double data rate type three synchronous dynamic random access memory&lt;/a&gt;, is a modern kind of dynamic random access memory (DRAM) with a high bandwidth interface, and has been in use since 2007.  The primary benefit of DDR3  over its immediate predecessor (i.e. DDR2), is its ability to transfer data at twice the rate (eight times the speed of its internal memory arrays), enabling higher bandwidth or peak data rates. The next generation,  DDR4 expected to be released to the market sometime in 2013.  Its primary benefits compared to DDR3 is the higher range of clock frequencies (200MHz vs 166MHz) and data transfer rates (400MT/s vs&amp;nbsp;333MT/s).&lt;/p&gt;
&lt;p&gt;DDR3 memory is classified according to the maximum speed at which it can work, as well as their timings. Timing are numbers such as 3-4-4-8, 5-5-5-15, 7-7-7-21, 9-9-9-24 where lower is better. Memory speed is specified via a number like this: DDR3-xxx / PC3-yyy or DDR3-xxx/yyy. The xxx number indicates the maximum clock speed that the memory chip supports. Therefore, DDR3-1333 can work up to 1,333MHz. Note this isn't the real clock speed but twice that speed. So the real clock speed of DDR3-1333 is 666MHz. The yyy indicates the maximum transfer rate that the memory can reach. So memory labeled as DDR3-1333/10664 has a transfer rate of 10,664MB/s or 21,328 MB/s if they are running under &lt;a href="http://www.hardwaresecrets.com/article/133"&gt;dual channel mode&lt;/a&gt;. Most current boards have dual with the Intel socket 1336 has triple&amp;nbsp;channel.&lt;/p&gt;
&lt;p&gt;The memory timings x-x-x-x indicates the number of clock cycles that it takes for the memory to perform something. The smaller the number, the faster the memory. These set of four numerical parameters are called CL, tRCD, tRP, and tRAS. Sometimes there a fifth value which is voltage. Check out &lt;a href="http://www.hardwaresecrets.com/article/Understanding-RAM-Timings/26/1"&gt;Understanding RAM Timings&lt;/a&gt; for more&amp;nbsp;information.&lt;/p&gt;
&lt;p&gt;Memory is sold in “kits” which are simply multiple single, similar (identical as possible) RAM modules packaged together. The intention is for them to be used in motherboards that have dual and triple (etc.) RAM channel capabilities.
&lt;h2&gt;Graphics Processing Unit&amp;nbsp;(GPU)&lt;/h2&gt;
I'm going to try and live with the on-board &lt;a href="http://en.wikipedia.org/wiki/Graphics_processing_unit"&gt;graphics processing unit (GPU)&lt;/a&gt; integrated with the CPU and invest that money elsewhere.   The &lt;a href="http://www.notebookcheck.net/Intel-HD-Graphics-4000-Benchmarked.73567.0.html"&gt;reviews of  Intel's newest integrated GPU&lt;/a&gt; that comes with the i5-3570K (&lt;a href="http://www.pcworld.com/article/254178/ivy_bridge_graphics_entry_level_cards_are_dead.html"&gt;HD Graphics 4000&lt;/a&gt; or HD 4000) have been favorable (also see &lt;a href="http://reviews.cnet.com/8301-33642_7-57418061-292/at-long-last-a-credible-3d-gaming-chip-from-intel/"&gt;this&lt;/a&gt;).   This is the  third and latest generation of HD Graphics (now with 16 &lt;a href="http://en.wikipedia.org/wiki/Execution_unit"&gt;execution units&lt;/a&gt;) and appears to be a real contender to low end graphics cards.  If it proves less than acceptable, I'm invest in a graphics board another day.
&lt;h2&gt;Sound&amp;nbsp;Card&lt;/h2&gt;
Here again, I'm not buying a separate card but using the &lt;a href="http://www.intel.com/content/www/us/en/chipsets/high-definition-audio.html"&gt;Intel High Definition Audio&lt;/a&gt; integrated into the motherboard.  Frankly, I'm not sure if this will limit my GNU Radio &amp;amp; digital signal processing objectives but I'll take the risk.  If I'm unhappy for any reason, I'll buy myself a sound board.
&lt;h2&gt;Solid State Drive&amp;nbsp;(SSD)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/samsung-ssd-840-pro.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Samsung-SSD-840-Pro" src="/images/samsung-ssd-840-pro.jpg" width="30%" height="30%" /&gt;
&lt;/a&gt;
I have chosen the &lt;a href="http://www.samsung.com/us/computer/memory-storage/MZ-7TD120BW"&gt;Samsung Electronics 840 Pro Series 2.5-Inch 128GB SATA 6GB/s &lt;/a&gt;for my &lt;a href="http://en.wikipedia.org/wiki/Solid-state_drive"&gt;Solid State Drive (SSD)&lt;/a&gt;.  Samsung has a great repatriation in this space and it has gotten &lt;a href="http://www.tomshardware.com/reviews/ssd-recommendation-benchmark,3269.html"&gt;solid reviews&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What most people who use SSDs do (and what I plan to do) is to buy one large enough to hold the OS and applications, and also buy a hard drive to hold the rest of your documents, photos, videos, etc. That's a good compromise which puts the most performance-critical files on the fastest drive and has the cheapest cost-per-byte for your voluminous data files which typically have much lower performance requirements.  But keep in mind that as soon as the amount of data written reaches the stated capacity of the device, the write bandwidth immediately drops.  In fact, &lt;a href="http://www.velobit.com/storage-performance-blog/bid/112643/Warning-Bark-Write-Performance-Speed-Drops-On-All-SSDs"&gt;write bandwidth reduced by up to 70-80% once fully loaded&lt;/a&gt; with data and continued to operate under those conditions.  Therefore, don’t fill the SSD&amp;nbsp;drive.&lt;/p&gt;
&lt;p&gt;Also, one of the most publicized downsides of SSDs is that they have a limited number of writes before they wear out—however, with most newer SSDs, this isn't actually a problem. Most modern SSDs will become outdated before they die, and you'll probably have upgraded by then, so there's not really a huge need to worry about writing to the drive too many&amp;nbsp;times.&lt;/p&gt;
&lt;p&gt;Because of the high speed of the SSD, your going to want to use the 6GB/s SATA ports on the motherboard.  The standard 3GB/s SATA ports don't have the throughput, never the less, &lt;a href="http://www.tomshardware.com/reviews/ssd-upgrade-sata-3gbps,3469.html"&gt;studies show&lt;/a&gt; the SSD still give you benefits.
&lt;h2&gt;Power Supply Unit&amp;nbsp;(PSU)&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/corsair-650w-psu.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Corsair 650W PSU" src="/images//corsair-650w-psu.jpg" width="25%" height="25%" /&gt;
&lt;/a&gt;
I choose the popular  &lt;a href="http://www.corsair.com/us/power-supply-units/tx-series-power-supply-units/tx-series-tx650-80-plus-bronze-certified-650-watt-high-performance-power-supply.html"&gt;Corsair TX650 650-Watt Power Supply&lt;/a&gt; as my PSU. Most computers only consume around 150W, and even a high end computer might consume maybe 200W. That's why most OEM computer manufacturers put small 250-350W PSUs in their systems. If you look at online reviews of highly overclocked systems with multiple video cards (SLI/Crossfire) they consume at most about 500-600W.   I don't believe I'll ever approach these levels so this PSU will give me much head room.  The &lt;a href="http://www.silentpcreview.com/article813-page1.html"&gt;review I have read&lt;/a&gt; seem to claim that he best way to take advantage of the TX650W's quiet qualities is  to ensure that the PSU intake air does not exceed 30°C often, nor demand more than ~350W DC output.  I believe my usage will fit in this sweat spot.
&lt;h2&gt;Networking&lt;/h2&gt;
Networking capabilities are built into the motherboard.  The Mobo comes with two Gigabit (10/100/1000 Mb/s) LAN subsystems using the &lt;a href="http://www.intel.com/content/www/us/en/ethernet-controllers/82579-gigabit-ethernet-connection-family.html"&gt;Intel 82579V Gigabit Ethernet Controller&lt;/a&gt;. It also has a &lt;a href="http://whatis.techtarget.com/definition/Bluetooth-20EDR"&gt;Bluetooth 2.1&lt;/a&gt; &amp;amp; WiFi 802.11b/g/n module. There appears to have been some &lt;a href="http://communities.intel.com/thread/32882"&gt;troubles with WiFi and Bluetooth module for DZ77GA-70K&lt;/a&gt; in 2012, but it has been reported to Intel and hopefully this has been worked out by now.  I'll have to make sure I update the firmware on the board when I get it.
&lt;h2&gt;CD-ROM / DVD Drive / Hard&amp;nbsp;Drives&lt;/h2&gt;
I'm not going to worry about this now.  I anticipate loading all my software / data from the Web or transferring from my existing hard drives.  Also, I'll reuse my existing hard drives in this box.
&lt;h2&gt;Cooler&amp;nbsp;Case&lt;/h2&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/cooler-master-haf-912-mid-tower-computer-case.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="Cooler Master HAF 912 - Mid Tower Computer Case" src="/images/cooler-master-haf-912-mid-tower-computer-case.jpg?w=300" width="300" height="139" /&gt;
&lt;/a&gt;
The Intel Core i5-3570K comes with a &lt;a href="http://www.youtube.com/watch?v=D2gOhPMaOgg"&gt;stock cooler&lt;/a&gt;.  If do over clock the CPU, I'm likely to need a better cooler, but this is fine for now.
Picking a case has been the hardest thing for me to select.  I guess this is because its not as much a technical decision but an aesthetic choice.  I have narrowed my choose to the&lt;a href="http://www.coolermaster-usa.com/landing/haf912/home.php"&gt; Cooler Master HAF 912 - Mid Tower Computer Case with High Airflow Design&lt;/a&gt; (19.5 x 9.1 x 18.9 inches ; 17.8 pounds).  It has gotten &lt;a href="http://www.overclockersclub.com/reviews/cooler_master_haf_912/"&gt;good reviews&lt;/a&gt; with the main complaint being that it needs more fans (much room for more installation but only two are provided).  The front panel comes with the older USB 2.0 ports but the Mobo comes with a USB 3.0 panel that could be install if desired.  The case isn't expensive but still has a sharp look and seems very versatile in its use and cooling.
&lt;h2&gt;Monitor&lt;/h2&gt;
The Dell LCD monitor I presently have dates back to 2006 and isn't equipped with &lt;a href="http://en.wikipedia.org/wiki/HDMI"&gt;HDMI&lt;/a&gt;, which is the only way to interface with the Mobo.  I presently use my monitor via its &lt;a href="http://www.pcmag.com/encyclopedia/term/42144/dvi"&gt;Digital Video Interface Digital (DVI-D)&lt;/a&gt;, but it also has &lt;a href="http://www.pcmag.com/encyclopedia/term/53801/vga"&gt;Video Graphics Array (VGA)&lt;/a&gt; and &lt;a href="http://www.pcmag.com/encyclopedia/term/40120/composite-video"&gt;Composite Video&lt;/a&gt; inputs.  So if I wish to continue to use the monitor, I'll need a converter of some type.  I found that the DVI-D to HDMI can be done via an inexpensive cable, so that is the way I'm going.  I specifically need a HDMI Type A to DVI-D Dual Link Male to Male cable.
&lt;h2&gt;Operating System&amp;nbsp;(OS)&lt;/h2&gt;
I plan to install &lt;a href="http://www.ubuntu.com/"&gt;Ubuntu Linux&lt;/a&gt; on the SSD drive.  Picking the &lt;a href="http://en.wikipedia.org/wiki/Linux_distribution"&gt;Linux distribution&lt;/a&gt; was nearly as hard as picking the case.  I choose Ubuntu because of its popularity and I wanted to experience its desktop environment once again, GNOME.  I used GNOME many years ago when it was very young, I saw potential, and I would like to see how it has grown. I plan to spend the vast majority of my time within Xterm at the command prompt, but I also want to get familiar with Ubuntu/GNOME.  I'll also do most of my systems administration at the command prompt, but again, getting familiarity with Ubuntu would be good to&amp;nbsp;know.&lt;/p&gt;
&lt;p&gt;How do I plan to installing Ubuntu, given that I will not have a OS already installed and I will not have a CD-ROM/DVD?  Ubuntu does have an ability to be&lt;a href="https://help.ubuntu.com/community/Installation/FromUSBStickQuick"&gt; installed via an USB stick&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm not going to abandon MS Windows.  I have many tools that I use in Windows and its not practical to just abandon them for something else, at least not right now.  I would like to&lt;a href="http://en.wikipedia.org/wiki/Multi_boot"&gt; dual boot&lt;/a&gt; the system with Linux and MS Windows.  Ideally, I'll keep my old Windows image on my current PC's hard drive, put that drive in my new system, and have the hard drive be my second OS on the &lt;a href="http://en.wikipedia.org/wiki/Booting"&gt;bootloader's&lt;/a&gt; chain of operating systems.  I know this could be done if I choose to re-install MS Windows and all my applications but I don't know the challenges I'll face given I'm using an establish image .... it will be a&amp;nbsp;learning opportunity!&lt;/p&gt;
&lt;p&gt;If I'm forces to do a re-install of MS Windows, I might us &lt;a href="https://www.virtualbox.org/"&gt;Oracle VM VirtualBox&lt;/a&gt;, which is a x86 virtualization software package. VirtualBox can be installed on an existing host operating system as an application; this host application allows additional guest operating systems, each known as a Guest OS, to be loaded and run, each with its own virtual environment.  The typical way of installing a guest operating system is to install it from the ground up. In general, you don’t see VirtualBox running a guest operating system from an existing drive or partition.  Never the less, a search of the Web does show evidence that people have made it work this way (&lt;a href="http://en.gentoo-wiki.com/wiki/Running_a_VirtualBox_Guest_from_a_Real_Partition"&gt;1&lt;/a&gt;, &lt;a href="https://www.virtualbox.org/wiki/Migrate_Windows"&gt;2&lt;/a&gt;, &lt;a href="http://unix.stackexchange.com/questions/31260/booting-the-already-installed-windows-from-the-virtualbox-installed-in-ubuntu"&gt;3&lt;/a&gt;, &lt;a href="http://www.virtualbox.org/manual/ch09.html#rawdisk"&gt;4&lt;/a&gt;, &lt;a href="http://geekery.amhill.net/2010/01/27/virtualbox-with-existing-windows-partition/"&gt;5&lt;/a&gt;, &lt;a href="http://serverfault.com/questions/241678/booting-a-native-windows-install-in-virtualbox-is-it-possible"&gt;6&lt;/a&gt;, &lt;a href="http://askubuntu.com/questions/168156/how-to-use-a-real-partition-with-windows-7-installed-in-a-virtualbox-vm"&gt;7&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The last, and least desirable approach (for my needs) is to use Windows applications is via &lt;a href="http://en.wikipedia.org/wiki/Wine_(software)"&gt;Wine&lt;/a&gt;.  Wine (originally an acronym for "Wine Is Not an Emulator") is a compatibility layer capable of running Windows applications on Linux. Instead of simulating internal Windows logic like a virtual machine or emulator, Wine translates Windows API calls into Linux calls on-the-fly, eliminating the performance and memory penalties of other methods and allowing you to cleanly integrate Windows applications into your desktop.  Since it doesn't create a virtual machine programs perform faster than in a VM.  However, you'll need to test it with your application since it doesn't support all programs.  Also, you’re not running MS Windows, just the MS Windows compatible applications.  This is fine if your interest in running Excel standalone, but you can’t perform anything that requires the MS operating system.
&lt;h2&gt;Boot&amp;nbsp;Loader&lt;/h2&gt;
A boot loader is the first software program that runs when a computer starts. It is responsible for loading and transferring control to the operating system kernel software. The kernel, in turn, initializes the rest of the operating system.  &lt;a href="http://www.gnu.org/software/grub/"&gt;GRUB (GRand Unified Bootloader)&lt;/a&gt; is a boot loader package developed to support multiple operating systems and allow the user to select among them during boot-up.  GRUB is often the default boot loader for Linux and is preferred to MS Windows since it makes up for numerous deficiencies while providing full-featured command line and graphical interfaces.  GRUB is the default boot loader for Ubuntu, making it an easy choose.  GRUB is powerful and complex so check out &lt;a href="http://www.zdnet.com/my-experiments-with-multi-boot-selection-with-uefi-boot-manager-7000013627/"&gt;How I configured grub as the default bootloader on a UEFI Boot systems&lt;/a&gt;.
&lt;h2&gt;What does it&amp;nbsp;Cost&lt;/h2&gt;
Now that I have a plan, what will all this cost?  I estimate it will be $&lt;/mathjax&gt;765, less than one-third the cost of my present system.  Granted I&amp;#8217;ll be reusing the monitor, key board, mouse, and some drives but this is a substantial price difference for what will be a much more capable&amp;nbsp;machine.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/cost1.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-1477" alt="cost" src="http://jeffskinnerbox.files.wordpress.com/2013/04/cost1.jpg" width="500" height="447" /&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To see what I finally implemented, check out &lt;a href="http://jeffskinnerbox.wordpress.com/2013/08/01/building-my-linux-box-the-implementation/"&gt;Building My Linux Box&amp;#8230;The Implementation&lt;/a&gt;.&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 28 Apr 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-04-28:posts/2013/Apr/28/building my linux box...the plan/</guid><category>Linux</category></item><item><title>A Better Mobile Display for the Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2013/Apr/11/a-better-mobile-display-for-the-raspberry-pi/</link><description>&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/2013-04-10-20-37-23.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="2013-04-10 20.37.23" src="/images/2013-04-10-20-37-23.png?w=225" width="225" height="300" /&gt;
&lt;/a&gt;
As I described in an &lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt;earlier post&lt;/a&gt;, I run my Raspberry Pi (RPi) as a &lt;a href="http://en.wikipedia.org/wiki/Headless_system"&gt;headless system&lt;/a&gt;, using &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt;&amp;#8216;s xterm for command line interaction with the RPi, with my &lt;span class="caps"&gt;PC&lt;/span&gt; being my X server to support any X Window applications.  I can move files between the &lt;span class="caps"&gt;PC&lt;/span&gt; and the RPi via my &lt;a href="http://jeffskinnerbox.wordpress.com/2012/11/11/dropbox-for-the-raspberry-pi-sort-of/"&gt;pseudo-Dropbox&lt;/a&gt;.  I really recommend this configuration and its working perfectly for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;This configuration gives me a great deal of utility but no mobility &amp;#8230;. I&amp;#8217;m still tied to my desktop &lt;span class="caps"&gt;PC&lt;/span&gt;.  Maybe I should consider replacing the desktop &lt;span class="caps"&gt;PC&lt;/span&gt; with a laptop but I don&amp;#8217;t want to spend the money.  I have seen some small,  inexpensive &lt;a href="http://www.adafruit.com/products/922"&gt;keyboards&lt;/a&gt; and &lt;a href="http://www.adafruit.com/products/947"&gt;displays&lt;/a&gt; that could be connected directly to the RPi, and you could &lt;a href="http://www.raspberrypi.org/archives/2848"&gt;cobble together a mobile unit&lt;/a&gt;, or the more elegant &lt;a href="http://news.idg.no/cw/art.cfm?id=9662DBB2-013A-069C-759851E179CD3D16"&gt;Kindle version&lt;/a&gt;, but this still doesn&amp;#8217;t give me the mobility look &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; feel I would&amp;nbsp;like.&lt;/p&gt;
&lt;p&gt;iPad to the rescue (assuming you have one &amp;#8230;.)!   I found a great app call &lt;a href="http://www.zinger-soft.com/iSSH_features.html"&gt;iSSH&lt;/a&gt; by Zingersoft.  Its claims that it is a &amp;#8220;comprehensive &lt;span class="caps"&gt;VT100&lt;/span&gt;, &lt;span class="caps"&gt;VT102&lt;/span&gt;, &lt;span class="caps"&gt;VT220&lt;/span&gt;, &lt;span class="caps"&gt;ANSI&lt;/span&gt;, xterm, and xterm-color terminal emulator over &lt;span class="caps"&gt;SSH&lt;/span&gt; and telnet, integrated with a tunneled X server, &lt;span class="caps"&gt;RDP&lt;/span&gt; and &lt;span class="caps"&gt;VNC&lt;/span&gt; client. &amp;#8221;   I installed it, configured it quickly, and got  a terminal connection to the RPi without reading the documentation &amp;#8230;. Impressive since successfully configuring ssh, Xserver, etc. can be challenging sometimes.  (Note: The easy of this was largely due to setting up RPi environment properly in the first place. See the &lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt;earlier post&lt;/a&gt;).  To top it off, iSSH has a slick look &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;feel.&lt;/p&gt;
&lt;h2&gt;Configuring&amp;nbsp;iSSH&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/04/2013-04-10-20-34-06.png"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="iSSH X Server Session" src="/images//2013-04-10-20-34-06.png?w=225" width="225" height="300" /&gt;
&lt;/a&gt;
Zingersoft&amp;#8217;s &lt;a href="http://www.zinger-soft.com/support1.html"&gt;documentation on configuring iSSH&lt;/a&gt; is easy to follow and requires just a few steps.  I had no problem getting an terminal session working to the RPi but I did have problems with graphics programs (i.e. X Window client programs).  It appears that iSSH&amp;#8217;s terminal isn&amp;#8217;t really &lt;a href="http://invisible-island.net/xterm/xterm.faq.html"&gt;xterm&lt;/a&gt; but a terminal emulation (secured via &lt;a href="http://en.wikipedia.org/wiki/Secure_Shell"&gt;ssh&lt;/a&gt;).  The iSSH terminal doesn&amp;#8217;t use the X server.  In fact, while in the terminal session,  to see the X server display (i.e. to see graphics applications rendered via the RPi X client) you must hit the button at the top right of the iPad&amp;nbsp;display.&lt;/p&gt;
&lt;p&gt;Frankly, the fact that the X application didn&amp;#8217;t work the first time wasn&amp;#8217;t a big surprise to me.  I have been struggling with getting my X Window configuration set up to work reliably for some time.  What I was observing was that X would work fine for sometime but at some point I would get the error message &amp;#8220;couldn&amp;#8217;t connect to&amp;nbsp;display&amp;#8221;.&lt;/p&gt;
&lt;p&gt;This error is very common and nearly every X user has seen some version of this before.  I assume that the right way to solve this was to gain a deeper understanding of X Windows and discover its root cause .  I did gain a deeper understanding of X Windows, but a solution to my problem never jumped out from the &amp;#8220;official&amp;#8221; materials I read.  I found the solution when I happened upon the blog &amp;#8220;&lt;a href="http://b.kl3in.com/2012/01/x11-display-forwarding-fails-after-some-time/"&gt;X11 Display Forwarding Fails After Some Time&lt;/a&gt;&amp;#8220;.&lt;/p&gt;
&lt;p&gt;The root cause of my error message is the time out of the X Forwarding.  I have been using the -X option when using ssh.  This is the more secure option for X Forwarding, but comes at a price, as shown below.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Using &lt;code&gt;ssh -X&lt;/code&gt;, X forwarding is enabled in &amp;#8220;Untrusted&amp;#8221; mode, making use of various X security extensions, including a time-limited Xauth&amp;nbsp;cookie.&lt;/li&gt;
    &lt;li&gt;Use &lt;code&gt;ssh -Y&lt;/code&gt; to enable &amp;#8220;Trusted&amp;#8221; mode for X, which will enable complete access to your X server. There is no timeout for this&amp;nbsp;option.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
So my Display problem isn&amp;#8217;t really an error, per say, but ssh timing out on me.  To fix this, I added the entry &lt;code&gt;ForwardX11Timeout 596h&lt;/code&gt; into my &lt;code&gt;~/.ssh/config&lt;/code&gt; file on my &lt;span class="caps"&gt;PC&lt;/span&gt;.  With this problem solved, I continued my journey into X.
&lt;h2&gt;My Journey to a Better Understanding of&amp;nbsp;X&lt;/h2&gt;
Using &lt;a href="http://en.wikipedia.org/wiki/X_Window_System"&gt;X Windows&lt;/a&gt; for the first time can be somewhat of a shock to someone familiar with other graphical environments, such as Microsoft Windows or Mac &lt;span class="caps"&gt;OS&lt;/span&gt;.  X was designed from the beginning to be network-centric, and uses a “client-server” model. In the X model, the “X server” runs on the computer that has the keyboard, monitor, and mouse attached. The server&amp;#8217;s responsibility includes tasks such as managing the display, handling input from the keyboard and mouse, and other input or output devices (i.e., a “tablet” can be used as an input device, and a video projector can be an output device, etc.). Each X application (such as xterm) is a “client”. A client sends messages to the server requesting things like “Please draw a window at these coordinates”, and the server sends back messages such as “The user just clicked on the &lt;span class="caps"&gt;OK&lt;/span&gt; button”. These standardized set of messages make up the &lt;a href="https://en.wikipedia.org/wiki/X_Window_System_core_protocol"&gt;X Protocol&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The X server and the X clients commonly run on the same computer. However, it is perfectly possible to run the X server on a less powerful computer (e.g. in my case a &lt;span class="caps"&gt;PC&lt;/span&gt; or iPad), and run X applications (the clients) on a powerful machine that serves multiple X servers (or it can be a simple RPi, as in my case). In this scenario the communication between the X client and server takes place over the network (WiFi for my iPad), via the X Protocol. There is nothing in the protocol that forces the client and server machines to be running the same operating system, or even to be running on the same type of computer.
&lt;h2&gt;The&amp;nbsp;Display&lt;/h2&gt;
It is important to remember that the X server is the is the software program which manages the monitor, keyboard, and pointing device. In the X window system, these three devices are collectively referred to as the &amp;#8220;display&amp;#8221;.  Therefore, the X server serves displaying capabilities, via the display, to other programs, called X clients, that connect to  the X server.  All these connections are established via the X&amp;nbsp;protocol.&lt;/p&gt;
&lt;p&gt;The relationship between the X server and the display are tight, in that the X server is engineered to support a specific display (or set of displays).  As a user of X, you don&amp;#8217;t have any control over this relationship, only the software developer who created the server can modify this relationship (generally speaking).  On the other hand, as a user you have free hand in configuring the X protocol connection between the X server and the X&amp;nbsp;clients.&lt;/p&gt;
&lt;p&gt;How do you establish a X Protocol connection between any given server and a client?  This is done via the environment variable &amp;#8220;&lt;span class="caps"&gt;DISPLAY&lt;/span&gt;&amp;#8221;.  A Linux environment variable &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; tells all its X clients what display they should use for their windows. Its value is set by default in ordinary circumstances, when you start an X server and run jobs locally. Alternatively, you can specify the display yourself.  One reason to do this is when you want log into another system, and run a X client there, and but have the window displayed at your local terminal.  That is, the &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; environment variable must point to your local&amp;nbsp;terminal.&lt;/p&gt;
&lt;p&gt;So the environment variable &amp;#8220;&lt;span class="caps"&gt;DISPLAY&lt;/span&gt;&amp;#8221; stores the address for X clients to connect to. These addresses are in the form: &lt;code&gt;hostname:displaynumber.screennumber&lt;/code&gt; where
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;code&gt;hostname&lt;/code&gt; is the name of the computer where the X server runs. An omitted &lt;code&gt;hostname&lt;/code&gt; means the&amp;nbsp;localhost.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;displaynumber&lt;/code&gt; is a sequence number (usually 0). It can be varied if there are multiple displays connected to one&amp;nbsp;computer.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;screennumber&lt;/code&gt; is the screen number. A display can actually have multiple screens. Usually there&amp;#8217;s only one screen though where 0 is the&amp;nbsp;default.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Setting the &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; variable depends of your shell, but for the Bourne, Bash or Korn shell, you could do the following to connect with the systems local display:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;export DISPLAY=localhost:0.0&lt;/code&gt;&lt;/p&gt;
The remote server knows where it have to redirect the X network traffic via the definition of the &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; &lt;a title="linux:environment_variable" href="http://gerardnico.com/wiki/linux/environment_variable"&gt;environment variable&lt;/a&gt; which generally points to an X Display server located on your local computer.
&lt;h2&gt;X&amp;nbsp;Security&lt;/h2&gt;
So you see, as the user, you have full control over where you wish to display the X client window.   So what prevents you from doing something malicious,  like popping up window on someone else  terminal or read their key strokes?  After all, all you really need is their host name.  &lt;a href="http://www.linux-tutorial.info/modules.php?name=Howto&amp;amp;pagename=Remote-X-Apps/Remote-X-Apps-6.html"&gt;X servers have three ways of authenticating connections&lt;/a&gt; to it: the host list mechanism (xhost) and the magic cookie mechanism (xauth). Then there is ssh, that can forward X connections, providing a protected connection between client and server over a network using a secure &lt;a title="Tunnelling protocol" href="http://en.wikipedia.org/wiki/Tunnelling_protocol"&gt;tunnelling protocol&lt;/a&gt;.
&lt;h2&gt;The xhost&amp;nbsp;Command&lt;/h2&gt;
The &lt;a href="http://www.xfree86.org/current/xhost.1.html"&gt;&lt;code&gt;xhost&lt;/code&gt;&lt;/a&gt; program is used to add and delete host (computer) names or user names to the list of machines and users that are allowed to make connections to the X server. This provides a rudimentary form of privacy control and security.  A typical use is as follows: Let&amp;#8217;s call the computer you are sitting at the &amp;#8220;local host&amp;#8221; and the computer you want to connect to the &amp;#8220;remote host&amp;#8221;. You first use xhost to specify which computer you want to give permission to connect to the X server of the local host. Then you connect to the remote host using telnet. Next you set the &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; variable on the remote host. You want to set this &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; variable to the local host. Now when you start up a program on the remote host, its &lt;span class="caps"&gt;GUI&lt;/span&gt; will show up on the local host (not on the remote&amp;nbsp;host).&lt;/p&gt;
&lt;p&gt;For example, assume the &lt;span class="caps"&gt;IP&lt;/span&gt; address of the local host is 128.100.2.16 and the &lt;span class="caps"&gt;IP&lt;/span&gt; address of the remote host is&amp;nbsp;17.200.10.5.&lt;/p&gt;
&lt;p&gt;On the local host, type the following at the command line:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;xhost + 17.200.10.5&lt;/code&gt;&lt;/p&gt;
Log on to the remote host
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;telnet 17.200.10.5&lt;/code&gt;&lt;/p&gt;
On the remote host (through the telnet connection), instruct the remote host to display windows on the local host by typing:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;export DISPLAY=128.100.2.16:0.0&lt;/code&gt;&lt;/p&gt;
Now when you type xterm on the remote host, you should see an xterm window on the local host.  You should remove the remote host from your access control list as follows.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;xhost - 17.200.10.5&lt;/code&gt;&lt;/p&gt;
Some additional xhost commands:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;xhost&lt;/code&gt;List all the hosts that have access to the X server
&lt;code&gt;xhost + hostname&lt;/code&gt;Adds hostname to X server access control list.
&lt;code&gt;xhost - hostname&lt;/code&gt;Removes hostname from X server access control list.
&lt;code&gt;xhost +&lt;/code&gt; Turns off access control (all remote hosts will have access to X server &amp;#8230; generally a bad thing to do)
&lt;code&gt;xhost -&lt;/code&gt;Turns access control back on (all remote hosts blocked access to X&amp;nbsp;server)&lt;/p&gt;
Xhost is a very insecure mechanism. It does not distinguish between different users on the remote host. Also, hostnames (addresses actually) can be &lt;a href="http://en.wikipedia.org/wiki/Spoofing_attack"&gt;spoofed&lt;/a&gt;. This is bad if you&amp;#8217;re on an untrusted network.
&lt;h2&gt;The xauth&amp;nbsp;Command&lt;/h2&gt;
Xauth allows access to anyone who knows the right secret. Such a secret is called an authorization record, or a &lt;a href="http://en.wikipedia.org/wiki/Magic_cookie"&gt;magic cookie&lt;/a&gt;. This authorization scheme is formally called &lt;code&gt;MIT-MAGIC-COOKIE-1&lt;/code&gt;.  The cookies for different displays are stored together in the file &lt;code&gt;.Xauthority&lt;/code&gt; in the user&amp;#8217;s home directory (you can specify a different cookie file with the &lt;code&gt;XAUTHORITY&lt;/code&gt; environment variable).  The &lt;code&gt;xauth&lt;/code&gt; application is a utility for accessing the &lt;code&gt;.Xauthority&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;On starting a session, the X server reads a cookie from the&lt;code&gt;.Xauthority&lt;/code&gt; file. After that, the server only allows connections from clients that know the same cookie (Note: When the cookie in &lt;code&gt;.Xauthority&lt;/code&gt; changes, the server will not pick up the change.).  If you want to use xauth, you must start the X server with the &lt;code&gt;-auth authfile&lt;/code&gt; argument.   You can generate a magic cookie for the &lt;code&gt;.Xauthority&lt;/code&gt; file using the utility &lt;code&gt;mcookie&lt;/code&gt; (typical usage: &lt;code&gt;xauth add :0 . &lt;code&gt;mcookie&lt;/code&gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Now that you have started your X session on the server and have your cookie in &lt;code&gt;.Xauthority&lt;/code&gt;, you will have to transfer the cookie to the client host. There are a few ways to do this.  The most basic way is to transfer the cookie manually by listing the magic cookie for your display with &lt;code&gt;xauth list&lt;/code&gt; and injecting it into the remote hosts &lt;code&gt;.Xauthority&lt;/code&gt; via the &lt;code&gt;xauth&lt;/code&gt; utility.&lt;/p&gt;
&lt;p&gt;Xauth has a clear security advantage over xhost. You can limit access to specific users on specific computers and it does not suffer from spoofed addresses as xhost does.
&lt;h2&gt;X Over &lt;span class="caps"&gt;SSH&lt;/span&gt;&lt;/h2&gt;
Even with the &lt;code&gt;xhost&lt;/code&gt; and &lt;code&gt;xauth&lt;/code&gt; methods, the  the X protocol is transmitted over the network with no encryption.  If you&amp;#8217;re  worried someone might snoop on your connections (and you should worry), use ssh.  &lt;span class="caps"&gt;SSH&lt;/span&gt;, or the Secure Shell, allows secure (&lt;a href="http://en.wikipedia.org/wiki/Encryption"&gt;encrypted&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Authentication"&gt;authenticated&lt;/a&gt;) connections between any two devices running &lt;span class="caps"&gt;SSH&lt;/span&gt;. These connections may include terminal sessions, file transfers, &lt;span class="caps"&gt;TCP&lt;/span&gt; port forwarding, or X Window System forwarding.  &lt;span class="caps"&gt;SSH&lt;/span&gt; supports a wide variety of encryption algorithms. It supports various &lt;a href="http://en.wikipedia.org/wiki/Message_authentication_code"&gt;&lt;span class="caps"&gt;MAC&lt;/span&gt;&lt;/a&gt; algorithms, and it can use &lt;a href="http://en.wikipedia.org/wiki/Public-key_cryptography"&gt;public-key cryptography&lt;/a&gt; for authentication or the traditional&amp;nbsp;username/password.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt; can do something called &amp;#8220;&lt;a href="http://docstore.mik.ua/orelly/networking_2ndEd/ssh/ch09_01.htm#ch09-31407"&gt;X Forwarding&lt;/a&gt;&amp;#8221; makes the communication secure by &amp;#8220;&lt;a href="http://en.wikipedia.org/wiki/Tunneling_protocol"&gt;tunneling&lt;/a&gt;&amp;#8221; the X protocol over the &lt;span class="caps"&gt;SSH&lt;/span&gt; secure link.  Forwarding is a type of interaction with another network application, through a inter-mediator, in this case &lt;span class="caps"&gt;SSH&lt;/span&gt;. &lt;span class="caps"&gt;SSH&lt;/span&gt; intercepts a service request from some other program on one side of an &lt;span class="caps"&gt;SSH&lt;/span&gt; connection, sends it across the encrypted connection, and delivers it to the intended recipient on the other side. This process is mostly transparent to both sides of the connection: each believes it is talking directly to its partner and has no knowledge that forwarding is taking place.  This is called tunneling since X protocol is encapsulated within the a &lt;span class="caps"&gt;SSH&lt;/span&gt;&amp;nbsp;protocol.&lt;/p&gt;
&lt;p&gt;When setting up an &lt;span class="caps"&gt;SSH&lt;/span&gt; tunnel for X11, the Xauth key will automatically be copied to the remote system(in a munged form to reduce the risk of forgery) and the &lt;span class="caps"&gt;DISPLAY&lt;/span&gt; variable will be&amp;nbsp;set.&lt;/p&gt;
&lt;p&gt;To turn on X forwarding over ssh, use the command line switch &lt;code&gt;-X&lt;/code&gt; or write the following in your local ssh configuration file:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;Host remote.host.name
ForwardX11 yes&lt;/code&gt;&lt;/p&gt;
The current version of &lt;span class="caps"&gt;SSH&lt;/span&gt; supports the X11 &lt;span class="caps"&gt;SECURITY&lt;/span&gt; extension, which provides two classes of clients: trusted clients, which can do anything with the display, and untrusted clients, which cannot inject synthetic events (mouse movement, keypresses) or read data from other windows (e.g., take screenshots). It should be possible to run almost all clients as untrusted, leaving the trusted category for screencapture and screencast programs, macro recorders, and other specialized&amp;nbsp;utilities.&lt;/p&gt;
&lt;p&gt;If you use &lt;code&gt;ssh -X remotemachine&lt;/code&gt; the remote machine is treated as an untrusted client and &lt;code&gt;ssh -Y remotemachine&lt;/code&gt; the remote machine is treated as trusted client.  &amp;#8217;-X&amp;#8217; is supposedly the safe alternative to &amp;#8216;-Y&amp;#8217;.  However, as a Cygwin/X maintainer says &amp;#8220;this is widely considered to be not useful, because the Security extension uses an arbitrary and limited access control policy, which results in a lot of applications not working correctly and what is really a false sense of&amp;nbsp;security&amp;#8221;.&lt;/p&gt;
&lt;p&gt;You can configuring &lt;span class="caps"&gt;SSH&lt;/span&gt; via the following files:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;per-user configuration is in &lt;code&gt;~/.ssh/config&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;system-wide client configuration is in &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;system-wide daemon configuration is in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The ssh server (&lt;code&gt;sshd&lt;/code&gt;) at the remote end automatically sets &lt;code&gt;DISPLAY&lt;/code&gt; to point to its end of the X forwarding tunnel. The remote tunnel end gets its own cookie; the remote ssh server generates it for you and puts it in&lt;code&gt;~/.Xauthority&lt;/code&gt; there. So, X authorization with ssh is fully&amp;nbsp;automatic.&lt;/p&gt;
&lt;p&gt;X over &lt;span class="caps"&gt;SSH&lt;/span&gt; solves some of the problems inherent to classic X networking. For example, &lt;span class="caps"&gt;SSH&lt;/span&gt; can tunnel X traffic through firewalls and &lt;span class="caps"&gt;NAT&lt;/span&gt;, and the X configuration for the session is taken care of automatically. It will also handle compression for low-bandwidth links.  Also, if you&amp;#8217;re using X11 forwarding, you may want to consider setting &lt;span style="font-family:'courier new', courier, monospace;"&gt;ForwardX11Trusted no &lt;/span&gt;to guard against malicious clients.
&lt;h2&gt;The Window&amp;nbsp;Manager&lt;/h2&gt;
The X design philosophy is much like the Linux/&lt;span class="caps"&gt;UNIX&lt;/span&gt; design philosophy, “tools, not policy”.  This philosophy extends to X not dictating what windows should look like on screen, how to move them around with the mouse, what keystrokes should be used to move between windows, what the title bars on each window should look like, etc.  Instead, X delegates this responsibility to an application called a “Window&amp;nbsp;Manager”.&lt;/p&gt;
&lt;p&gt;There are many window managers available for X and each  provides a different look and feel.  Some of them support  highly configurable virtual desktops like, &lt;a href="http://www.kde.org/"&gt;&lt;span class="caps"&gt;KDE&lt;/span&gt;&lt;/a&gt; and &lt;a href="http://www.gnome.org/"&gt;&lt;span class="caps"&gt;GNOME&lt;/span&gt;&lt;/a&gt;, some of them are lightweight desktop like &lt;a href="http://lxde.org/"&gt;&lt;span class="caps"&gt;LXDE&lt;/span&gt;&lt;/a&gt; which comes with the RPi, or you can operate bare bones (like I am on my &lt;span class="caps"&gt;PC&lt;/span&gt; while using the RPi) and let &lt;span class="caps"&gt;MS&lt;/span&gt; Windows be your Window Manager via &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X.&lt;/a&gt;  The iPad&amp;#8217;s iSSH can run without a Window Manager.  In effect, X server uses the display as it sees fit and your unable to control where things loaded. iSSH does have a Window Manage your can use as an option called &lt;a href="http://dwm.suckless.org/"&gt;dwm&lt;/a&gt;.  Its a &lt;a href="http://en.wikipedia.org/wiki/Tiling_window_manager"&gt;tiling window manager&lt;/a&gt;, which is a reasonable way to go given that your pointing device is your finger on the iPad.
&lt;h2&gt;X Display&amp;nbsp;Manager&lt;/h2&gt;
The X Display Manager (&lt;span class="caps"&gt;XDM&lt;/span&gt;) is an optional part of the X Window System that is used for login session management.  &lt;span class="caps"&gt;XDM&lt;/span&gt; provides a graphical interface for choosing which display server to connect to, and entering authorization information such as a login &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; password.  Like the Linux &lt;a href="http://en.wikipedia.org/wiki/Getty_(Unix)"&gt;getty&lt;/a&gt; utility, it performs system logins to the display being connected to and then runs a session manager on behalf of the user (usually an X window manager).  &lt;span class="caps"&gt;XDM&lt;/span&gt; then waits for this program to exit, signaling that the user is done and should be logged out of the display. At this point, &lt;span class="caps"&gt;XDM&lt;/span&gt; can display the login and display chooser screens for the next user to&amp;nbsp;login.&lt;/p&gt;
&lt;p&gt;In the small world of my RPi&amp;#8217;s, a &lt;span class="caps"&gt;PC&lt;/span&gt;, and an iPad, I have no need for an &lt;span class="caps"&gt;XDM&lt;/span&gt; and don&amp;#8217;t use one.
&lt;h2&gt;Enough of the X Journey &amp;#8230; Now in&amp;nbsp;Conclusion&lt;/h2&gt;
So what does the iSSH give me? I can now sit on the couch, watch &lt;span class="caps"&gt;TV&lt;/span&gt;, and simultaneously login into the RPi with full X Windows support.  Some would call this Nirvana but I call it just &lt;span class="caps"&gt;VERY&lt;/span&gt; &lt;span class="caps"&gt;NICE&lt;/span&gt;.  The iPad/iSSH combination isn&amp;#8217;t the perfect user experience but Zingersoft did a good&amp;nbsp;job.&lt;/p&gt;
&lt;p&gt;By the way &amp;#8230;. the above iPad screen shot of the X Server display with a globe was rendered using the following&amp;nbsp;code:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;#!/usr/bin/env python

&amp;#39;&amp;#39;&amp;#39;
    Source: http://www.scipy.org/Cookbook/Matplotlib/Maps
&amp;#39;&amp;#39;&amp;#39;

from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt
import numpy as np

Use_NASA_blue_marble_image = False

# set up orthographic map projection with
# perspective of satellite looking down at 50N, 100W.
# use low resolution coastlines.
# don&amp;#39;t plot features that are smaller than 1000 square km.
map = Basemap(projection=&amp;#39;ortho&amp;#39;, lat_0=50, lon_0=-100, resolution=&amp;#39;l&amp;#39;, area_thresh=1000.)

# draw coastlines, country boundaries, fill continents.
if Use_NASA_blue_marble_image:
    map.bluemarble()
else:
    map.drawcoastlines()
    map.drawcountries()
    map.fillcontinents(color=&amp;#39;coral&amp;#39;)

# draw the edge of the map projection region (the projection limb)
map.drawmapboundary()

# draw lat/lon grid lines every 30 degrees.
map.drawmeridians(np.arange(0, 360, 30))
map.drawparallels(np.arange(-90, 90, 30))

# lat/lon coordinates of five cities.
lats = [40.02, 32.73, 38.55, 48.25, 17.29]
lons = [-105.16, -117.16, -77.00, -114.21, -88.10]
cities = [&amp;#39;Boulder, CO&amp;#39;, &amp;#39;San Diego, CA&amp;#39;, &amp;#39;Washington, DC&amp;#39;, &amp;#39;Whitefish, MT&amp;#39;, &amp;#39;Belize City, Belize&amp;#39;]

# compute the native map projection coordinates for cities.
x, y = map(lons, lats)

# plot filled circles at the locations of the cities.
map.plot(x, y, &amp;#39;bo&amp;#39;)

# plot the names of those five cities.
for name, xpt, ypt in zip(cities, x, y):
        plt.text(xpt + 50000, ypt + 50000, name)

# make up some data on a regular lat/lon grid.
nlats = 73
nlons = 145
delta = 2. * np.pi / (nlons - 1)
lats = (0.5 * np.pi - delta * np.indices((nlats, nlons))[0, :, :])
lons = (delta * np.indices((nlats, nlons))[1, :, :])
wave = 0.75 * (np.sin(2. * lats) ** 8 * np.cos(4. * lons))
mean = 0.5 * np.cos(2. * lats) * ((np.sin(2. * lats)) ** 2 + 2.)

# compute native map projection coordinates of lat/lon grid.
x, y = map(lons * 180. / np.pi, lats * 180. / np.pi)

# contour data over the map.
CS = map.contour(x, y, wave + mean, 15, linewidths=1.5)

plt.show()
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Thu, 11 Apr 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-04-11:posts/2013/Apr/11/a-better-mobile-display-for-the-raspberry-pi/</guid><category>Linux</category><category>Raspberry Pi</category><category>X Window System</category></item><item><title>The Simplest XBee Network</title><link>http://jeffskinnerbox.me/posts/2013/Mar/20/the-simplest-xbee-network/</link><description>&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/03/2013-03-20-21-14-05.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" alt="SAMSUNG" src="/images/2013-03-20-21-14-05.jpg?w=500" width="250" height="188" /&gt;
&lt;/a&gt;
As I continue my investigation of the XBee radio, I&amp;#8217;m impressed by the functionality compressed into the the small package, but I have been frustrated by one fact.  It has been a hard road to understand the device and to make it do something useful.  There is a confusing mass of commands and options that can be used.  To make things more difficult for me, it is my nature to study my subject at depth, and understand it well, before I commit myself to a project.  The XBee radios are proving to be a deep subject.  I have been struggling to get a simple 802.15.4 network up and working, at least one that is sufficiently complex to be useful for my&amp;nbsp;needs.&lt;/p&gt;
&lt;p&gt;I stumbled into the realization that I don&amp;#8217;t have to master 802.15.4 and a large set of XBee commands to make a very simple but potentially useful network.  It&amp;#8217;s a very basic observation about all radio devices like the XBee.  You see, at its core the XBee radio is  a &lt;a href="http://en.wikipedia.org/wiki/Modem"&gt;modem&lt;/a&gt;.  It encodes digital information, transmits its digits via electromagnetism, within a specific frequency band, to be received by another XBee, and  then converted back to digital information.  The use of packet data, the 802.15.4 protocol, and all the &lt;span class="caps"&gt;AT&lt;/span&gt; commands are layers on top of the XBee&amp;#8217;s  modem capability.  The modem, the core communications sub-component, is a serial communications device with a Universal Asynchronous Receiver/Transmitter (&lt;span class="caps"&gt;UART&lt;/span&gt;) as examined in an &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/raspberry-pi-serial-communication/"&gt;earlier blog&lt;/a&gt;.  So why not we just treat the XBee radio as a simple serial communication device?  Drop the idea of packetized data and 802.15.4 protocol and just do&amp;nbsp;raw serial communications.&lt;/p&gt;
&lt;p&gt;While this simplification is seductive, it does come at a price. Data is packetized and transmitted using a protocol for very good reasons.  In data transmission you must consider the fact that data could get corrupted, you need to share the communication channel with others,  data streams may be long (if not endless) and need to be properly sequenced, communications is main between specific devices as apposed to just broadcasting, and many other concerns.  You give up much of this by doing raw serial communications but you&amp;nbsp;gain simplicity.&lt;/p&gt;
&lt;p&gt;What I plan to do here is list some simple, proof of concept programs that I used to create a network with a Arduino and Raspberry Pi (RPi) using XBee radios.  You could simply add additional devices, using the same code, and it will become a fully interconnected network (i.e. where every device can talk to every other devices directly).  While inferior to a 802.15.4 network on many levels, its quick to get operational and easy to debug.  Also keep in mind that this is built on the XBee radio,  but you could do this with most any radio which supports serial communications.
&lt;h2&gt;Architecture&lt;/h2&gt;
I&amp;#8217;ll be using a Arduino and a RPis for for my network, each with a XBee radio thought which they can communicate. I&amp;#8217;ll establish terminal interface into each device so I can enter text for the device to transmit and the terminal will also show what messages where revived. All  terminals will be within windows on my &lt;span class="caps"&gt;PC&lt;/span&gt; using PuTTY, Xterm, or the Arduino&amp;#8217;s serial monitor screen.
&lt;h2&gt;Initializing the XBee&amp;nbsp;Radios&lt;/h2&gt;
First step is to make sure all the XBee radios that will be part of your network are properly configured.  Specifically, you need to make sure the &lt;span class="caps"&gt;PAN&lt;/span&gt; &lt;span class="caps"&gt;ID&lt;/span&gt; and Channel &lt;span class="caps"&gt;ID&lt;/span&gt; of the XBee radio&amp;#8217;s are identical.  To accomplish this, I used the &lt;code&gt;XBeeTerm.py&lt;/code&gt; utility I posted in my earlier blog titled &lt;a href="http://jeffskinnerbox.wordpress.com/2013/01/30/configuration-utilities-for-xbee-radios/"&gt;Configuration Utilities for XBee Radios&lt;/a&gt;.  I&amp;#8217;m going to setup my network with two XBee radios (but you can use as many as you wish) and I used the configuration file below on both&amp;nbsp;radios:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# To remove comments, white spaces, and blank lines, use the following:
#       sed &amp;#39;/^#/d; s/\([^$]\)#.*/\1/&amp;#39; Modem-Device.txt | sed &amp;#39;s/[ \t]*$//&amp;#39; &amp;amp;gt; modemd.txt
# Run this script to configure the XBee radio using the following:
#       ./XBeeTerm.py modemd.txt
#
baudrate 9600       # (XBeeTerm command) set the baudrate used to comm. with the XBee
serial /dev/ttyUSB0 # (XBeeTerm command) serial device which has the XBee radio
+++             # (XBee command) enter AT command mode on the XBee
ATRE            # (XBee command) restore XBee to factory settings
ATID B000       # (XBee command) Set the PAN ID to eight byte hex (all XBee&amp;#39;s must have this same value)
ATCH 0E         # (XBee command) set the Channel ID to a four byte hex (all XBee&amp;#39;s must have same value)
ATPL 0          # (XBee command) power level at which the RF module transmits (0 lowest / 4 highest)
ATWR            # (XBee command) write all the changes to the XBee non-volatile memory
ATFR            # (XBee command) reboot XBee radio
exit            # (XBeeTerm command) exit python shell
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Arduino&amp;nbsp;Configuration&lt;/h2&gt;

&lt;p&gt;The sketch on the Arduino is very simple. Called &lt;code&gt;XBeeModem.ino&lt;/code&gt; and is listed&amp;nbsp;blow:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;/*&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;    The XBee devise should be connected to the Arduino Uno in the following way:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;        XBee RX is connected to Arduino TX pin 3&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;        XBee TX is connected to Ardunio RX pin 2&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;        XBee +5V and Ground pins connect to the same on the Arduino&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; */&lt;/span&gt;

&lt;span style="color: #009999"&gt;#define RXPIN 2&lt;/span&gt;
&lt;span style="color: #009999"&gt;#define TXPIN 3&lt;/span&gt;
&lt;span style="color: #009999"&gt;#define BAUDRATE 9600&lt;/span&gt;

&lt;span style="color: #009999"&gt;#include&lt;/span&gt;

SoftwareSerial XBeeSerial &lt;span style="color: #555555"&gt;=&lt;/span&gt;  SoftwareSerial(RXPIN, TXPIN);

&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;setup&lt;/span&gt;()
{
    pinMode(&lt;span style="color: #FF6600"&gt;13&lt;/span&gt;, OUTPUT);

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Set the data rate for the hardware Serial port&lt;/span&gt;
    &lt;span style="color: #0099FF; font-style: italic"&gt;// and post a message stating so on the Arduino&amp;#39;s Serial Monitor.&lt;/span&gt;
    Serial.begin(BAUDRATE);
    Serial.println(&lt;span style="color: #CC3300"&gt;&amp;quot;Arduino #1 up and running.&amp;quot;&lt;/span&gt;);

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Set the data rate for the SoftwareSerial port and&lt;/span&gt;
    &lt;span style="color: #0099FF; font-style: italic"&gt;// send a message out stating so via the XBee to the other devices.&lt;/span&gt;
    XBeeSerial.begin(BAUDRATE);
    XBeeSerial.println(&lt;span style="color: #CC3300"&gt;&amp;quot;Arduino #1 up and running.&amp;quot;&lt;/span&gt;);
}

&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;loop&lt;/span&gt;()
{
    &lt;span style="color: #007788; font-weight: bold"&gt;char&lt;/span&gt; c;

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Read data arriving from the XBee and send to Arduino Serial Monitor.&lt;/span&gt;
    &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; (XBeeSerial.available()) {
        Serial.print((&lt;span style="color: #007788; font-weight: bold"&gt;char&lt;/span&gt;)XBeeSerial.read());
    }

    &lt;span style="color: #0099FF; font-style: italic"&gt;// Capture data typed at the Arduino Serial Monitor, echo the data to the Serial Monitor,&lt;/span&gt;
    &lt;span style="color: #0099FF; font-style: italic"&gt;// and send that data via the XBee.&lt;/span&gt;
    &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; (Serial.available()) {
        c &lt;span style="color: #555555"&gt;=&lt;/span&gt; (&lt;span style="color: #007788; font-weight: bold"&gt;char&lt;/span&gt;)Serial.read();
        Serial.print(c);
        XBeeSerial.print(c);
    }

    delay(&lt;span style="color: #FF6600"&gt;100&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Raspberry Pi&amp;nbsp;Configuration&lt;/h2&gt;

&lt;p&gt;The Python program on the RPi is also very simple, except for one point.  Linux I/O reads will &lt;a href="http://www.linux-mag.com/id/308/"&gt;block &lt;/a&gt;if there are no characters to read.  You must &amp;#8220;turn-off&amp;#8221; blocking.  The program is called &lt;code&gt;XBeeModem.py&lt;/code&gt; and is listed&amp;nbsp;blow:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663336.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2&gt;Closing&lt;/h2&gt;

&lt;p&gt;It doesn&amp;#8217;t get much simpler than this. With a little work, you might make something useful out of this technique but its very limited in the types of problems that it could handle. Never the less, it was a good diversion for me to clear my mind. Now back to the XBee&amp;#8217;s core capabilites, the 802.15.4 protocol, and the other&amp;nbsp;minutia!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Wed, 20 Mar 2013 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2013-03-20:posts/2013/Mar/20/the-simplest-xbee-network/</guid><category>XBee</category></item><item><title>Configuration Utilities for XBee Radios</title><link>http://jeffskinnerbox.me/posts/2013/Jan/30/configuration-utilities-for-xbee-radios/</link><description>&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/xbee-module-series-1-1mw-with-wire-antenna-xb24-awi-001.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="XBee Module - Series 1 - 1mW with Wire Antenna - XB24-AWI-001" alt="XBee Series 1" src="/images/xbee-module-series-1-1mw-with-wire-antenna-xb24-awi-001.jpg" width="20%" height="20%" /&gt;
&lt;/a&gt;
My ultimate aim is to wirelessly network several Arduino based platforms with a centralized Raspberry Pi controller. There is much for me to learn to get this operational, not the least of which is the radio device I plan to use, the Xbee.  To get up to speed on the Xbee, I found the tutorials at &lt;a href="http://www.ladyada.net/make/xbee/index.html"&gt;Adafruit&lt;/a&gt;, &lt;a href="https://www.sparkfun.com/pages/xbee_guide"&gt;Sparkfun&lt;/a&gt;, and &lt;a href="http://www.parallax.com/portals/0/downloads/docs/prod/book/122-32450-xbeetutorial-v1.0.pdf"&gt;Parallax&lt;/a&gt; helpful.   More detailed references are listed at the end of this post, but the very first challenge is to configure the XBee radios for operation.  This post provides insight on how this can be done, and my main mission, create a few simple utilities that make that job&amp;nbsp;easy.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Xbee&amp;nbsp;Radios&lt;/h2&gt;

&lt;p&gt;I purchased two XBee Series 1 Module (Freescale 802.15.4 firmware) from &lt;a href="https://www.adafruit.com/products/128"&gt;Adafruit&lt;/a&gt;.  These are manufactured by Digi and are low-power module with wire antenna  (&lt;a href="http://www.digi.com/products/wireless-wired-embedded-solutions/zigbee-rf-modules/point-multipoint-rfmodules/xbee-series1-module#models"&gt;&lt;span class="caps"&gt;XB24&lt;/span&gt;-&lt;span class="caps"&gt;AWI&lt;/span&gt;-001&lt;/a&gt;).  They have a 250 kbps &lt;span class="caps"&gt;RF&lt;/span&gt; data rates and operate at 2.4 GHz.  These radios use the &lt;span class="caps"&gt;IEEE&lt;/span&gt; 802.15.4 networking protocol and can perform point-to-multi-point or &lt;a href="http://en.wikipedia.org/wiki/Peer-to-peer"&gt;peer-to-peer&lt;/a&gt; networking , but as configured here, they do not &lt;a href="http://en.wikipedia.org/wiki/Mesh_networking"&gt;mesh&lt;/a&gt;.  The Digi models that handle meshing are Digimesh, ZNet2.5 and Zigbee (&lt;span class="caps"&gt;ZB&lt;/span&gt;).  &lt;a href="http://www.digi.com/technology/digimesh/"&gt;Digimesh&lt;/a&gt; is a version of firmware that runs on Series 1 hardware. So, if you choose to, you can &lt;a href="http://www.libelium.com/development/waspmote/tutorial0002"&gt;upgrade&lt;/a&gt; these modules to Digimesh firmware to get meshing.
&lt;h2&gt;Xbee Adapter&amp;nbsp;Board&lt;/h2&gt;
Along with the XBee radios, I purchased adapter boards designed to make it easier to work with the radios. The adopter provides on-board 3.3V regulator power from a 5 volt source, voltage level shifting circuitry so you can connect  5V circuitry to the XBee, commonly used pins are brought out along the edge (making it easy to breadboard), and engineered to be interface via &lt;span class="caps"&gt;FTDI&lt;/span&gt; cable to a computer via &lt;span class="caps"&gt;USB&lt;/span&gt;.  The&lt;a href="http://www.ladyada.net/make/xbee/wiring.html"&gt; image and the text&lt;/a&gt; below describe the pin-out for the &lt;a href="https://www.adafruit.com/products/126"&gt;Adafruit  XBee Adapter&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/xbee-pinout.jpg"&gt;
    &lt;img class="size-full wp-image-418" title="Xbee Pin Out" alt="XBee Pinout" src="/images/xbee-pinout.jpg" width="545" height="333" /&gt;
&lt;/a&gt; 
&lt;/center&gt;
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;strong&gt;3V pin&lt;/strong&gt; - This is either an input power pin (if 5V is not provided) or an output from the 250mA regulator if 5V is&amp;nbsp;provided&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;DTR&lt;/span&gt;&lt;/strong&gt; - &amp;#8220;Data terminal ready&amp;#8221;  is a flow control pin used to tell the XBee that the microcontroller or computer host is ready to&amp;nbsp;communicate.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;RST&lt;/span&gt;&lt;/strong&gt; - &amp;#8220;Reset&amp;#8221;  pin can be used to reset the XBee.  By default it is pulled high by the 10K resistor under the module. To reset, pull this pin&amp;nbsp;low.&amp;#8217;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Ground&lt;/strong&gt; - common ground for power and&amp;nbsp;signal&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;CTS&lt;/span&gt;&lt;/strong&gt; - &amp;#8220;Clear to Send&amp;#8221; this is a flow control pin that can be used to determine if there is data in the XBee input buffer ready to be&amp;nbsp;read&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;5V&lt;/strong&gt; - This is the power input pin into the 3.3V regulator. Provide up to 6V that will be linearly converted into&amp;nbsp;3.3V&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;RX&lt;/span&gt;&lt;/strong&gt; - &amp;#8220;Receive Data&amp;#8221; is the XBee&amp;#8217;s serial recieve pin. Serial data is sent on this pin &lt;strong&gt;into&lt;/strong&gt; the XBee to be transmitted&amp;nbsp;wirelessly&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;TX&lt;/span&gt;&lt;/strong&gt; - &amp;#8220;Transmit Data&amp;#8221; is the XBee&amp;#8217;s serial transmit pin. Serial data is sent on this pin &lt;strong&gt;out of&lt;/strong&gt; the XBee, after it has been transmitted wirelessly from another&amp;nbsp;module&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;RTS&lt;/span&gt;&lt;/strong&gt; - &amp;#8220;Ready to Send&amp;#8221; is a flow control pin that can be used to tell the XBee to signal that the computer or microcontroller needs a break from reading serial&amp;nbsp;data.&lt;/li&gt;
    &lt;li&gt;see pin&amp;nbsp;#1&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
&lt;a href="http://www.ladyada.net/make/xbee/configure.html"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Xbee Adaptor connected with USB FTDI TTL-232 Cable" alt="XBee Adaptor" src="/images/xbee_ftdi_powered.jpg" width="20%" height="10%" /&gt;
&lt;/a&gt; 
The &lt;span class="caps"&gt;DTR&lt;/span&gt;, &lt;span class="caps"&gt;RTS&lt;/span&gt;, &lt;span class="caps"&gt;RST&lt;/span&gt; and &lt;span class="caps"&gt;RX&lt;/span&gt; pins (going &lt;em&gt;into&lt;/em&gt; the XBee) pass through a level converter chip that brings the levels to 3.3V. Adafruit claims you can use pretty much anywhere between 2.7 to 5.5V data to communicate with the XBee. The breakout pins on the bottom of the board are not level shifted and you should try to keep data going directly into the XBee pin under&amp;nbsp;3.3V&lt;/p&gt;
&lt;h2&gt;XBee Initial Configuration and&amp;nbsp;Testing&lt;/h2&gt;

&lt;p&gt;You need a way to communicate withe the Xbee, via it adapter,  to set it up.  This can be done via Adafruit&amp;#8217;s  &lt;a href="http://www.adafruit.com/products/70"&gt;&lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;FTDI&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;-232 Cable&lt;/a&gt;, and the &lt;a href="http://www.digi.com/support/productdetail?pid=3352"&gt;Digi X-&lt;span class="caps"&gt;CTU&lt;/span&gt;&lt;/a&gt; serial terminal program.  By the way, the &lt;a href="ftp://ftp1.digi.com/support/documentation/90001003_a.pdf"&gt;X-&lt;span class="caps"&gt;CTU&lt;/span&gt; user guide&lt;/a&gt; describes the many more things it can do beyond the configuration shown here.
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Plug in the &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;FTDI&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;-232 Cable into a &lt;span class="caps"&gt;PC&lt;/span&gt; &lt;span class="caps"&gt;USB&lt;/span&gt; port.  If drivers are not installed automatically (it didn&amp;#8217;t for me), follow the steps at the &lt;a href="http://www.ftdichip.com/Drivers/VCP.htm"&gt;&lt;span class="caps"&gt;FTDI&lt;/span&gt; site&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Download the X-&lt;span class="caps"&gt;CTU&lt;/span&gt;, double click on the executable file, and follow the instructions to install the&amp;nbsp;program.&lt;/li&gt;
    &lt;li&gt;Now connect the &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;FTDI&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;-232 Cable to the Xbee Adapter as shown in the picture to the right and insert the &lt;span class="caps"&gt;USB&lt;/span&gt; end of the cable to you &lt;span class="caps"&gt;PC&lt;/span&gt;.  Start the X-&lt;span class="caps"&gt;CTU&lt;/span&gt;.&lt;/li&gt;
    &lt;li&gt;To connect, configure and upgrading the Xbee, follow the Adafruit &lt;a href="http://www.ladyada.net/make/xbee/configure.html"&gt;instructions&lt;/a&gt; for the Xbee Adapter board. Note that if you follow the instructions (I didn&amp;#8217;t - I kept it at 9600 baud), the modem&amp;#8217;s serial interface is now set to 19,200 baud, not the default 9600 used by X-&lt;span class="caps"&gt;CTU&lt;/span&gt;.  Remember this next time you use X-&lt;span class="caps"&gt;CTU&lt;/span&gt; with this&amp;nbsp;Xbee.&lt;/li&gt;
    &lt;li&gt;If your instructed by X-&lt;span class="caps"&gt;CTU&lt;/span&gt; to reset the Xbee, you can do this by shorting the reset pin, &lt;span class="caps"&gt;RST&lt;/span&gt; pin,  to&amp;nbsp;ground.&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
The configuration can be touchy, it can go badly, or not at all.  In my case, I seem to have one Xbee Adapter that can reliably perform a firmware upgrade but the other one took some time due to a lose fitting between the Adaptor and  Xbee.  If you run into configuration problems, check out these sites: &lt;a href="http://www.digi.com/wiki/developer/index.php/Bootloader_to_force_XBee_reflash"&gt;Using &lt;span class="caps"&gt;XCTU&lt;/span&gt; to Invoke the Bootloader&lt;/a&gt;, &lt;a href="http://www.jsjf.demon.co.uk/xbee/faq.pdf"&gt;The Unofficial XBee &lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt;,  &lt;a href="http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=fxOqQZD-oaM"&gt;How to recover from a failed firmware upgrade&lt;/a&gt;.
&lt;h2&gt;Quickly Getting the Xbee&amp;#8217;s&amp;nbsp;Communicating&lt;/h2&gt;
The next step for me was just do a basic test of getting two XBee device communicating with each other. This is just a sanity test to see evidence of communication between the devices. Basically, I just followed the &lt;a href="http://www.ladyada.net/make/xbee/point2point.html"&gt;instructions&lt;/a&gt; provided by Adafruit.
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2013/01/30/configuration-utilities-for-xbee-radios/simple-test/" rel="attachment wp-att-942"&gt;&lt;img class=" wp-image-942 alignright" alt="simple test" src="http://jeffskinnerbox.files.wordpress.com/2012/12/simple-test.jpg" width="327" height="245" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Using the X-&lt;span class="caps"&gt;CTU&lt;/span&gt;, set the &lt;span class="caps"&gt;PAN&lt;/span&gt; &lt;span class="caps"&gt;ID&lt;/span&gt; to the same value on the two&amp;nbsp;Xbee&amp;#8217;s.&lt;/li&gt;
    &lt;li&gt;Select an Ardunio that has been programmed to send repeated brief messages to its serial port.  I used the standard &lt;span class="caps"&gt;LED&lt;/span&gt; &lt;a href="http://arduino.cc/en/Tutorial/Blink"&gt;Blinking sketch&lt;/a&gt; but put in some write statements in the&amp;nbsp;loop.&lt;/li&gt;
    &lt;li&gt;Using an Arduino and breadboard, connect +5V and ground to provide power. Make sure the XBee&amp;#8217;s &lt;span class="caps"&gt;LED&lt;/span&gt; is&amp;nbsp;blinking.&lt;/li&gt;
    &lt;li&gt;Connect the &lt;span class="caps"&gt;RX&lt;/span&gt; line (input) of the XBee to the &lt;span class="caps"&gt;TX&lt;/span&gt; line (output) of the Arduino. Connect the &lt;span class="caps"&gt;RX&lt;/span&gt; line (input) of the Arduino to the &lt;span class="caps"&gt;TX&lt;/span&gt; line (output) of the Xbee. Plug the Arduino into your &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8217;s serial&amp;nbsp;port.&lt;/li&gt;
    &lt;li&gt;Now take the second Xbee and connect the  &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;FTDI&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;-232 Cable to the Xbee and the &lt;span class="caps"&gt;PC&lt;/span&gt;.  The cable is doing nothing but appling power to the&amp;nbsp;Xbee.&lt;/li&gt;
    &lt;li&gt;Now you should see the receive &lt;span class="caps"&gt;LED&lt;/span&gt; periodically light on the &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;FTDI&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;-232&amp;nbsp;Cable tethered Xbee.&lt;/li&gt;
    &lt;li&gt;You now got proof that the two Xbee&amp;#8217;s are communicating.  The Arduino connected Xbee is sending data to its serial port and the &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;FTDI&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;-232 Cable tethered Xbee&amp;nbsp;is receiving it.&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
Above you&amp;#8217;ll find a picture of the configuration, and below is the Arduino sketch I&amp;nbsp;used.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;/*&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *  Xbee Test via Blink LED&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *Turns on an LED on for one second, then off for one second, repeatedly.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *Also increase brigthness of analog LED.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *The circuit:&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * LED1 connected from digital pin 13 to ground.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * LED2 connected from analog pin 9 to ground.&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * Note: On most Arduino boards, there is already an LED on the board&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; * connected to pin 13, so you don&amp;#39;t need any extra components for this example.&lt;/span&gt;

&lt;span style="color: #0099FF; font-style: italic"&gt; *Created 1 June 2005&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *By David Cuartielles&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *http://arduino.cc/en/Tutorial/Blink&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *based on an orginal by H. Barragan for the Wiring i/o board&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; *Modified by Jeff Irland in December 2012&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt; */&lt;/span&gt;

&lt;span style="color: #007788; font-weight: bold"&gt;int&lt;/span&gt; ledPin1 &lt;span style="color: #555555"&gt;=&lt;/span&gt;  &lt;span style="color: #FF6600"&gt;13&lt;/span&gt;;    &lt;span style="color: #0099FF; font-style: italic"&gt;// LED connected to digital pin 13&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;int&lt;/span&gt; ledPin2 &lt;span style="color: #555555"&gt;=&lt;/span&gt;  &lt;span style="color: #FF6600"&gt;9&lt;/span&gt;;     &lt;span style="color: #0099FF; font-style: italic"&gt;// LED connected to analog pin 9&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;int&lt;/span&gt; brightness &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;;

&lt;span style="color: #0099FF; font-style: italic"&gt;// The setup() method runs once, when the sketch starts&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;setup&lt;/span&gt;()   {
    Serial.begin(&lt;span style="color: #FF6600"&gt;9600&lt;/span&gt;);
    pinMode(ledPin1, OUTPUT);     &lt;span style="color: #0099FF; font-style: italic"&gt;// initialize the digital pin as an output&lt;/span&gt;
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;Arduino done with setup()&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
}

&lt;span style="color: #0099FF; font-style: italic"&gt;// the loop() method runs over and over again,&lt;/span&gt;
&lt;span style="color: #0099FF; font-style: italic"&gt;// as long as the Arduino has power&lt;/span&gt;
&lt;span style="color: #007788; font-weight: bold"&gt;void&lt;/span&gt; &lt;span style="color: #CC00FF"&gt;loop&lt;/span&gt;()
{
    digitalWrite(ledPin1, HIGH);   &lt;span style="color: #0099FF; font-style: italic"&gt;// set the LED on&lt;/span&gt;
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;LED set HIGH.&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
    delay(&lt;span style="color: #FF6600"&gt;1000&lt;/span&gt;);                   &lt;span style="color: #0099FF; font-style: italic"&gt;// wait for a second&lt;/span&gt;

    digitalWrite(ledPin1, LOW);    &lt;span style="color: #0099FF; font-style: italic"&gt;// set the LED off&lt;/span&gt;
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;LED set LOW.&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
    delay(&lt;span style="color: #FF6600"&gt;1000&lt;/span&gt;);                   &lt;span style="color: #0099FF; font-style: italic"&gt;// wait for a second&lt;/span&gt;

    brightness &lt;span style="color: #555555"&gt;=&lt;/span&gt; brightness &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;5&lt;/span&gt;;
    analogWrite(ledPin2, brightness);
    Serial.println(&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;LED brightness increased.&lt;span style="color: #555555"&gt;&amp;amp;&lt;/span&gt;quot;);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Installing XBee Python Tools for the&amp;nbsp;RPi&lt;/h2&gt;

&lt;p&gt;While the &lt;span class="caps"&gt;MS&lt;/span&gt; Windows based Digi X-&lt;span class="caps"&gt;CTU&lt;/span&gt; tool is just fine, I want to use the RPi&amp;#8217;s and Python to access the XBee serial communication &lt;span class="caps"&gt;API&lt;/span&gt;, and its advanced features, for one or more XBee devices.  I prefer simple utilities, that can be scripted within the Linux shell.  Call me a Linux snob if you wish, but I don&amp;#8217;t care for &lt;span class="caps"&gt;MS&lt;/span&gt;&amp;nbsp;Windows!&lt;/p&gt;
&lt;p&gt;In my post &amp;#8220;&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/22/selecting-xbee-radios-and-supporting-softwaretools/"&gt;Selecting XBee Radios and Supporting Software Tools&lt;/a&gt;&amp;#8220;, I referenced a Python package that could be used to create my utilitiesd, call python-xbee, and I will be using it here. It claims to provides a semi-complete implementation of the XBee binary &lt;span class="caps"&gt;API&lt;/span&gt; protocol and allows a developer to send and receive the information they desire without dealing with the raw communication details. It also claims the  library is compatible with both XBee 802.15.4 (Series 1) and XBee ZigBee (Series 2) modules, normal and &lt;span class="caps"&gt;PRO&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;First, we need to load some additional required Python Packages, that being &lt;a href="http://pyserial.sourceforge.net/"&gt;pySerial&lt;/a&gt; and &lt;a href="https://nose.readthedocs.org/en/latest/"&gt;Nose&lt;/a&gt;. pySerial extends python&amp;#8217;s capabilities to include interacting with a serial port and Nose is a package providing a very easy way to build tests, based on the Python class &lt;a href="http://docs.python.org/2/library/unittest.html"&gt;unittest&lt;/a&gt;.  (Don&amp;#8217;t let this all scare you away, these are necessary but your not going to use them directly).  To load these package:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo pip install pySerial
sudo pip install nose&lt;/code&gt;&lt;/p&gt;
Download the python-xbee tools from &lt;a href="http://code.google.com/p/python-xbee/"&gt;Google Code&lt;/a&gt; or &lt;a href="http://pypi.python.org/pypi/XBee/2.0.0"&gt;Python Org&lt;/a&gt; and place them into the RPi&amp;#8217;s $&lt;span class="caps"&gt;HOME&lt;/span&gt;/src.  The &lt;span class="caps"&gt;README&lt;/span&gt; file provides installation instructions.  It states that the following command automatically test and install the package for you:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo python setup.py install&lt;/code&gt;&lt;/p&gt;
There is a simple to use RPi platform tool that I have modified for my needs, that is a XBee serial command shell for interacting with XBee radios.  It performs the core functions of the official configuration tool, &lt;a href="https://sites.google.com/site/xbeetutorial/xctu"&gt;X-&lt;span class="caps"&gt;CTU&lt;/span&gt;&lt;/a&gt;, which only runs on Windows. (There happens to be a cross-platform version of X-&lt;span class="caps"&gt;CTU&lt;/span&gt; called &lt;a href="http://www.moltosenso.com/client/fe/browser.php?pc=/client/fe/download.php"&gt;moltosenso Network Manager&lt;/a&gt; but I don&amp;#8217;t need all this horse power.)  I&amp;#8217;ll use this X-&lt;span class="caps"&gt;CTU&lt;/span&gt;-alternative to configure the individual XBee radios.  With the X-&lt;span class="caps"&gt;CTU&lt;/span&gt;, you can update firmware, etc. but most of the time you need the program to do simple configuration tasks. You could use Linux&amp;#8217;s &lt;a href="http://linux.die.net/man/1/minicom"&gt;&lt;code&gt;minicom&lt;/code&gt;&lt;/a&gt;, but I prefer a simpler tool which can be scripted so I can configure several XBee radios identically.  I found much of what I wanted in an existing &lt;a href="https://github.com/sensestage/xbee-tools"&gt;Python XBee tools for configuration&lt;/a&gt;.  I made some modification/improvements, I call it the XBeeTerm, and its listed&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663016.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The XBeeTerm.py module imports functions from the pretty.py package, specifically to colorize the output for xterm on the Raspberry Pi.  This package is provided&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663095.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2&gt;Identifying the RPi &lt;span class="caps"&gt;USB&lt;/span&gt; device used by the&amp;nbsp;XBee&lt;/h2&gt;

&lt;p&gt;Since the python-xbee library wants to talk to the via a Linux serial devices, I&amp;#8217;m using the &lt;a href="http://www.adafruit.com/products/70"&gt;&lt;span class="caps"&gt;USB&lt;/span&gt; &lt;span class="caps"&gt;FTDI&lt;/span&gt; &lt;span class="caps"&gt;TTL&lt;/span&gt;-232 Cable&lt;/a&gt; (&lt;a href="http://www.ftdichip.com/"&gt;&lt;span class="caps"&gt;FTDI&lt;/span&gt;&lt;/a&gt; is the &lt;a href="http://en.wikipedia.org/wiki/Universal_Serial_Bus"&gt;&lt;span class="caps"&gt;USB&lt;/span&gt;&lt;/a&gt; chip manufacturer) used in the XBee configuration step done earlier.  I connected the cable to the RPi &lt;span class="caps"&gt;USB&lt;/span&gt; port  and then we need to find the serial tty the cable is associated with.  To do this, it takes a bit of detective work. Run the commands:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;lsusb
dmesg | grep Manufacturer
dmesg | grep FTDI&lt;/code&gt;&lt;/p&gt;
A better command might be (but I&amp;#8217;m not sure it will work every time):
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;dmesg | grep -i usb | grep -i tty&lt;/code&gt;&lt;/p&gt;
The interpretation of the output tells us the cable is attached to serial device &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;.  See the output&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.wordpress.com/2013/01/30/configuration-utilities-for-xbee-radios/best-use-of-dmesg/" rel="attachment wp-att-1070"&gt;&lt;img class="aligncenter size-full wp-image-1070" alt="best use of dmesg" src="http://jeffskinnerbox.files.wordpress.com/2012/12/best-use-of-dmesg.jpg" width="500" height="192" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another possibility is to use &lt;a href="http://linux.die.net/man/8/udevadm"&gt;&lt;code&gt;udevadm&lt;/code&gt;&lt;/a&gt; to gather information about specific devices but I never figured out exactly how to use it to answer my question.  Python also has a package called &lt;a href="http://sourceforge.net/apps/trac/pyusb/"&gt;PyUSB&lt;/a&gt; that might provide some help, but also here you&amp;#8217;ll still need the vendor and product identification&amp;nbsp;information.&lt;/p&gt;
&lt;p&gt;Chances are that when you plug the cable into the same &lt;span class="caps"&gt;USB&lt;/span&gt; port the next time, it will default to the same tty but there is no certainty.  To assign a permanent tty name to the device, and never do any of this again, check out &lt;a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/"&gt;Persistent names for usb-serial devices&lt;/a&gt;.
&lt;h2&gt;Configuring the XBee Radios for &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;Mode&lt;/h2&gt;
The configuration and testing of the XBee&amp;#8217;s done earlier was done in &lt;span class="caps"&gt;AT&lt;/span&gt; Command mode (Transparent Mode). In &lt;span class="caps"&gt;AT&lt;/span&gt; mode, everything sent to the &lt;span class="caps"&gt;RX&lt;/span&gt; line of the XBee radio will be sent out via the antenna, and all the incoming data from antenna will go to the XBee&amp;#8217;s &lt;span class="caps"&gt;TX&lt;/span&gt; line.  This is why we could check the sanity of the XBee radios in the earlier section, &lt;strong&gt;XBee Initial Configuration and Testing &lt;/strong&gt;using a simple Arduino sketch.  We sent junk to the XBee and it transmitted&amp;nbsp;it!&lt;/p&gt;
&lt;p&gt;Now we&amp;#8217;ll configure two XBee radios (with a Coordinator and a single End Device) to form a network using &lt;span class="caps"&gt;API&lt;/span&gt; Mode.  In &lt;span class="caps"&gt;API&lt;/span&gt; Mode, XBee won&amp;#8217;t send out anything until it received the correct form of commands from the serial interface.  The &lt;a href="ftp://ftp1.digi.com/support/documentation/90000982_A.pdf"&gt;XBee &lt;span class="caps"&gt;AT&lt;/span&gt; Command Set&lt;/a&gt; (page 27), specifically the  &lt;span class="caps"&gt;ATAP&lt;/span&gt; 2 command, allows you to configure the XBee radio for &lt;span class="caps"&gt;API&lt;/span&gt; Mode.   So &lt;a href="http://code.google.com/p/xbee-api/wiki/WhyApiMode"&gt;why &lt;span class="caps"&gt;API&lt;/span&gt; Mode&lt;/a&gt;, consider the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;When sending a packet, the transmitting radio receives an &lt;span class="caps"&gt;ACK&lt;/span&gt;, indicating the packet was successfully delivered. The transmitting radio will resend the packet if it does not receive an &lt;span class="caps"&gt;ACK&lt;/span&gt;.&lt;/li&gt;
    &lt;li&gt;Receive packets (&lt;span class="caps"&gt;RX&lt;/span&gt;), contain the source address of transmitting&amp;nbsp;radio&lt;/li&gt;
    &lt;li&gt;You can configure a remote radio with the Remote &lt;span class="caps"&gt;AT&lt;/span&gt;&amp;nbsp;feature&lt;/li&gt;
    &lt;li&gt;Easily address multiple radios and send broadcast &lt;span class="caps"&gt;TX&lt;/span&gt;&amp;nbsp;packets&lt;/li&gt;
    &lt;li&gt;Receive I/O data from 1 or more remote&amp;nbsp;XBees&lt;/li&gt;
    &lt;li&gt;Obtain &lt;span class="caps"&gt;RSSI&lt;/span&gt; (signal strength) of an &lt;span class="caps"&gt;RX&lt;/span&gt;&amp;nbsp;packet&lt;/li&gt;
    &lt;li&gt;Packets include a checksum for data&amp;nbsp;integrity&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The XBeeTerm utility will  easily configure the XBee radios for &lt;span class="caps"&gt;API&lt;/span&gt; mode and set the appropriate network parameters.  To get a deeper appreciation of configuring the XBee radios, see the References at the end.  For here, I&amp;#8217;ll just run through the steps using the XBeeTerm.py tool and the configuration commands used, documented in file&amp;nbsp;scripts.&lt;/p&gt;
&lt;p&gt;Coordinator Configuration File: &lt;code&gt;Config-Coordinator.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663169.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;End Device Configuration File: &lt;code&gt;Config-End-Device.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663187.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;As they stand right now, these files could not be processed by &lt;code&gt;XBeeTerm.py&lt;/code&gt; because of the comments (included to make the contents understandable).  To clean this up, the command &lt;code&gt;sed '/^#/d; s/([^$])#.&lt;em&gt;/\1/'&lt;/code&gt;will remove all shell type comments from a file and &lt;code&gt;sed 's/[ \t]&lt;/em&gt;$//'&lt;/code&gt;will remove unneeded white space.  Putting this all together and you can use this to prepare the above files for &lt;code&gt;XBeeTerm.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sed &amp;#39;/^#/d; s/\([^$]\)#.*/\1/&amp;#39; Config-Coordinator.txt | sed &amp;#39;s/[ \t]*$//&amp;#39; &amp;gt; coord.txt
sed &amp;#39;/^#/d; s/\([^$]\)#.*/\1/&amp;#39; Config-End-Device.txt | sed &amp;#39;s/[ \t]*$//&amp;#39; &amp;gt; endd.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now execute the following &lt;code&gt;python XBeeTerm.py coord.txt&lt;/code&gt; and you get the output&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeeterm-script.jpg"&gt;&lt;img class="aligncenter size-full wp-image-1262" alt="XBeeTerm Script" src="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeeterm-script.jpg" width="500" height="205" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The yellow text is responses back from the XBee serial terminal and the red text is from the XBee radio itself.  Since all the red text is &amp;#8220;&lt;span class="caps"&gt;OK&lt;/span&gt;&amp;#8221;, all the commands took and the XBee radio is now configured as a Coordinator.  Now repeat this for the End Device XBee&amp;nbsp;radio.&lt;/p&gt;
&lt;p&gt;In this example, I have one End Device but what if you have multiple devices, do you need a &lt;code&gt;Config-End-Device.txt &lt;/code&gt;file for each end device?  The only change within the configuration file is the radio&amp;#8217;s address, which is established via the &lt;span class="caps"&gt;ATMY&lt;/span&gt; command.  Here is a trick to avoid the need for multiple files.  First, configure all your End Devices using the configuration file.  Then, for each radio, modify the &lt;span class="caps"&gt;ATMY&lt;/span&gt; use the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;echo -e &amp;quot;baudrate 9600\nserial /dev/ttyUSB0\n+++\nATMY AAA1\nATWR\nATFR\nexit&amp;quot; | python XBeeTerm.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but for each End Device radio, increment the &lt;span class="caps"&gt;ATMY&lt;/span&gt; address by one (e.g. &lt;span class="caps"&gt;AAA2&lt;/span&gt;, &lt;span class="caps"&gt;AAA3&lt;/span&gt;, &amp;#8230;).
&lt;h2&gt;Querying XBee for&amp;nbsp;Configuration&lt;/h2&gt;
Now that we believe the XBee radios are properly configured, lets verify that by query the radios.  You could use XBeeTerm to perform this function by including only the &lt;span class="caps"&gt;AT&lt;/span&gt; Command without the parameter but I wanted a more informative tool. For this, I have created another utility that can take a list of &lt;span class="caps"&gt;AT&lt;/span&gt; Commands as arguments and query the XBee radio for the &lt;span class="caps"&gt;AT&lt;/span&gt;&amp;#8217;s parameter value.  This utility, call &lt;code&gt;XBeeQuery.py&lt;/code&gt;, is listed&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6663248.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Here is a sample output for the XBeeQuery&amp;nbsp;utility:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeequery-script.jpg"&gt;&lt;img class="aligncenter size-full wp-image-1265" alt="XBeeQuery Script" src="http://jeffskinnerbox.files.wordpress.com/2013/01/xbeequery-script.jpg" width="500" height="205" /&gt;&lt;/a&gt;
&lt;h2&gt;References&lt;/h2&gt;
Configuring the XBee Radios
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.digi.com/support/kbase/kbaseresultdetl?id=2184"&gt;What is &lt;span class="caps"&gt;API&lt;/span&gt; (Application Programming Interface) Mode and how does it&amp;nbsp;work?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://docs.sensestage.eu/change-to-using-the-api-mode-of-the-xbees"&gt;Change to using the &lt;span class="caps"&gt;API&lt;/span&gt; mode of the&amp;nbsp;XBees&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.instructables.com/id/Configuring-XBees-for-API-Mode/"&gt;Configuring XBees for &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;Mode&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-4-api"&gt;Playing Xbee. Part 4 – &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://code.google.com/p/xbee-api/wiki/XBeeConfiguration"&gt;XBee&amp;nbsp;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
General Documentation
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;XBee 802.15.4 (Series 1) Module &lt;a href="http://www.digi.com/pdf/ds_xbeemultipointmodules.pdf"&gt;Datasheet&lt;/a&gt;, &lt;a href="ftp://ftp1.digi.com/support/documentation/90000982_A.pdf"&gt;Product&amp;nbsp;Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Wed, 30 Jan 2013 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2013-01-30:posts/2013/Jan/30/configuration-utilities-for-xbee-radios/</guid><category>Raspberry Pi</category><category>XBee</category></item><item><title>Selecting XBee Radios and Supporting Software Tools</title><link>http://jeffskinnerbox.me/posts/2012/Dec/22/selecting-xbee-radios-and-supporting-software-tools/</link><description>&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/22/selecting-xbee-radios-and-supporting-softwaretools/digimesh_networking/" rel="attachment wp-att-986"&gt;&lt;img class="aligncenter size-full wp-image-986" alt="DigiMesh_networking" src="http://jeffskinnerbox.files.wordpress.com/2012/12/digimesh_networking.jpg" width="499" height="262" /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;My ultimate aim is to wirelessly network several Arduino based platforms with a centralized Raspberry Pi controller or gateway.  There is much for me to learn to get this operational, not the least of which is the selection of the radio device platform I plan to use. After reviewing &lt;a href="https://www.sparkfun.com/categories/16"&gt;other&lt;/a&gt; devices, I have settled on the XBee, in part because of its popularity, its mesh capabilities, and it power management.  To get up to speed on the Xbee, I found the tutorials at &lt;a href="http://www.ladyada.net/make/xbee/index.html"&gt;Adafruit&lt;/a&gt;, &lt;a href="https://www.sparkfun.com/pages/xbee_guide"&gt;Sparkfun&lt;/a&gt;, and &lt;a href="http://www.parallax.com/portals/0/downloads/docs/prod/book/122-32450-xbeetutorial-v1.0.pdf"&gt;Parallax&lt;/a&gt; helpful.   Some additional good references are listed at the end of this&amp;nbsp;post.&lt;/p&gt;
&lt;p&gt;As I did in the post &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/raspberry-pi-serial-communication/"&gt;Raspberry Pi Serial Communication: What, Why, and a Touch of How&lt;/a&gt;, I have a desire (obsessive need?) to do some extensive researching before diving into implementing a project.  What is listed below are my research findings.
&lt;h2&gt;XBee Series 1 vs. Series&amp;nbsp;2&lt;/h2&gt;
&lt;a href="http://www.digi.com/xbee/"&gt;Digi&amp;#8217;s XBee website&lt;/a&gt; gives you a confusing set of options for selecting radios but after reviewing multiple sources, it boils down to the XBee Series 1 vs. Series 2 for the &lt;span class="caps"&gt;DIY&lt;/span&gt; type applications I would do.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.adafruit.com/products/128"&gt;XBee Series 1 Module&lt;/a&gt; (&lt;a href="http://www.freescale.com/"&gt;Freescale&lt;/a&gt; technology with 802.15.4 firmware) have a 250 kbps &lt;span class="caps"&gt;RF&lt;/span&gt; data rates and operate at 2.4 GHz.  These radios use the&lt;a href="http://en.wikipedia.org/wiki/IEEE_802.15.4"&gt; &lt;span class="caps"&gt;IEEE&lt;/span&gt; 802.15.4&lt;/a&gt; networking protocol and can perform point-to-multi-point networking.  You can also do &lt;a href="http://en.wikipedia.org/wiki/Peer-to-peer"&gt;peer-to-peer&lt;/a&gt; networking (a form of &lt;a href="http://en.wikipedia.org/wiki/Mesh_networking"&gt;mesh&lt;/a&gt; network) but this will require a firmware  &lt;a href="http://www.libelium.com/development/waspmote/tutorial0002"&gt;upgrade&lt;/a&gt; called &lt;a href="http://www.digi.com/technology/digimesh/"&gt;DigiMesh&lt;/a&gt; designed specifically for the Series 1&amp;nbsp;hardware.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.adafruit.com/products/968"&gt;XBee Series 2 Module&lt;/a&gt; (&lt;a href="http://www.silabs.com/products/wireless/zigbee/Pages/default.aspx"&gt;Ember/Silicon Labs&lt;/a&gt; technology with ZigBee firmware) are similar to the Series 1 in many respects but use the &lt;a href="http://www.zigbee.org/"&gt;ZigBee&lt;/a&gt; standard, and  therefore, have the potential for interoperability with devices made by different&amp;nbsp;vendors.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;a href="http://computer.howstuffworks.com/how-wireless-mesh-networks-work.htm"&gt;Mesh networking&lt;/a&gt; (&lt;a href="http://en.wikipedia.org/wiki/Network_topology"&gt;topology&lt;/a&gt;) is a type of networking where each node must not only capture and disseminate its own data, but also may serve as a relay for other nodes, that is, it must collaborate to propagate the data in the network.  This gives the network &lt;a href="http://en.wikipedia.org/wiki/Self-organizing_network"&gt;self configuring&lt;/a&gt;, &lt;a href="http://queue.acm.org/detail.cfm?id=864027"&gt;self healing&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Dynamic_routing"&gt;dynamic routing&lt;/a&gt;, and other capabilities.  Wireless mesh networks can be implemented with various wireless technology including &lt;a title="802.11s" href="http://en.wikipedia.org/wiki/802.11s"&gt;802.11&lt;/a&gt;, &lt;a title="802.15" href="http://en.wikipedia.org/wiki/802.15"&gt;802.15&lt;/a&gt;, &lt;a title="802.16" href="http://en.wikipedia.org/wiki/802.16"&gt;802.16&lt;/a&gt;, cellular technologies or combinations of more than one type.  The mesh enabling capability for these technologies is the&lt;a href="http://en.wikipedia.org/wiki/Routing_protocol"&gt; routing protocol &lt;/a&gt;being used. There are &lt;a href="http://en.wikipedia.org/wiki/Wireless_mesh_network"&gt;many routing protocols&lt;/a&gt; being used by mesh networks today for many different types of products, but I will concern ourselves with just the XBee Series 1 and Series 2&amp;nbsp;products.&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.zigbee.org/"&gt;Zigbee Alliance&lt;/a&gt; is a group of more than 300 companies who is responsible for publishing and maintaining the Zigbee specification. In the ZigBee network topology,  there are different node types in the network (Coordinator, Router, End Device). &lt;a href="http://www.digi.com/technology/digimesh/"&gt;DigiMesh&lt;/a&gt; is a proprietary &lt;a href="http://compnetworking.about.com/od/basicnetworkingfaqs/a/peer-to-peer.htm"&gt;peer-to-peer networking&lt;/a&gt; using a simplified topology (no need to define and organize coordinators, routers or end-nodes).  Digi has a &lt;a href="http://www.digi.com/pdf/wp_zigbeevsdigimesh.pdf"&gt;white paper&lt;/a&gt; that does a nice comparison of the two types of meshing&amp;nbsp;products.&lt;/p&gt;
&lt;p&gt;To further clarify the similarity/difference between Series 1 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; 2, see the table below:
&lt;center&gt;
&lt;table border="1" cellspacing="0" cellpadding="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Feature&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;&lt;b&gt;XBee Series 1 /&amp;nbsp;802.15.4&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;&lt;b&gt;XBee Series 2 /&amp;nbsp;ZigBee&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;&lt;b&gt;Ramifications&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Price&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;~ &lt;mathjax&gt;$23&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;~ $&lt;/mathjax&gt;26&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;Price shouldn’t be a driver but If you are looking for a simple point-to-point configuration, you should go with the Series 1. The Series 2 requires considerable setup and&amp;nbsp;configuration.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Transmit Power Output&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;Indoor/Urban Range&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;Line-of-Sight&amp;nbsp;Range&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="135"&gt;
&lt;p align="center"&gt;1 mW&amp;nbsp;(0dbm)&lt;/p&gt;
&lt;p align="center"&gt;up to 100&amp;nbsp;ft.&lt;/p&gt;
&lt;p align="center"&gt;up to 300&amp;nbsp;ft.&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="135"&gt;
&lt;p align="center"&gt;2 mW&amp;nbsp;(+3dbm)&lt;/p&gt;
&lt;p align="center"&gt;up to 133&amp;nbsp;ft.&lt;/p&gt;
&lt;p align="center"&gt;up to 400&amp;nbsp;ft.&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;The additional power of the Series 2 give you a ~25% increase in&amp;nbsp;range.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Firmware&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Comes standard with 802.15.4 firmware for point-point or star topology. Requires DigiMesh firmware to&amp;nbsp;mesh.&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;does not offer any 802.15.4-only firmware; it is always running the XBee &lt;span class="caps"&gt;ZB&lt;/span&gt; ZigBee mesh&amp;nbsp;firmware&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;DigiMesh, while proprietary, appears to have less overhead and easier to&amp;nbsp;configure&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Network&amp;nbsp;Topologies&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Point-to-Point, Star, and Mesh (with DigiMesh&amp;nbsp;firmware)&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Point-to-Point, Star, and&amp;nbsp;Mesh&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;With a closer reading of the specs, you’ll find that the Series 1 with DigiMesh has a peer-to-peer topology but the Series 2 is hierarchical. I believe peer-to-peer is&amp;nbsp;superior.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Routing&amp;nbsp;Protocol&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p style="text-align:center;" align="center"&gt;Ad hoc On-Demand Distance Vector (&lt;span class="caps"&gt;AODV&lt;/span&gt;) Routing + Hierarchical Tree Routing as last&amp;nbsp;resort&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;Ad hoc On-Demand Distance Vector (&lt;span class="caps"&gt;AODV&lt;/span&gt;)&amp;nbsp;Routing&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;I suspect there are more differences here but couldn’t uncover&amp;nbsp;them.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;&lt;span class="caps"&gt;RF&lt;/span&gt; Data&amp;nbsp;Rate&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;250&amp;nbsp;Kbps&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;250&amp;nbsp;Kbps&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;&lt;span class="caps"&gt;RF&lt;/span&gt; data rate doesn’t have much practical&amp;nbsp;meaning&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Practical Maximum&amp;nbsp;Throughput&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;~&amp;nbsp;80kbps&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;ZigBee is significantly slower than the&amp;nbsp;802.15.4&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;ZugBee is a full &lt;span class="caps"&gt;OSI&lt;/span&gt; stack, and as a result, has significant&amp;nbsp;overhead.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="187"&gt;
&lt;p align="center"&gt;&lt;b&gt;Power-Down&amp;nbsp;Current&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;10&amp;nbsp;uA&lt;/p&gt;
&lt;/td&gt;
&lt;td width="135"&gt;
&lt;p align="center"&gt;1&amp;nbsp;uA&lt;/p&gt;
&lt;/td&gt;
&lt;td width="181"&gt;
&lt;p align="center"&gt;Series 2 was built for low power&amp;nbsp;consumption.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;After pondering this all for a bit, I believe the choose boils down to two questions:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Is the interoperability of ZigBee important to&amp;nbsp;you?&lt;/li&gt;
    &lt;li&gt;What are the benefits of ZigBee vs.&amp;nbsp;DigiMesh?&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The answer to the first question is &amp;#8220;no&amp;#8221;.  While I find ZigBee&amp;#8217;s interoperability seductive, the practical matter is that I just don&amp;#8217;t see that many applications that I could envision integrating into a project.  Maybe some day, but not within my planning horizon.  As to the second question, I don&amp;#8217;t see any advantages to ZigBee&amp;#8217;s imposed topology of coordinators, routers, and end-nodes.  I believe the homogeneous types of nodes will give my applications the flexibility I may need. Of course, there are many other things one might want to consider, but I think this analysis is sufficient for my needs.  I&amp;#8217;m going with the XBee Series 1 Module and I&amp;#8217;ll install DigiMesh firmware when it comes time to build meshed networks.
&lt;h2&gt;&lt;span class="caps"&gt;AT&lt;/span&gt; Mode vs. &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;Mode&lt;/h2&gt;
XBee modules support two modes of operation – &lt;a href="http://www.digi.com/support/kbase/kbaseresultdetl?id=2205"&gt;&lt;span class="caps"&gt;AT&lt;/span&gt; mode&lt;/a&gt; and &lt;a href="http://www.digi.com/support/kbase/kbaseresultdetl?id=2184"&gt;&lt;span class="caps"&gt;API&lt;/span&gt; mode&lt;/a&gt;.  In &lt;span class="caps"&gt;API&lt;/span&gt; mode, you communicate with the radio by sending and receiving packets. In &lt;span class="caps"&gt;AT&lt;/span&gt; (transparent) mode, the XBee radio simply relays serial data to the receiving XBee, as identified by the &lt;span class="caps"&gt;DH&lt;/span&gt;+&lt;span class="caps"&gt;DL&lt;/span&gt; address.  Series 1 radios support both &lt;span class="caps"&gt;AT&lt;/span&gt; and &lt;span class="caps"&gt;API&lt;/span&gt; modes with a single firmware version, allowing you switch between the modes with the  &lt;a href="http://ftp1.digi.com/support/documentation/90001003_A.pdf"&gt;X-&lt;span class="caps"&gt;CTU&lt;/span&gt; software&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To create simple point-to-point links, XBee works nicely in &lt;span class="caps"&gt;AT&lt;/span&gt; mode without much coding. However, if your goal is to build a network consisting of more than two devices, &lt;span class="caps"&gt;AT&lt;/span&gt; mode becomes too difficult to bear. You will spend almost all the time switching in and out of &lt;span class="caps"&gt;AT&lt;/span&gt; mode, wasting time and draining batteries in the process. On the other hand, in &lt;span class="caps"&gt;API&lt;/span&gt; mode commands and data travel in specially formatted frames and no switching is necessary. Another advantage of &lt;span class="caps"&gt;API&lt;/span&gt; mode is that serial speed on transmitters doesn&amp;#8217;t have to match – one can be configured for 115,200bps, another for 2400bps, third left with default 9600bps. There is another nice feature called remote command; you can remotely request the state of XBee module pins, for example, or change an output pin&amp;nbsp;level.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s clear that I&amp;#8217;ll want to work in &lt;span class="caps"&gt;API&lt;/span&gt; mode, but judging from the &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-4-api"&gt;examples of XBee &lt;span class="caps"&gt;API&lt;/span&gt; mode code&lt;/a&gt;, it sure would be nice to have a library package that has designed in some basic utilities that I can leverage.  That is the next topic.
&lt;h2&gt;Supporting&amp;nbsp;Software&lt;/h2&gt;
One of the first packages I discovered was the &lt;a href="http://sojournstudio.org/xnp/?page_id=61"&gt;Xbee Network Protocol (&lt;span class="caps"&gt;XNP&lt;/span&gt;)&lt;/a&gt;.  I was impressed by the volume and quality of the &lt;a href="http://forums.adafruit.com/viewtopic.php?f=40&amp;amp;p=131325#p131325"&gt;documentation&lt;/a&gt;.  Never the less, I passed on it for two reasons.  First, it isn&amp;#8217;t as mature as other packages I discovered (and not widely used), and most importantly, it appears to be implementing mesh networking in software.  Ether the author didn&amp;#8217;t recognize that the Series 1 modules can mesh via the DigiMesh firmware (not a surprise since many websites wrongfully report that the Series 1 do not mesh) or he just wants to roll-his-own (what better way to learn about mesh&amp;nbsp;routing protocols).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/xbee-arduino/"&gt;xbee-arduino&lt;/a&gt; is a C++ Arduino library for communicating with XBees in &lt;span class="caps"&gt;API&lt;/span&gt; mode, with support for both Series 1 and Series 2.  Judging from the documentation,  it appears that it could be ported to Raspberry Pi but it would be far easier to use something targeted for the RPi (see below).  With the latest beta software, the XBee&amp;#8217;s serial communications can be handle via &lt;a href="http://arduino.cc/en/Reference/SoftwareSerial"&gt;SoftwareSerial&lt;/a&gt;, freeing up the Arduino &lt;span class="caps"&gt;USB&lt;/span&gt; for debugging.  It also appears to that the author is experimenting  if not already &lt;a href="http://code.google.com/p/xbee-arduino/issues/detail?id=20"&gt;supporting DigiMesh&lt;/a&gt;. The package is well documented, actively maintained, and equally important, appears to be&amp;nbsp;popular.&lt;/p&gt;
&lt;p&gt;Another possibility for the Raspberry Pi is the &lt;a href="http://code.google.com/p/python-xbee/"&gt;python-xbee&lt;/a&gt;. This Python package is not as well documented as the xbee-arduino but does appear to be actively used and supported. The fact that its on the Python Organization&amp;#8217;s web site as a &lt;a href="http://pypi.python.org/pypi/XBee/2.0.0"&gt;listed package&lt;/a&gt; gives it some additional credibility. See &lt;a href="http://code.google.com/p/python-xbee/issues/detail?id=28"&gt;this&lt;/a&gt; and &lt;a href="http://www.digi.com/wiki/developer/index.php/XBee_Extensions_to_the_Python_Socket_API"&gt;this&lt;/a&gt; with respect to DigiMesh&amp;nbsp;support.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/libxbee/"&gt;libxbee&lt;/a&gt; is another C++ library but targeted at Linux and Windows. Fewer users and the author states &amp;#8220;development is coming to an end&amp;#8221; may mean this platform isn&amp;#8217;t as strong as the&amp;nbsp;others.&lt;/p&gt;
&lt;p&gt;While not a very rigorous analysis, I believe I&amp;#8217;ll place my bets on &lt;a href="http://code.google.com/p/xbee-arduino/"&gt;xbee-arduino for Arduino&lt;/a&gt; development and &lt;a href="http://code.google.com/p/python-xbee/"&gt;python-xbee for Raspberry Pi&lt;/a&gt; development.  Using Python is intriguing in part because it appears to be the preferred software language for the RPi.  But what if you have some C++ code, a popular language for Linux, and that you want to use some existing libraries? There are tools that could make this happen. You could use &lt;a href="http://docs.python.org/2/extending/extending.html"&gt;Python&amp;#8217;s C/C++ extension modules&lt;/a&gt;. Also, there is the &lt;a href="http://www.swig.org/"&gt;Simplified Wrapper and Interface Generator (&lt;span class="caps"&gt;SWIG&lt;/span&gt;)&lt;/a&gt;, which is a software development tool that connects programs written in C/C++ with a variety of high-level programming languages. &lt;span class="caps"&gt;SWIG&lt;/span&gt; is used with different types of target languages including common scripting languages such as Perl, &lt;span class="caps"&gt;PHP&lt;/span&gt;, Python, Tcl and Ruby.
&lt;h2&gt;References&lt;/h2&gt;
An unspoken consideration in my analysis is documentation availability/quality, example implementations  for learning, and the availability of software libraries I could potential use. Here are some of the more interesting things I&amp;nbsp;uncovered.&lt;/p&gt;
&lt;p&gt;Tutorials (ZigBee but can be generalized to the XBee)
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.rfwireless-world.com/Tutorials/Zigbee_tutorial.html"&gt;Zigbee Tutorial&lt;/a&gt; - a short&amp;nbsp;introduction&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://sensor-networks.org/index.php?page=0823123150"&gt;802.15.4 vs ZigBee&lt;/a&gt; - a more technical&amp;nbsp;introduction&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://freaklabs.org/index.php/Blog/Zigbee/zigbee-mesh-routing-interactive-tutorial.html"&gt;Zigbee Mesh Routing - Interactive Tutorial&lt;/a&gt; - nice job explaining &lt;span class="caps"&gt;AODV&lt;/span&gt;&amp;nbsp;routing&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.jennic.com/elearning/zigbee/files/html/module1/module1-1.htm"&gt;The ZigBee Standard&lt;/a&gt; - a painless&amp;nbsp;introduction&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
XBee Documentation
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.digi.com/products/wireless-wired-embedded-solutions/zigbee-rf-modules/point-multipoint-rfmodules/xbee-series1-module#docs"&gt;XBee Series 1 Manuals&lt;/a&gt; - multiple document covering the Series 1&amp;nbsp;modual&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.jsjf.demon.co.uk/xbee/faq.pdf"&gt;The Unofficial XBee &lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt;  - answers to issues that maybe getting in the&amp;nbsp;way&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.jsjf.demon.co.uk/xbee/xbee.pdf"&gt;XBee Cookbook for Series 1&lt;/a&gt; - sort of companion document to the The Unoffical XBee &lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.libelium.com/development/waspmote"&gt;Libelium.com Development Documentation&lt;/a&gt; - while targeted for the meshlium device, this does have good general&amp;nbsp;documenation&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Example Implementations
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://gallery.digi.com/"&gt;Collection of XBee Projects&lt;/a&gt; - Digi&amp;#8217;s collection of XBee projects done by the Hacker/&lt;span class="caps"&gt;DIY&lt;/span&gt;&amp;nbsp;community&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://examples.digi.com/"&gt;XBee Examples &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Guides&lt;/a&gt; - Digi&amp;#8217;s website giving you step-by-step instructions for simple&amp;nbsp;projects&lt;/li&gt;
    &lt;li&gt;Playing Xbee: Part &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee"&gt;1&lt;/a&gt;, &lt;a href="http://www.circuitsathome.com/low-power/playing-xbee-part-2"&gt;2&lt;/a&gt;, &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-3"&gt;3&lt;/a&gt;, &lt;a href="http://www.circuitsathome.com/mcu/playing-xbee-part-4-api"&gt;4&lt;/a&gt; - author does a nice &amp;#8220;teaching tour&amp;#8221; on his introduction to&amp;nbsp;XBee&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Other Sources
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.mesh-networks.org/index.php?language=english&amp;amp;page=the_group"&gt;mesh networks research group&lt;/a&gt; - informative topics focused in the mesh networks&amp;nbsp;field&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://dsnet.tu-plovdiv.bg/wiki/Wiki.jsp?page=Driver%20Module%20for%20XBee%20Device"&gt;Driver Module for XBee Device&lt;/a&gt; - Linux kernel driver for&amp;nbsp;XBee&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sat, 22 Dec 2012 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2012-12-22:posts/2012/Dec/22/selecting-xbee-radios-and-supporting-software-tools/</guid><category>XBee</category></item><item><title>Raspberry Pi Serial Communication: What, Why, and a Touch of How</title><link>http://jeffskinnerbox.me/posts/2012/Dec/05/raspberry-pi-serial-communication-what-why-and-a-touch-of-how/</link><description>&lt;p&gt;I started exploring how to get a &lt;span class="caps"&gt;LCD&lt;/span&gt; display operational with a Raspberry Pi (RPi).  I checked out two hardware configurations: the &lt;a href="http://www.adafruit.com/products/181"&gt;bare bone &lt;span class="caps"&gt;LCD&lt;/span&gt; 16x2 display&lt;/a&gt; driven by the &lt;a href="http://iamsuhasm.wordpress.com/tutsproj/using-lcds/"&gt;&lt;span class="caps"&gt;HD44780&lt;/span&gt; chip set&lt;/a&gt;, which takes 6 wires to operate,  and another configuration that uses a &lt;a href="http://www.adafruit.com/products/772"&gt;Adafruit shield&lt;/a&gt; that requires only 2 wires.  It quickly became clear to me that I knew very little about how the &lt;span class="caps"&gt;LCD&lt;/span&gt; display works (maybe not an important topic for me) and I didn&amp;#8217;t fully understands the RPi&amp;#8217;s serial communications capabilities (something I must fully understand).  Adafruit does give some nice tutorial that  provide instructions on how to get both configurations work on the RPi, but I don&amp;#8217;t like blindly follow tutorials without having a deeper understanding of my options and the underlining hardware.   So what are the serial communication options supported by the Raspberry Pi, under what situations would you use them, and how do you use&amp;nbsp;them?&lt;/p&gt;
&lt;p&gt;So I did my research, and for the moment, I&amp;#8217;m not going to concern myself about &lt;span class="caps"&gt;LCD&lt;/span&gt; displays but I will dive neck deep into understanding RPi serial communications.  I&amp;#8217;ll return to the &lt;span class="caps"&gt;LCD&lt;/span&gt; display topic later.
&lt;h2&gt;The Raspberry Pi&amp;nbsp;Board&lt;/h2&gt;
As our first step, lets take a quick scan of the interfaces we have on RPi for moving data in and out.  The picture below labels the most prominent components on the RPi&amp;nbsp;board.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/raspberry-pi/#main" rel="attachment wp-att-870"&gt;
    &lt;img class="aligncenter size-full wp-image-870" alt="raspberry-pi" src="/images/raspberry-pi.jpeg" width="545" height="454" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Of course, the &amp;#8220;lead actor&amp;#8221; on the RPi board is the Broadcom &lt;span class="caps"&gt;BCM2835&lt;/span&gt;, &lt;a href="http://en.wikipedia.org/wiki/System-on-a-chip"&gt;System on a Chip (SoC)&lt;/a&gt;.  Broadcom bills this chip as a &amp;#8220;multimedia applications processor for advanced mobile and embedded applications that require the highest levels of multimedia performance&amp;#8221;.  Maybe more importantly for the &lt;span class="caps"&gt;DIY&lt;/span&gt;/Hacker community is that all the &lt;a href="http://www.raspberrypi.org/archives/2221"&gt;firmware running on the chip is now open source&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is another big chip, that being the &lt;span class="caps"&gt;SMSC&lt;/span&gt; &lt;span class="caps"&gt;LAN9512&lt;/span&gt;/LAN9512i &lt;span class="caps"&gt;USB&lt;/span&gt;  Hub &amp;amp; Ethernet Controller.  This is the major work horse in getting data in/out of the RPi for &lt;span class="caps"&gt;USB&lt;/span&gt; peripheral devices and &lt;span class="caps"&gt;IP&lt;/span&gt;&amp;nbsp;networking.&lt;/p&gt;
&lt;p&gt;Now note that most of the board&amp;#8217;s other large components are for data I/O.  Specifically, the &lt;a href="http://en.wikipedia.org/wiki/Hdmi"&gt;&lt;span class="caps"&gt;HDMI&lt;/span&gt;&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/RCA_connector"&gt;&lt;span class="caps"&gt;RCA&lt;/span&gt; Video&lt;/a&gt;, and &lt;a href="http://en.wikipedia.org/wiki/Audio_jack"&gt;Audio Out&lt;/a&gt; (3.5mm jack) are output only (at least for general purpose data communication perspective), and therefore, not part of our discussion.  On the other hand, the &lt;a href="http://en.wikipedia.org/wiki/Usb"&gt;&lt;span class="caps"&gt;USB&lt;/span&gt;&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Ethernet"&gt;Ethernet&lt;/a&gt; ports, are powerful  and widely supported serial communication devices, but I will only lightly touch the &lt;span class="caps"&gt;USB&lt;/span&gt;. I want to focus on serial communication with simple/bare-bone devices, like an &lt;span class="caps"&gt;LCD&lt;/span&gt; 16x2 display, which generally are not interface via something as sophisticated at &lt;span class="caps"&gt;USB&lt;/span&gt; or Ethernet.  But the &lt;span class="caps"&gt;USB&lt;/span&gt; can be used to some for some types of device interfacing, so I will cover that as a final&amp;nbsp;topic.&lt;/p&gt;
&lt;p&gt;There are three other board components that concern themselves with data communications but will not be covered in this post:
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;JTAG&lt;/span&gt; Header: &lt;/strong&gt;The &lt;a href="http://www.xjtag.com/support-jtag/jtag-high-level-guide.php"&gt;&lt;span class="caps"&gt;JTAG&lt;/span&gt;&lt;/a&gt; Header is used as a debug port. Embedded systems developer relies on debuggers communicating with chips via the &lt;span class="caps"&gt;JTAG&lt;/span&gt; to perform operations like single stepping and break-pointing.  In time, I suspect people will find ways to exploit these pins for both good &amp;amp; evil, but for now, this is for the RPi hardware development community to&amp;nbsp;use.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;CSI&lt;/span&gt; Camera Connector: &lt;/strong&gt;The &lt;a href="http://www.mipi.org/specifications/camera-interface"&gt;Camera Serial Interface (&lt;span class="caps"&gt;CSI&lt;/span&gt;)&lt;/a&gt;  specification is a standard interface between a camera and a host processor for mobile device applications.  This will be where you&amp;#8217;ll connect cameras and video devices to the&amp;nbsp;RPi.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;span class="caps"&gt;DSI&lt;/span&gt; Display Connector: &lt;/strong&gt;The &lt;a href="http://www.mipi.org/specifications/display-interface"&gt;Display Serial Interface (&lt;span class="caps"&gt;DSI&lt;/span&gt;)&lt;/a&gt; is a specification  aimed at reducing the cost of display sub-systems in a mobile device. This is commonly targeted at &lt;span class="caps"&gt;LCD&lt;/span&gt; and similar display technologies. RPi may be able to interface to some of these.  Some graphical &lt;span class="caps"&gt;LCD&lt;/span&gt;/&lt;span class="caps"&gt;OLED&lt;/span&gt; displays might be attached to it.  &lt;span class="caps"&gt;DSI&lt;/span&gt; would seem like a good candidate for implementing my &lt;span class="caps"&gt;LCD&lt;/span&gt; display but there is a problem.  It appears the &lt;a href="http://www.chalk-elec.com/?p=1553"&gt;&lt;span class="caps"&gt;DSI&lt;/span&gt; isn&amp;#8217;t supported&lt;/a&gt; at this&amp;nbsp;time.&lt;/li&gt;
&lt;/ul&gt;
This leaves one remaining board input/output component standing, that be the &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;General Purpose Input/Output (&lt;span class="caps"&gt;GPIO&lt;/span&gt;)&lt;/a&gt;.  On some electronics boards, &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins have no special purpose defined, and some pins go unused by default.  The RPi developer has identified a handful of digital control lines and provided services on them for you to use.  By having these available can save you the hassle of having to arrange additional circuitry to provide them or implement functionality in&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Raspberry Pi&amp;#8217;s &lt;span class="caps"&gt;GPIO&lt;/span&gt; as a Data Bus&lt;/b&gt;
The first thing to get your head around, is how is data moved around the RPi, or in any general purpose computer.  In the most general sense in electronics, a bus or data bus is used to move data words of any type from one place to another. Computing is based on data words made up of collections of data bits. These “words” can contain as few as four data bits and often much&amp;nbsp;larger.&lt;/p&gt;
&lt;p&gt;The task of a bus designer is to devise circuitry that passes these data words from one circuit to another.  These words can be communicated &lt;a href="http://en.wikipedia.org/wiki/Serial_communication"&gt;serially&lt;/a&gt;  (i.e. &lt;a href="http://www.eeherald.com/section/design-guide/esmod7.html"&gt;serial communications&lt;/a&gt;) or in &lt;a href="http://en.wikipedia.org/wiki/Parallel_communication"&gt;parallel&lt;/a&gt;.
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Serial Bus:&lt;/strong&gt; The least expensive method in terms of wire cost is to send the bits one at a time over a single pair of wires. This is called serial data transmission.  Data words start as sets of bits that exist in parallel. In order to ship these words on a serial basis they must be converted to a serial stream of bits at the transmit end and then reconverted to a parallel word at the receive end. The common name for the circuitry that does this conversion is a &lt;a href="http://www.eetimes.com/design/analog-design/4207765/The-basics-of-SerDes--serializers-deserializers--for-interfacing"&gt;SerDes&lt;/a&gt; circuit which stands for serializer/deserializer. Integrated circuits are more expensive when they have more pins. To reduce the number of pins in a package, many ICs use a serial bus to transfer data when speed is not important. Some examples of such low-cost serial buses include &lt;a href="http://en.wikipedia.org/wiki/Serial_Peripheral_Interface"&gt;Serial Peripheral Interface (&lt;span class="caps"&gt;SPI&lt;/span&gt;)&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/I%C2%B2C"&gt;Inter-Integrated Circuit&lt;b&gt; &lt;/b&gt;(I²C)&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/UNI/O"&gt;&lt;span class="caps"&gt;UNI&lt;/span&gt;/O&lt;/a&gt;, and &lt;a href="http://en.wikipedia.org/wiki/1-Wire"&gt;1-Wire&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Parallel Bus:&lt;/strong&gt; At some point, it is more cost effective to add a wire for each bit in the word and send it in parallel on a data bus. Parallel buses have a limited data rate and distance at which they can be reliably run (more so than a serial bus).  Some widely used parallel bus standards are &lt;a href="http://en.wikipedia.org/wiki/Parallel_Bus_Interface"&gt;Parallel Bus Interface&lt;/a&gt; (&lt;span class="caps"&gt;PBI&lt;/span&gt;), &lt;a href="http://en.wikipedia.org/wiki/Conventional_PCI"&gt;Peripheral Component Interface&lt;/a&gt; (&lt;span class="caps"&gt;PCI&lt;/span&gt;), &lt;a href="http://en.wikipedia.org/wiki/Small_Computer_Systems_Interface"&gt;Small Computer Systems Interface&lt;/a&gt; (&lt;span class="caps"&gt;SCSI&lt;/span&gt;), the &lt;a href="http://en.wikipedia.org/wiki/VMEbus"&gt;VMEbus&lt;/a&gt; used in instrumentation, the &lt;a href="http://en.wikipedia.org/wiki/RDRAM"&gt;Rambus&lt;/a&gt; interface used in memories, and&amp;nbsp;others.&lt;/li&gt;
&lt;/ul&gt;
As the name implies, &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins can be configured through software  to provide some specific function or purpose within the &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;hardware device design&lt;/a&gt;.  The &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins connect directly into the core of the processor, and the Raspberry Pi developers implemented several &lt;a href="http://elinux.org/RPi_BCM2835_GPIOs"&gt;alternate functions&lt;/a&gt; for the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins.  Several are desirable because of the multiple standards and types of devices you may wish to interface.  On boot-up,  the RPi board &lt;span class="caps"&gt;GPIO&lt;/span&gt; is in alternate function state &amp;#8220;&lt;span class="caps"&gt;ALT0&lt;/span&gt;&amp;#8221; and will support &lt;span class="caps"&gt;I2C&lt;/span&gt;, &lt;span class="caps"&gt;SPI&lt;/span&gt;, and &lt;span class="caps"&gt;UART&lt;/span&gt;.  This is shown below:
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/raspberry-pi-rev-1-gpio-pin-out-2/#main" rel="attachment wp-att-885"&gt;
        &lt;img class="aligncenter  wp-image-885" alt="Raspberry Pi (Rev 1) GPIO Pin Out" src="/images/raspberry-pi-rev-1-gpio-pin-out1.jpg" width="424" height="474" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
It can be confusing to call the RPi&amp;#8217;s whole 26 pin array &lt;span class="caps"&gt;GPIO&lt;/span&gt; and also some specific pins &lt;span class="caps"&gt;GPIO&lt;/span&gt;.   In reality, all the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins can be reconfigured to provide alternate functions. &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While &lt;span class="caps"&gt;PCM&lt;/span&gt; isn&amp;#8217;t a topic for this posting, in the figure above, you&amp;#8217;ll also see references to &lt;span class="caps"&gt;PCM&lt;/span&gt; on pins 18 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; 21.  &lt;span class="caps"&gt;PCM&lt;/span&gt; stands for &lt;a href="http://en.wikipedia.org/wiki/Pulse-code_modulation"&gt;Pulse-code modulation&lt;/a&gt; and is s a method used to digitally represent analog signals.  It is often used to control light intensity or motors.  RPi&amp;#8217;s native &lt;span class="caps"&gt;PCM&lt;/span&gt; capabilities are not well documented but it appears that people have has some success.  Generally, to do anything useful, you need multiple &lt;span class="caps"&gt;PCM&lt;/span&gt; channels so people have resorted to adding &lt;a href="http://learn.adafruit.com/adafruit-16-channel-servo-driver-with-raspberry-pi/overview"&gt;hardware&lt;/a&gt; or &lt;a href="https://projects.drogon.net/software-pwm-on-the-raspberry-pi/"&gt;software&lt;/a&gt; to get the desired functionality from the RPi.  My guess is these RPi pins don&amp;#8217;t have much of a future.
&lt;h2&gt;&lt;span class="caps"&gt;I2C&lt;/span&gt;, &lt;span class="caps"&gt;SPI&lt;/span&gt;, &lt;span class="caps"&gt;UART&lt;/span&gt; &amp;#8230; Say&amp;nbsp;what?&lt;/h2&gt;
Much has been lightly covered so far, including terms like &lt;span class="caps"&gt;I2C&lt;/span&gt;, &lt;span class="caps"&gt;SPI&lt;/span&gt;, and &lt;span class="caps"&gt;UART&lt;/span&gt;.  So what is the significance?  Well, &lt;span class="caps"&gt;I2C&lt;/span&gt;, &lt;span class="caps"&gt;SPI&lt;/span&gt;, and &lt;span class="caps"&gt;UART&lt;/span&gt; are the heart of our quest to understand RPi&amp;#8217;s serial communications capability. Via their exposure on the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins, these capabilities are what can be used to integrate things like &lt;span class="caps"&gt;LCD&lt;/span&gt; displays to the RPi.  Now lets dive deeper into each one of them.
&lt;h2&gt;Universal Asynchronous Receiver/Transmitter (&lt;span class="caps"&gt;UART&lt;/span&gt;)&lt;/h2&gt;
The &lt;a href="http://www.lammertbies.nl/comm/info/serial-uart.html"&gt;Universal Asynchronous Receiver/Transmitter (&lt;span class="caps"&gt;UART&lt;/span&gt;)&lt;/a&gt; takes bytes of data and transmits the individual bits in a sequential fashion. The device changes processor&amp;#8217;s parallel information to serial data which can be sent on a communication line. A second &lt;span class="caps"&gt;UART&lt;/span&gt; (maybe on another processor)  can be used to receive the serial information. The &lt;span class="caps"&gt;UART&lt;/span&gt; performs all the tasks, timing, parity checking, etc. needed for the communication. The only extra devices attached are line driver chips capable of transforming the &lt;a href="http://en.wikipedia.org/wiki/Transistor%E2%80%93transistor_logic"&gt;&lt;span class="caps"&gt;TTL&lt;/span&gt;&lt;/a&gt; level signals (0/5 volts) to line voltages (on &lt;span class="caps"&gt;RS&lt;/span&gt;-232 line this could be as +/- 25 volts) and vice&amp;nbsp;versa.&lt;/p&gt;
&lt;p&gt;Each &lt;span class="caps"&gt;UART&lt;/span&gt; contains a &lt;a title="Shift register" href="http://en.wikipedia.org/wiki/Shift_register"&gt;shift register&lt;/a&gt;, which is the fundamental method of conversion between serial and parallel forms. Serial transmission of digital information (bits) through a single wire or other medium is much more cost effective than parallel transmission through multiple wires.  The UARTs transmit/receive one bit at a time at a specified data rate (i.e. 9600bps, 115,200bps, etc.). This method of serial communication is sometimes referred to as &lt;span class="caps"&gt;TTL&lt;/span&gt; serial&amp;nbsp;communications.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Asynchronous_communication"&gt;Asynchronous transmission&lt;/a&gt; allows data to be transmitted without the sender having to send a clock signal to the receiver. Instead, the sender and receiver must agree on timing parameters in advance and special bits are added to each word which are used to synchronize the sending and receiving units. When a word is given to the &lt;span class="caps"&gt;UART&lt;/span&gt; for Asynchronous transmissions, a bit called the &amp;#8220;Start Bit&amp;#8221; is added to the beginning of each word that is to be transmitted. The Start Bit is used to alert the receiver that a word of data is about to be sent, and to force the clock in the receiver into synchronization with the clock in the&amp;nbsp;transmitter.&lt;/p&gt;
&lt;p&gt;For a further description of synchronous and asynchronous line communications, check out this &lt;a href="http://sangoma.com/support/tutorials/sync_n_async.html"&gt;tutorial&lt;/a&gt;.
&lt;h2&gt;Raspberry Pi&amp;#8217;s Mini-&lt;span class="caps"&gt;UART&lt;/span&gt;&lt;/h2&gt;
&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Warning&lt;/span&gt;: Misleading information ahead - See Warren Gay&amp;#8217;s comments.&lt;/em&gt;
The Raspberry Pi actually has &lt;a href="http://lavalink.com/2012/04/more-on-raspberry-pi-serial-ports/"&gt;two UARTs&lt;/a&gt;. One &lt;span class="caps"&gt;UART&lt;/span&gt;  is part of the internal &lt;span class="caps"&gt;ARM&lt;/span&gt; architecture of the Broadcom &lt;span class="caps"&gt;BCM2835&lt;/span&gt; chip, in the core of the Raspberry Pi and not accessible externally.  The other &lt;span class="caps"&gt;UART&lt;/span&gt; is sometimes called the RPi&amp;#8217;s &amp;#8220;Serial Port&amp;#8221; (even thou the &lt;span class="caps"&gt;USB&lt;/span&gt; supports serial communications, and therefore a serial port).  The serial port being reference here is serviced by a &lt;span class="caps"&gt;UART&lt;/span&gt;, sometime refereed to as the  “&lt;a href="http://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-Peripherals.pdf"&gt;Mini-&lt;span class="caps"&gt;UART&lt;/span&gt;&lt;/a&gt;&amp;#8221; since it doesn&amp;#8217;t appear to be very rich in functionality.  It is basically be used as a console port for access to the Raspberry Pi.  The &lt;a href="http://www.techrepublic.com/blog/opensource/learn-to-use-a-serial-console-on-linux/157"&gt;serial console&lt;/a&gt; is a convenient way to interact with the Raspberry Pi for debugging or your network is down and it is the destination of console messages (including boot-up messages).  From the &lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;Raspberry Pi pinout&lt;/a&gt; and the &lt;a href="http://elinux.org/RPi_Serial_Connection"&gt;eLinux wiki&lt;/a&gt;, I can see that the serial port (aka Mini-&lt;span class="caps"&gt;UART&lt;/span&gt;) on the Pi is on &lt;span class="caps"&gt;GPIO&lt;/span&gt; Pin 14 (&lt;span class="caps"&gt;TX&lt;/span&gt;) and &lt;span class="caps"&gt;GPIO&lt;/span&gt; Pin 15 (&lt;span class="caps"&gt;RX&lt;/span&gt;):
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/mini-uart/#main" rel="attachment wp-att-888"&gt;
        &lt;img class="aligncenter  wp-image-888" alt="Mini-UART" src="/images/mini-uart.jpg" width="473" height="253" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
Since the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins give access to the Mini &lt;span class="caps"&gt;UART&lt;/span&gt;, you can establish a serial console, which can be used to log in to the Pi, and many other things.  However, normal console device communicate with -12V (logical “1″) and +12V (logical “0″) &lt;span class="caps"&gt;RS&lt;/span&gt;-232, which may just fry something in the 3.3V Pi. Even “&lt;span class="caps"&gt;TTL&lt;/span&gt; level” serial at 5V runs the same risk.  See &lt;a href="http://codeandlife.com/2012/07/01/raspberry-pi-serial-console-with-max3232cpe/" rel="nofollow"&gt;this tutorial&lt;/a&gt; for one example on how to build 3.3V to &lt;span class="caps"&gt;RS&lt;/span&gt;-232 levels converter with a &lt;span class="caps"&gt;MAX3232CPE&lt;/span&gt; and a few&amp;nbsp;passive components.&lt;/p&gt;
&lt;p&gt;You can reconfigure the RPi so that the Mini &lt;span class="caps"&gt;UART&lt;/span&gt; isn&amp;#8217;t acting as a serial console and use it for outer purposes (e.g. communicate with an attached Arduino or Xbee).  &lt;a href="http://www.irrational.net/2012/04/19/using-the-raspberry-pis-serial-port/"&gt;Using the Raspberry Pi’s serial port&lt;/a&gt; requires some Linux reconfiguration and the abandonment of the serial console, and potentially some level conversion, but it could be useful. The Mini-&lt;span class="caps"&gt;UART&lt;/span&gt; pins to provide access to Linux&amp;#8217;s &lt;a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=44&amp;amp;t=13957"&gt;/dev/ttyAMA0&lt;/a&gt; serial port.  To be able to use the serial port to connect and talk to other devices, the serial port console login needs to be disabled and the post &amp;#8220;&lt;a href="http://www.hobbytronics.co.uk/raspberry-pi-serial-port"&gt;Raspberry Pi and the Serial Port&lt;/a&gt;&amp;#8221; shows you&amp;nbsp;how.&lt;/p&gt;
&lt;p&gt;Again, keep in mind that &lt;span class="caps"&gt;RX&lt;/span&gt; and &lt;span class="caps"&gt;TX&lt;/span&gt; lines are available on the &lt;a title="RPi Low-level peripherals" href="http://elinux.org/RPi_Low-level_peripherals"&gt;GPIOs&lt;/a&gt; but operate at 3.3 volts. You&amp;#8217;ll need a board or cable to&lt;a href="http://www.adafruit.com/products/395"&gt; level convert&lt;/a&gt; 3.3 volt &lt;span class="caps"&gt;UART&lt;/span&gt; signals to connect with other devices (e.g. &lt;span class="caps"&gt;RS&lt;/span&gt;-232, &lt;span class="caps"&gt;USB&lt;/span&gt;).
&lt;h2&gt;Serial Peripheral Interface Bus (&lt;span class="caps"&gt;SPI&lt;/span&gt;) &amp;#8212; aka 4-Wire Serial&amp;nbsp;Bus&lt;/h2&gt;
The &lt;a href="http://www.eeherald.com/section/design-guide/esmod12.html"&gt;Serial Peripheral Interface Bus or &lt;span class="caps"&gt;SPI&lt;/span&gt;&lt;/a&gt; (pronounced as either S-P-I or spy) bus is a synchronous serial data link standard, named by Motorola, that operates in full duplex mode.  &lt;span class="caps"&gt;SPI&lt;/span&gt; is much simpler than &lt;span class="caps"&gt;I2C&lt;/span&gt;. Master and slave are linked by three data wires, usually called &lt;span class="caps"&gt;MISO&lt;/span&gt;, (Master in, Slave out), &lt;span class="caps"&gt;MOSI&lt;/span&gt; (Master out, Slave in), the &lt;span class="caps"&gt;SCLK&lt;/span&gt; clock line (sometimes called M-&lt;span class="caps"&gt;CLK&lt;/span&gt;), and an optional &lt;span class="caps"&gt;SS&lt;/span&gt; (Slave Select; sometimes known as the Chip Select &lt;span style="text-decoration:underline;"&gt;or&lt;/span&gt; &lt;span class="caps"&gt;CS&lt;/span&gt; line &lt;span style="text-decoration:underline;"&gt;or&lt;/span&gt; Chip Enable &lt;span style="text-decoration:underline;"&gt;or&lt;/span&gt; &lt;span class="caps"&gt;CE&lt;/span&gt; line) is the slave select or chip select line.  Its optional only if you have one slave, otherwise one or more &lt;span class="caps"&gt;SS&lt;/span&gt; lines are provided.  The Raspberry Pi has two &lt;a href="http://en.wikipedia.org/wiki/Chip_select"&gt;Slave Select&lt;/a&gt; lines: &lt;span class="caps"&gt;CE0&lt;/span&gt; and &lt;span class="caps"&gt;CE1&lt;/span&gt;.
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/spi-diagram-and-sescription/#main" rel="attachment wp-att-898"&gt;
        &lt;img class="aligncenter  wp-image-898" alt="SPI Diagram and Sescription" src="/images/spi-diagram-and-sescription.jpg" width="436" height="363" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
Usually the transfer sequence consist of driving the &lt;span class="caps"&gt;SS&lt;/span&gt; line low, sending X number of clock signals with the proper polarity and phase, then driving the &lt;span class="caps"&gt;SS&lt;/span&gt; line high to end the communication. As the clock signals are generated, data is transferred in both directions, therefore in a “transmit only” system the received bytes have to be discarded and in a “receive only” system a dummy byte has to be&amp;nbsp;transmitted.&lt;/p&gt;
&lt;p&gt;Many &lt;span class="caps"&gt;SPI&lt;/span&gt;-enabled ICs and Microcontrollers can cope with data rates of over 10MHz, so transfer is much faster than with &lt;span class="caps"&gt;I2C&lt;/span&gt;. Since it is &lt;a href="http://www.fiberoptics4sale.com/wordpress/what-is-synchronous-transmission-and-asynchronous-transmission/"&gt;synchronous communications&lt;/a&gt;, it is not limited to 8-bit words so you can send any message sizes with arbitrary content and purpose. The &lt;span class="caps"&gt;SPI&lt;/span&gt; interface does not require pull-up resistors, which translates to lower power consumption. The downside is that &lt;span class="caps"&gt;SPI&lt;/span&gt; normally has no addressing capability; instead, devices are selected by means of a &lt;span class="caps"&gt;SS&lt;/span&gt; signal which the master can use to enable one slave out of several connected to the &lt;span class="caps"&gt;SPI&lt;/span&gt; bus. If more than one slave exists, one chip select line is required per device, which can use precious &lt;span class="caps"&gt;GPIO&lt;/span&gt; lines on the Master.
&lt;h2&gt;Inter-Integrated Circuit (&lt;span class="caps"&gt;I2C&lt;/span&gt;) &amp;#8212; aka 2-Wire Serial&amp;nbsp;Bus&lt;/h2&gt;
&lt;a href="http://www.eeherald.com/section/design-guide/esmod11.html"&gt;Inter-Integrated Circuit or &lt;span class="caps"&gt;I2C&lt;/span&gt;&lt;/a&gt; (pronounced as either I-squared-C or I-2-C) is generically referred to as a &amp;#8220;two-wire interface&amp;#8221;.  It&amp;#8217;s a multi-master serial single-ended computer bus invented by Philips that is used to attach low-speed peripherals to a motherboard, embedded system, cellphone, or other electronic&amp;nbsp;device.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;I2C&lt;/span&gt; can be used to connect up to 127 nodes via a bus has two data wires, called &lt;span class="caps"&gt;SCL&lt;/span&gt; and &lt;span class="caps"&gt;SDA&lt;/span&gt;.  &lt;span class="caps"&gt;SCL&lt;/span&gt; is the clock line. It is used to synchronize all data transfers over the &lt;span class="caps"&gt;I2C&lt;/span&gt; bus. &lt;span class="caps"&gt;SDA&lt;/span&gt; is the data line. Of course, there is a third wire being ground. There may also be a 5 volt wire to distribute power to the devices. Both &lt;span class="caps"&gt;SCL&lt;/span&gt; and &lt;span class="caps"&gt;SDA&lt;/span&gt; lines are &amp;#8220;open drain&amp;#8221; drivers. What this means is that the chip can drive its output low, but it cannot drive it high.  For the line to be able to go high you must provide pull-up resistors to the 5v supply. There should be a resistor from the &lt;span class="caps"&gt;SCL&lt;/span&gt; line to the 5v line and another from the &lt;span class="caps"&gt;SDA&lt;/span&gt; line to the 5v line. The value of the resistors is not critical.  Anything from 1800 ohms to 47K ohms used (1.8K, 47K and 10K are common values). You only need one set of pull-up resistors for the whole &lt;span class="caps"&gt;I2C&lt;/span&gt; bus, not for each device, as illustrated below:
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/i2c-diagram-and-description-2/#main" rel="attachment wp-att-906"&gt;
    &lt;img class="aligncenter  wp-image-906" alt="I2C Diagram and Description" src="/images/i2c-diagram-and-description1.jpg" width="436" height="293" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
In theory the &lt;span class="caps"&gt;I2C&lt;/span&gt; bus can support multiple masters, but most micro-controllers can’t. A master is usually a microcontroller, although it doesn’t have to be. Slaves can be ICs or microcontrollers.  When the master wishes to communicate with a slave it sends a series of pulses down the &lt;span class="caps"&gt;SDA&lt;/span&gt; and &lt;span class="caps"&gt;SCL&lt;/span&gt; lines. The data that is sent includes an address that identifies the slave with which the master needs to interact. Addresses take 7 bits out of a data byte; the remaining bit specifies whether the master wishes to read (get data from a slave) or write (send data to a&amp;nbsp;slave).&lt;/p&gt;
&lt;p&gt;Some devices have an address that is entirely fixed by the manufacturer; others can be configured to take one of a range of possible addresses. When a micro-controller is used as a slave it is normally possible to configure its address by software, and for that address to take on any of the 127 possible values.  The address byte may be followed by one or more byes of data, which may go from master to slave or from slave to&amp;nbsp;master.&lt;/p&gt;
&lt;p&gt;When data is being sent on the &lt;span class="caps"&gt;SDA&lt;/span&gt; line, clock pulses are sent on the &lt;span class="caps"&gt;SCL&lt;/span&gt; line to keep master and slave synchronised. Since the data is sent one bit at a time, the data transfer rate is one eighth of the clock rate. The original standard specified a standard clock rate of 100KHz, and most &lt;span class="caps"&gt;I2C&lt;/span&gt; chips and micro-controllers can support this. Later updates to the standard introduced a fast speed of 400KHz and a high speed of 1.7 or 3.4 MHz.  The Arduino and Raspberry Pi can support standard and fast&amp;nbsp;speeds.&lt;/p&gt;
&lt;p&gt;The fast rate corresponds to a data transfer rate of 50K bytes/sec which is too slow for some control applications. One option in that case is to use &lt;span class="caps"&gt;SPI&lt;/span&gt; instead of &lt;span class="caps"&gt;I2C&lt;/span&gt;.
&lt;h2&gt;1-Wire &amp;#8212; aka&amp;nbsp;1-Wire Serial Bus&lt;/h2&gt;
On a &lt;a href="http://www.maximintegrated.com/products/1-wire/flash/overview/index.cfm"&gt;1-Wire &lt;/a&gt;bus (sometime refered to as a  &amp;#8221;MicroLan&amp;#8221;), a single master device communicates with one or more 1-Wire slave devices over a single data line, which can also be used to provide power to the slave devices. Devices drawing power from the 1-wire bus are said to be operating inparasitic power mode.  When operating in parasite power mode, only two wires are required: one data wire, and ground. At the master, a 4.7k pull-up resistor must be connected to the 1-wire bus. With an external supply, three wires are required: the bus wire, ground, and power. The 4.7k pull-up resistor is still required on the bus wire.
&lt;p style="text-align:center;"&gt;
    &lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/1-wire-diagram-and-description/#main" rel="attachment wp-att-907"&gt;
        &lt;img class="aligncenter  wp-image-907" alt="1-Wire Diagram and Description" src="/images/1-wire-diagram-and-description.jpg" width="436" height="211" /&gt;
    &lt;/a&gt;
&lt;/p&gt;
Each 1-Wire device contains a unique 64-bit  code, consisting of an 8-bit family code, a 48-bit serial number, and an 8-bit &lt;span class="caps"&gt;CRC&lt;/span&gt;. Before sending a command to a slave device, the master must first select that device using its code.
&lt;h2&gt;How do you use &lt;span class="caps"&gt;I2C&lt;/span&gt;, &lt;span class="caps"&gt;SPI&lt;/span&gt;, &lt;span class="caps"&gt;UART&lt;/span&gt;, or 1-Wire on the Raspberry&amp;nbsp;Pi?&lt;/h2&gt;
Now that we know the what &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; why for serial communications options on the Raspberry Pi, how do we use them?  This topic deserves technical details and examples but this post has already run too long.  I&amp;#8217;m likely to do some specific implementation in the future, but for now I&amp;#8217;ll reference some sources of information on the&amp;nbsp;web.&lt;/p&gt;
&lt;p&gt;First, lets be clear about the RPi software distribution I&amp;#8217;m using, since not all will be supporting all these serial communications options.  I&amp;#8217;m using Adafruit&amp;#8217;s &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-2"&gt;Occidentalis&lt;/a&gt; distribution (based on &amp;#8220;Wheezy&amp;#8221;) which comes with hardware &lt;span class="caps"&gt;SPI&lt;/span&gt;, &lt;span class="caps"&gt;I2C&lt;/span&gt;, and 1-wire support. In the Occidentalis distribution, Adafruit has included in the Linux &lt;a href="http://en.wikipedia.org/wiki/Kernel_(computing)#Unix"&gt;kernel&lt;/a&gt; the needed drivers. &lt;span class="caps"&gt;SPI&lt;/span&gt; and &lt;span class="caps"&gt;I2C&lt;/span&gt; has been implement on the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins as outline above.  RPi doesn&amp;#8217;t have a predetermined &lt;span class="caps"&gt;GPIO&lt;/span&gt; pin assignment for 1-Wire, but Adafruit choose &lt;span class="caps"&gt;GPIO&lt;/span&gt; pin 4 for 1-Wire.  Note that this unassigned &lt;span class="caps"&gt;GPCLK0&lt;/span&gt; (General Purpose Clock Voltage)&amp;nbsp;function.&lt;/p&gt;
&lt;p&gt;Given you have the Occidentalis distribution, you can check on the installation of &lt;span class="caps"&gt;I2C&lt;/span&gt;, &lt;span class="caps"&gt;SPI&lt;/span&gt;, and 1-Wire via the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;To validate &lt;span class="caps"&gt;I2C&lt;/span&gt;, connect any &lt;span class="caps"&gt;I2C&lt;/span&gt; device to power, ground, &lt;span class="caps"&gt;SDA&lt;/span&gt; and &lt;span class="caps"&gt;SCL&lt;/span&gt;. Then run  &lt;code&gt;sudo i2cdetect -y 0&lt;/code&gt; to detect which addresses are on the bus. &lt;a href="http://linux.die.net/man/8/i2cdetect"&gt;&lt;code&gt;i2cdetect&lt;/code&gt;&lt;/a&gt; is a program to scan an &lt;span class="caps"&gt;I2C&lt;/span&gt; bus for devices.  Also, you can list the &lt;span class="caps"&gt;I2C&lt;/span&gt; device drivers via the command &lt;code&gt;ls /dev/&lt;em&gt;i2c&lt;/em&gt;&lt;/code&gt;.  This illustrates that RPi supports two &lt;span class="caps"&gt;I2C&lt;/span&gt; buses, 0 and&amp;nbsp;1.&lt;/li&gt;
    &lt;li&gt;To validate &lt;span class="caps"&gt;SPI&lt;/span&gt;, the command &lt;code&gt;ls /dev/&lt;em&gt;spi&lt;/em&gt;&lt;/code&gt; will list two &lt;span class="caps"&gt;SPI&lt;/span&gt; devices, one each for the 0 &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; 1 &lt;span class="caps"&gt;SS&lt;/span&gt; lines.  To go further, use the  &lt;a href="http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=blob_plain;f=Documentation/spi/spidev_test.c"&gt;spidev_test.c&lt;/a&gt; tool described in &lt;a href="http://www.brianhensley.net/2012/07/getting-spi-working-on-raspberry-pi.html"&gt;Getting &lt;span class="caps"&gt;SPI&lt;/span&gt; working on the Raspberry Pi&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Occidentalis implementation of 1-Wire isn&amp;#8217;t done via a kernel installed driver but &lt;a href="http://en.wikipedia.org/wiki/Bit_banging"&gt;bitbanged&lt;/a&gt;.  Adafruit states that the implementation is  &amp;#8221;&lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#one-wire-support"&gt;flakier than &lt;span class="caps"&gt;SPI&lt;/span&gt; or &lt;span class="caps"&gt;I2C&lt;/span&gt;&lt;/a&gt;&amp;#8221; and they don&amp;#8217;t have any tutorials.  Maybe 1-Wire should be shelved for&amp;nbsp;now.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
There are some good RPi &lt;span class="caps"&gt;SPI&lt;/span&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; &lt;span class="caps"&gt;I2C&lt;/span&gt; tutorials on &lt;a href="http://learn.adafruit.com/"&gt;Adafruits&lt;/a&gt;.  There are others on personal blogs but generally they are scares right now.
&lt;h2&gt;Attach Peripherals to the Raspberry&amp;nbsp;Pi&lt;/h2&gt;
Now that we know the in&amp;#8217;s &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; out&amp;#8217;s of serial communications with the RPi, what can be done to make the physical aspects of interfacing the board easier.  Dealing with the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins on the board can be a pain.  One solution is the &lt;a href="http://adafruit.com/products/914"&gt;Pi Cobbler&lt;/a&gt; which plug the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins into a solderless breadboard via a ribbon cable.  My personal favorite is the &lt;a href="http://picru.st/"&gt;Pi Crust&lt;/a&gt;.  In this case, the confusing layout of  &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins are much more clearly organized and supplied with more useful female headers.  A whole development environment will be supplied via &lt;a href="http://piregistration.element14.com/signup.html?isRedirect=true"&gt;PiFace Digital and Gertboard&lt;/a&gt; &amp;#8230; when they become available.
&lt;h2&gt;The &lt;span class="caps"&gt;USB&lt;/span&gt; Serial&amp;nbsp;Ports&lt;/h2&gt;
As promised, the final topic is the &lt;span class="caps"&gt;USB&lt;/span&gt; port. The &lt;span class="caps"&gt;USB&lt;/span&gt; can be used for some types of device interfacing, particularly if you make it look like a simple serial port to the device.  The &lt;a href="http://www.tldp.org/HOWTO/Serial-HOWTO-1.html"&gt;conventional serial port&lt;/a&gt; (&lt;span style="text-decoration:underline;"&gt;not&lt;/span&gt; the newer &lt;span class="caps"&gt;USB&lt;/span&gt; port) is a very old I/O (Input/Output) port. It&amp;#8217;s slow compared to newer &lt;a href="http://www.necdisplay.com/Documents/WhitePapers/USB.pdf"&gt;Universal Serial Bus (&lt;span class="caps"&gt;USB&lt;/span&gt;)&lt;/a&gt; serial devices, but conventional serial ports are still in use and many devices you’ll hook to your RPi will want to use them.  Until around 2006, most new desktop &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8217;s had one but has been largely replaced by the &lt;span class="caps"&gt;USB&lt;/span&gt;. Conventional serial ports are still widely used in embedded systems, but the RPi choose to use the &lt;span class="caps"&gt;USB&lt;/span&gt;.  Never the less, it is possible to put a conventional serial port device on the &lt;span class="caps"&gt;USB&lt;/span&gt; bus by using a Serial to &lt;span class="caps"&gt;USB&lt;/span&gt; Adapter &lt;a href="http://www.adafruit.com/products/284"&gt;hardware&lt;/a&gt; or &lt;a href="http://www.adafruit.com/products/954"&gt;cables&lt;/a&gt;.  This could be necessary for some of the hardware hacking you’ll do with an RPi.  (For example, I’ll be posting a project where I’ll use the RPi’s &lt;span class="caps"&gt;USB&lt;/span&gt; to talk to a XBee&amp;nbsp;radio.)&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;USB&lt;/span&gt; does synchronous communications (synchronous means that bytes are sent out at a constant rate one after another in step with a clock signal tick) and transmits in special packets like a network. Conventional serial ports are typically asynchronous (i.e. &amp;#8220;not synchronous&amp;#8221;). Just like a network, &lt;span class="caps"&gt;USB&lt;/span&gt; can have several devices physically attached to it, including serial ports. Each device on it gets a time-slice of exclusive use for a short time. A device can also be guaranteed the use of the bus at fixed intervals. One device can monopolize it if no other device wants to use&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Under Linux, each and every hardware device, including &lt;span class="caps"&gt;USB&lt;/span&gt; ports, are treated as a file and call a &lt;a href="http://en.wikipedia.org/wiki/Device_file"&gt;device file&lt;/a&gt;.  A device file allows a user to access hardware devices, but shields the users from the technical details about the hardware. (This is unlike what we’ll see for the RPi &lt;span class="caps"&gt;GPIO&lt;/span&gt; interfaces where hardware level technical details must be address directly.) Under Linux, a conventional serial port will typically have a device file such as &lt;code&gt;/dev/ttyS0, /dev/ttyS1,&lt;/code&gt; etc. but the &lt;span class="caps"&gt;USB&lt;/span&gt; serial ports will appear as &lt;code&gt;/dev/ttyUSB0, /dev/ttyUSB1,&lt;/code&gt; etc.  When your device is plugged in, Linux assigns the filename as it sees fit and isn’t always predicable (&lt;a href="http://hintshop.ludvig.co.nz/show/persistent-names-usb-serial-devices/"&gt;it doesn’t have to be this way&lt;/a&gt;). If you need to know what device file your serial device is connected too (and your software often needs to know), using a combination of the commands &lt;code&gt;lsusb&lt;/code&gt;, &lt;code&gt;dmesg&lt;/code&gt;, and &lt;code&gt;grep&lt;/code&gt;, plus some basic insight, will often do the&amp;nbsp;trick.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/s2-sysinfo-hardware-lsusb.html"&gt;&lt;code&gt;lsusb&lt;/code&gt;&lt;/a&gt; command can show you the hubs connected to your system, but you won&amp;#8217;t necessarily see any entries in /dev until you plug something into it, and what that entry may be will be dependent upon the type of device you are plugging in.  The system doesn&amp;#8217;t recognize new &lt;span class="caps"&gt;USB&lt;/span&gt; devices right away. It can take from a couple of seconds to as much as a minute.  If I plug my &lt;a href="http://www.adafruit.com/products/70"&gt;Serial to &lt;span class="caps"&gt;USB&lt;/span&gt; Adapter cable&lt;/a&gt;, using the &lt;a href="http://linux.die.net/man/8/lsusb"&gt;&lt;code&gt;lsusb&lt;/code&gt;&lt;/a&gt; command I can identify the cables .  Now using &lt;code&gt;dmesg&lt;/code&gt;, and grepping for the &amp;#8220;Manufacturer&amp;#8221;, I can get the &amp;#8220;&lt;span class="caps"&gt;FTDI&lt;/span&gt;&amp;#8221;.  Now I &lt;code&gt;grep&lt;/code&gt; again for &amp;#8220;&lt;span class="caps"&gt;FTDI&lt;/span&gt;&amp;#8221; to get the device file name &amp;#8220;&lt;code&gt;ttyUSB0&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;.  This is all illustrated&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.wordpress.com/2012/12/05/drive-a-16x2-lcd-with-the-raspberry-pi/lsusb-and-dmesg-2/" rel="attachment wp-att-1063"&gt;
    &lt;img class="aligncenter size-full wp-image-1063" alt="lsusb and dmesg" src="http://jeffskinnerbox.files.wordpress.com/2012/12/lsusb-and-dmesg1.jpg" width="500" height="242" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Wed, 05 Dec 2012 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2012-12-05:posts/2012/Dec/05/raspberry-pi-serial-communication-what-why-and-a-touch-of-how/</guid><category>Raspberry Pi</category></item><item><title>Speech Synthesis on the Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2012/Nov/26/speech-synthesis-on-the-raspberry-pi/</link><description>&lt;p&gt;Now that I can get &lt;a href="http://jeffskinnerbox.wordpress.com/2012/11/15/getting-audio-out-working-on-the-raspberry-pi/"&gt;sound&lt;/a&gt; out of my Raspberry Pi (RPi), the next logical step for me is speech synthesis &amp;#8230; Right?  I foresee my RPi being used as a controller/gateway for other devices (e.g. RPi or Arduino).  In that capacity, I want the RPi to provide status via email, &lt;span class="caps"&gt;SMS&lt;/span&gt;, web updates, and so why not speech?  Therefore, I&amp;#8217;m looking for a good text-to-speech tool that will work nicely with my&amp;nbsp;RPi.&lt;/p&gt;
&lt;p&gt;The two dominate free speech synthesis tools for Linux are &lt;a href="http://espeak.sourceforge.net/"&gt;eSpeak&lt;/a&gt; and &lt;a href="http://www.cstr.ed.ac.uk/projects/festival/download.html"&gt;Festival&lt;/a&gt; (which has a light-weight version called Flite). Both tools appear very popular, well supported, and produce quality voices.  I sensed that Festival is more feature reach and configurable, so I went with&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;To install Festival and Flite (which doesn&amp;#8217;t require Festival to be installed), use the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install festival
&amp;lt;code&amp;gt;sudo apt-get install flite
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Festival&lt;/h2&gt;

&lt;p&gt;To test out the installation, check out &lt;a href="http://linux.die.net/man/1/festival"&gt;Festival&amp;#8217;s man page&lt;/a&gt;, and execute the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;echo &amp;quot;Why are you in front of the computer?&amp;quot; | festival --tts
date &amp;#39;+%A, %B %e, %Y&amp;#39; | festival --tts
festival --tts Gettysburg_Address.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Text, &lt;span class="caps"&gt;WAV&lt;/span&gt;, Mp3&amp;nbsp;Utilities&lt;/h2&gt;

&lt;p&gt;Festival also supplies a tool for converting text files into &lt;span class="caps"&gt;WAV&lt;/span&gt; files.  This tool, called &lt;a href="http://manpages.ubuntu.com/manpages/hardy/man1/text2wave.1.html"&gt;&lt;code&gt;text2wave&lt;/code&gt;&lt;/a&gt; can be executes as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;text2wave -o HAL.wav HAL.txt
aplay HAL.wav
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="caps"&gt;MP3&lt;/span&gt; files can be 5 to 10 times smaller than &lt;span class="caps"&gt;WAV&lt;/span&gt; files, so it might be nice to convert a &lt;span class="caps"&gt;WAV&lt;/span&gt; file to &lt;span class="caps"&gt;MP3&lt;/span&gt;.  You can do this via a tool called &lt;a href="http://linux.die.net/man/1/lame"&gt;&lt;code&gt;lame&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;lame HAL.wav HAL.mp3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/lame-example.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-847" title="lame example" alt="lame example" src="http://jeffskinnerbox.files.wordpress.com/2012/11/lame-example.jpg" width="545" height="311" /&gt;
&lt;/a&gt;
&lt;/center&gt;
&lt;h2&gt;Flite&lt;/h2&gt;
&lt;a href="http://manpages.ubuntu.com/manpages/hardy/man1/flite.1.html"&gt;Flite&lt;/a&gt; (festival-lite) is a small, fast run-time synthesis engine developed using Festival for small embedded machines. Taking a famous quote from &lt;a href="http://en.wikipedia.org/wiki/HAL_9000"&gt;&lt;span class="caps"&gt;HAL&lt;/span&gt;&lt;/a&gt;, the computer in the movie &amp;#8220;&lt;a href="http://en.wikipedia.org/wiki/2001:_A_Space_Odyssey_(film)"&gt;2001: A Space Odyssey&lt;/a&gt;&amp;#8221;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;flite &amp;quot;Look Dave, I can see you&amp;#39;re really upset about this. I honestly think you ought to sit down calmly, take a stress pill, and think things over.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Depending how the software was built for the package, you find that flite (and festival) has multiple voices. To find what voices where built in, use the&amp;nbsp;command&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;flite -lv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To play a specific voice from the list, use the &lt;code&gt;-voice&lt;/code&gt; parameter in the&amp;nbsp;command&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;flite -voice kal &amp;quot;I&amp;#39;m now speaking kal&amp;#39;s voice. By the way, please call me Dr. Hawking.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In my case, the default voice appears to be &amp;#8220;kal&amp;#8221;, which sounds somewhat like &lt;a href="http://www.newscientist.com/article/dn21323-the-man-who-saves-stephen-hawkings-voice.html"&gt;Stephen Hawking&lt;/a&gt;.  &amp;#8221;slt&amp;#8221; appears to be a female version of the &amp;#8220;kal&amp;#8221;&amp;nbsp;voice.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://manpages.ubuntu.com/manpages/hardy/man1/flite_time.1.html"&gt;&lt;code&gt;flite_time&lt;/code&gt;&lt;/a&gt; is a talking clock that can speak things like &amp;#8220;The time is now, exactly two, in the&amp;nbsp;afternoon.&amp;#8221;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;flite_time 14:00
flite_time `date +%H:%M`
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Documentation&lt;/h2&gt;

&lt;p&gt;The documentation for Festival and Flite isn&amp;#8217;t all that great but there does seem to be multiple sources.  Here is what I found most useful:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.cstr.ed.ac.uk/projects/festival/manual/festival_7.html"&gt;Quick&amp;nbsp;Start&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://digital.cs.usu.edu/~vkulyukin/vkweb/teaching/cs6890/festival.pdf"&gt;More&amp;nbsp;Complete&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;Gary Hall of &lt;a href="http://874.org.uk/"&gt;878.org.uk&lt;/a&gt; made me aware of another method of getting speech out of the Raspberry Pi.
His article &lt;a href="http://874.org.uk/speaking-weather-forecast-raspberry-pi.html"&gt;Getting your Raspberry Pi to speak the weather forecast&lt;/a&gt;
explains his very simple approach using Google Text to Speech service.
See&amp;nbsp;below&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;mplayer -ao alsa -really-quiet -noconsolecontrols &amp;quot;http://translate.google.com/translate_tts?tl=en&amp;amp;q=Look Dave, I can see you&amp;#39;re really upset about this.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some day, Google will rule the&amp;nbsp;world!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Mon, 26 Nov 2012 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2012-11-26:posts/2012/Nov/26/speech-synthesis-on-the-raspberry-pi/</guid><category>Raspberry Pi</category><category>Audio</category></item><item><title>Getting Audio Out Working on the Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2012/Nov/15/getting-audio-out-working-on-the-raspberry-pi/</link><description>&lt;p&gt;I want to deliver sound from my Raspberry Pi&amp;#8217;s (RPi) Audio Output 3.5mm jack.  I&amp;#8217;ll need to get audio drivers working on Audio Out, and to test it, I&amp;#8217;ll need some sound files and players.  I&amp;#8217;m choosing the &lt;a href="http://www.alsa-project.org/main/index.php/Main_Page"&gt;Advanced Linux Sound Architecture (&lt;span class="caps"&gt;ALSA&lt;/span&gt;)&lt;/a&gt; drivers because its widely supported and because &lt;a href="http://en.wikipedia.org/wiki/Advanced_Linux_Sound_Architecture"&gt;&lt;span class="caps"&gt;ALSA&lt;/span&gt;&lt;/a&gt; not only provides audio but  &lt;a href="http://en.wikipedia.org/wiki/Musical_Instrument_Digital_Interface"&gt;Musical Instrument Digital Interface (&lt;span class="caps"&gt;MIDI&lt;/span&gt;)&lt;/a&gt; functionality to Linux.   I&amp;#8217;ll also be using the popular command line &lt;span class="caps"&gt;MP3&lt;/span&gt; players, &lt;a href="http://linux.die.net/man/1/mpg321"&gt;mpg321&lt;/a&gt; and the &lt;span class="caps"&gt;WAV&lt;/span&gt; player that comes with &lt;span class="caps"&gt;ALSA&lt;/span&gt;, &lt;a href="http://linux.die.net/man/1/aplay"&gt;aplay&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get things going, I installed &lt;span class="caps"&gt;ALSA&lt;/span&gt;, a &lt;span class="caps"&gt;MP3&lt;/span&gt; tools, and a &lt;span class="caps"&gt;WAV&lt;/span&gt; to &lt;span class="caps"&gt;MP3&lt;/span&gt; conversion tool via the following&amp;nbsp;commands:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install alsa-utils
sudo apt-get install mpg321
sudo apt-get install lame
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Enabling the Sound&amp;nbsp;Module&lt;/h2&gt;

&lt;p&gt;Reboot the &lt;span class="caps"&gt;RP&lt;/span&gt; and when it comes back up, its time to load the Sound Drivers.  This will be done via loadable kernel module (&lt;span class="caps"&gt;LKM&lt;/span&gt;) which are object file  that contains code to extend the Linux kernel.  &lt;code&gt;lsmod&lt;/code&gt; is a command on Linux systems which prints the contents of the &lt;code&gt;/proc/modules&lt;/code&gt; file.  It shows which loadable kernel modules are currently loaded.  In my case, &lt;code&gt;lsmod&lt;/code&gt; gives&amp;nbsp;me:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/lsmod.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-706" title="lsmod" alt="lsmod" src="http://jeffskinnerbox.files.wordpress.com/2012/11/lsmod.jpg" width="545" height="284" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;snd-bcm2835&lt;/code&gt; module appears to be already installed. RPi has a Broadcom  &lt;a href="http://www.broadcom.com/products/BCM2835"&gt;&lt;span class="caps"&gt;BCM2835&lt;/span&gt;&lt;/a&gt; &lt;a href="http://www.androidauthority.com/how-it-works-systems-on-a-chip-soc-93587/"&gt;system on a chip (SoC)&lt;/a&gt; which is a High Definition 1080p Embedded Multimedia Applications Processor.  &lt;code&gt;snd-bcm2835&lt;/code&gt; is the sound driver.  If  &lt;code&gt;lsmod&lt;/code&gt; doesn&amp;#8217;t list the &lt;code&gt;snd-bcn2835&lt;/code&gt; module, then it can be installed via the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo modprobe snd-bcm2835
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Enabling Audio&amp;nbsp;Output&lt;/h2&gt;

&lt;p&gt;By default, the RPi audio output is set to automatically select the digital &lt;span class="caps"&gt;HDMI&lt;/span&gt; interface if its being used, otherwise the analog audio output. You can force it to use a specific interface via the sound mixer controls.  &lt;a href="http://linux.die.net/man/1/amixer"&gt;&lt;code&gt;amixer&lt;/code&gt;&lt;/a&gt; allows command-line control of the mixer for the &lt;span class="caps"&gt;ALSA&lt;/span&gt;&amp;nbsp;driver.&lt;/p&gt;
&lt;p&gt;You can force the RPi to use a specific interface using the command &lt;code&gt;amixer cset numid=3 N&lt;/code&gt; where the &lt;code&gt;N&lt;/code&gt; parameter means the following: 0=auto, 1=analog, 2=hdmi.  Therefore, to force the Raspberry Pi to use the analog&amp;nbsp;output:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;amixer cset numid=3 1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Sound&amp;nbsp;Check&lt;/h2&gt;

&lt;p&gt;With this done, you should be ready for a simple test.  Plug a speaker into the (RPi) Audio Output 3.5mm jack.  I used a simple battery powered&lt;a href="http://www.ihomeaudio.com/iHM60GX/"&gt; iHM60 iHome&lt;/a&gt; speaker.  The jack will not deliver much power, so the speaker needs to be&amp;nbsp;powered.&lt;/p&gt;
&lt;p&gt;To test the RPi audio, you can play a &lt;span class="caps"&gt;WAV&lt;/span&gt; file (&lt;a href="http://www.jahozafat.com/php/sounds/?id=gog&amp;amp;media=WAVS&amp;amp;type=Movies&amp;amp;movie=Full_Metal_Jacket&amp;amp;quote=numnuts.txt&amp;amp;file=numnuts.wav"&gt;download this&lt;/a&gt; &amp;#8230; excellent for user-error notification) with &lt;code&gt;&lt;a href="http://linux.die.net/man/1/aplay"&gt;aplay&lt;/a&gt;&lt;/code&gt;, &lt;a href="http://linux.die.net/man/1/mpg321"&gt;&lt;code&gt;mpg321&lt;/code&gt;&lt;/a&gt; for &lt;span class="caps"&gt;MP3&lt;/span&gt; files, or use the &lt;a href="http://linux.die.net/man/1/speaker-test"&gt;&lt;code&gt;speaker-test&lt;/code&gt;&lt;/a&gt; command if you don&amp;#8217;t have a &lt;span class="caps"&gt;WAV&lt;/span&gt;/&lt;span class="caps"&gt;MP3&lt;/span&gt;&amp;nbsp;file.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;aplay numnuts.wav
speaker-test -t sine -f 440 -c 2 -s 1
mpg321 &amp;quot;Mannish Boy.mp3&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;More on the &lt;span class="caps"&gt;ALSA&lt;/span&gt; Sound Drivers and&amp;nbsp;Utilities&lt;/h2&gt;

&lt;p&gt;While &lt;span class="caps"&gt;ALSA&lt;/span&gt; is a powerful tool, it documentation appears is very weak.  Also, it appears that the capabilities of &lt;span class="caps"&gt;ALSA&lt;/span&gt; drivers and utilities are very  dependent on the hardware used.  The best sources of documentation that I found include &lt;a href="http://www.alsa-project.org/main/index.php/Main_Page"&gt;Advanced Linux Sound Architecture (&lt;span class="caps"&gt;ALSA&lt;/span&gt;) project homepage&lt;/a&gt;,  &lt;a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture"&gt;archlinux Advanced Linux Sound Architecture&lt;/a&gt;, and &lt;a href="http://www.tldp.org/HOWTO/Alsa-sound.html"&gt;&lt;span class="caps"&gt;ALSA&lt;/span&gt;-sound-mini-&lt;span class="caps"&gt;HOWTO&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find useful information in the directory /proc, which is a &amp;#8220;virtual&amp;#8221; file system (meaning that it does not exist in real life, but merely is a mapping to various processes and tasks in your computer).
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;code&gt;/proc/modules&lt;/code&gt; gives information about loaded kernel modules.  The command &lt;code&gt;lsmod | grep snd&lt;/code&gt; will list modules relevant to the sound&amp;nbsp;system.&lt;/li&gt;
    &lt;li&gt;You can check the existence of a soundcard by looking  at &lt;code&gt;cat /proc/asound/cards&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The &lt;code&gt;amixer&lt;/code&gt; command can provide useful information (sometimes):
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;You can look at the mixer settings by typing &lt;code&gt;amixer&lt;/code&gt; without any arguments. This command lists the mixer settings of the various parts of the soundcard. The output from &lt;code&gt;amixer&lt;/code&gt; can greatly differ from card to card. Unfortunately  you can&amp;#8217;t find much documentation on how to interpret the&amp;nbsp;out.&lt;/li&gt;
    &lt;li&gt;The RPi doesn&amp;#8217;t have a &amp;#8220;Master&amp;#8221; control only &amp;#8220;&lt;span class="caps"&gt;PCM&lt;/span&gt;&amp;#8221;.  So commands like &lt;code&gt;amixer set Master...&lt;/code&gt; will not work.  You must use &lt;code&gt;amixer set PCM ...&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;You can mute /unmute the sound via these commands: &lt;code&gt;amixer set PCM mute&lt;/code&gt; and &lt;code&gt;amixer set PCM unmute&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;As of August 2012, there appears to be a &lt;a href="http://raspberrypi.stackexchange.com/questions/1268/alsa-volume-ignored-when-beginning-playback"&gt;known bug&lt;/a&gt; in RPi &lt;span class="caps"&gt;ALSA&lt;/span&gt; driver that ignores volume settings at the start of playback and always plays at max volume.  Therefore, commands like &lt;code&gt;amixer set PCM 50% unmute&lt;/code&gt; will &lt;span style="text-decoration:underline;"&gt;not&lt;/span&gt; set the volume to 50%, at least until this bug is fixed.  Maybe this isn&amp;#8217;t really a bug but a limitation of the hardware because there is a workaround for this &amp;#8230;. see&amp;nbsp;below.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Volume&amp;nbsp;Control&lt;/h2&gt;
The RPi built-in sound chips don&amp;#8217;t have a &amp;#8220;master volume&amp;#8221; control, and as a result, you must control the volume via software.  I guess the RPi views itself as a preamplifier (preamp) and volume controls would be supplied down stream.  &lt;span class="caps"&gt;ALSA&lt;/span&gt; provides a software volume control using the &lt;a title="Softvol" href="http://alsa.opensrc.org/Softvol"&gt;softvol&lt;/a&gt; plugin.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;/etc/asound.conf&lt;/code&gt; file is a configuration files for &lt;span class="caps"&gt;ALSA&lt;/span&gt; drivers (system-wide).  The main use of this configuration file is to add functionality. It allows you to create &amp;#8220;virtual devices&amp;#8221; that pre or post-process audio streams. Any properly written &lt;span class="caps"&gt;ALSA&lt;/span&gt; program can use these virtual devices as though they were normal devices.  My RPi  &lt;code&gt;/etc/asound.conf&lt;/code&gt; file looks like&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/orginal-asound-conf.jpg"&gt;
    &lt;img class="aligncenter size-full wp-image-746" title="orginal asound.conf" alt="asound conf" src="http://jeffskinnerbox.files.wordpress.com/2012/11/orginal-asound-conf.jpg" width="545" height="223" /&gt;
&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;For most changes to &lt;code&gt;/etc/asound.conf&lt;/code&gt; you will need to restart the sound server (ie. &lt;code&gt;sudo /etc/init.d/alsa-utils restart&lt;/code&gt;) for the changes to take&amp;nbsp;effect.&lt;/p&gt;
&lt;p&gt;I attempted to implement the software volume controls outline in a &lt;a href="http://www.gentoo-wiki.info/HOWTO_Softvol"&gt;softvol how-to&lt;/a&gt; that I found, but I couldn&amp;#8217;t get it to work.  I did some additional digging, and I found a solution buried within a python script for a &lt;a href="http://learn.adafruit.com/reading-a-analog-in-and-controlling-audio-volume-with-the-raspberry-pi/overview"&gt;Adafruit project&lt;/a&gt;.  The following works for controlling the volume (in this case, reducing the volume to 80% of maximum):
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;amixer cset numid=1 -- 80%&lt;/code&gt;&lt;/p&gt;
Note that you can use this command to change the volume while sound is being played an its effect takes place immediately.  Also, I noticed that once the volume has been adjusted, its effect remains even after a reboot.
&lt;h2&gt;&lt;span class="caps"&gt;WAV&lt;/span&gt; and &lt;span class="caps"&gt;MP3&lt;/span&gt;&amp;nbsp;Conversion&lt;/h2&gt;
The &lt;span class="caps"&gt;MP3&lt;/span&gt; player &lt;a href="http://linux.die.net/man/1/mpg321"&gt;&lt;code&gt;mpg321&lt;/code&gt;&lt;/a&gt; can convert &lt;span class="caps"&gt;MP3&lt;/span&gt; files to &lt;span class="caps"&gt;WAV&lt;/span&gt; files but the &lt;span class="caps"&gt;WAV&lt;/span&gt; player, &lt;a href="http://linux.die.net/man/1/aplay"&gt;&lt;code&gt;aplay&lt;/code&gt;&lt;/a&gt;, can not do a conversion.  To make a &lt;span class="caps"&gt;MP3&lt;/span&gt; file from a &lt;span class="caps"&gt;WAV&lt;/span&gt; file, you&amp;#8217;ll need the tool &lt;a href="http://linux.die.net/man/1/lame"&gt;&lt;code&gt;lame&lt;/code&gt;&lt;/a&gt;.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;To convert from &lt;span class="caps"&gt;WAV&lt;/span&gt; to &lt;span class="caps"&gt;MP3&lt;/span&gt;: &lt;code&gt;lame input.wav output.mp3&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;To convert from &lt;span class="caps"&gt;MP3&lt;/span&gt; to &lt;span class="caps"&gt;WAV&lt;/span&gt;:  &lt;code&gt;mpg321 -w output.wav input.mp3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Bottomeline&lt;/h2&gt;
While you can get &lt;span class="caps"&gt;ALSA&lt;/span&gt; working on the Raspberry Pi, it appears only partly supported, maybe buggy, and poorly documented.  If you just want to simply get sound out of the device (like I do), you&amp;#8217;ll be fine.  But if you have some desire to do some sound processing with &lt;span class="caps"&gt;ALSA&lt;/span&gt;, your likely to be very frustrated.
&lt;h2&gt;Epilogue&lt;/h2&gt;
This specific post has gotten about 25% of all the viewings of my blog. I&amp;#8217;m not sure why this is the case but I speculate that there are many people tying to make RPi into a Media Player and looking for answers to their technical&amp;nbsp;problems.&lt;/p&gt;
&lt;p&gt;At this point in time, others have done some additional postings and they are more instructive than my post. You should check out:
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://blog.scphillips.com/2013/01/sound-configuration-on-raspberry-pi-with-alsa/"&gt;Sound configuration on Raspberry Pi with &lt;span class="caps"&gt;ALSA&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Thu, 15 Nov 2012 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2012-11-15:posts/2012/Nov/15/getting-audio-out-working-on-the-raspberry-pi/</guid><category>Linux</category><category>Raspberry Pi</category></item><item><title>Dropbox for the Raspberry Pi (sort of)</title><link>http://jeffskinnerbox.me/posts/2012/Nov/11/dropbox-for-the-raspberry-pi-sort-of/</link><description>&lt;p&gt;I&amp;#8217;m presently using &lt;a href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt; as a service for quick &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; easy movement of files between multiple PCs I use.  Its copy &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; paste operation is very intuitive on a Windows &lt;span class="caps"&gt;PC&lt;/span&gt;. I would like the same on the Raspberry Pi (RPi), particularly for moving files from my &lt;span class="caps"&gt;PC&lt;/span&gt; to the RPi.  I wanted the same utility on my RPi, but at the same time, I want the Linux command line paradigm supported and not be force to run X Windows on the&amp;nbsp;RPi.&lt;/p&gt;
&lt;p&gt;I did some searching and found things like &lt;a href="https://www.dropbox.com/install?os=lnx"&gt;Dropbox&amp;#8217;s Linux distribution&lt;/a&gt; (which I wasn&amp;#8217;t confident would work &amp;#8220;out of the box&amp;#8221; for the RPi&amp;#8217;s &lt;span class="caps"&gt;ARM&lt;/span&gt; architecture, but source is provided),  &lt;a href="http://www.lifehacker.com.au/2011/07/how-to-set-up-a-file-syncing-dropbox-clone-you-control/"&gt;GoodSync&lt;/a&gt; or &lt;a href="http://hm-innovations.com/2012/10/29/best-way-to-use-raspberry-pi-and-turn-it-into-a-dropbox/"&gt;Owncloud&lt;/a&gt; (which wouldn&amp;#8217;t access my existing Dropbox files but instead create an alternative), &lt;a href="http://raspberrypigadget.wordpress.com/2012/07/01/day-six-dropbox-access/"&gt;python&lt;/a&gt; or  &lt;a href="http://harizanov.com/2012/08/dropbox-shell-script-for-raspberrypi/"&gt;bash shell&lt;/a&gt; based up/down loaders (appears to behave like a simplified &lt;span class="caps"&gt;FTP&lt;/span&gt; tool), or the &lt;a href="http://fuse.sourceforge.net/sshfs.html"&gt;Secure SHell File System (&lt;span class="caps"&gt;SSHFS&lt;/span&gt;)&lt;/a&gt; based approach (the &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8217;s Dropbox directory is mounted on the&amp;nbsp;RPi).&lt;/p&gt;
&lt;p&gt;While the &lt;a href="https://www.dropbox.com/install?os=lnx"&gt;Dropbox&amp;#8217;s Linux distribution&lt;/a&gt; is likely the ultimate way to go, I didn&amp;#8217;t want to commit myself to the effort it would potentially require.  I settled on the &lt;span class="caps"&gt;SSHFS&lt;/span&gt; based approach.  I&amp;#8217;m running my &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;RPi headless&lt;/a&gt; and access it via my &lt;span class="caps"&gt;PC&lt;/span&gt; using &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt; and &lt;a href="http://www.openssh.org/"&gt;Secure Shell (ssh)&lt;/a&gt;.  With the &lt;span class="caps"&gt;SSHFS&lt;/span&gt; approach, I could make the Dropbox directory available for mounting at boot-up or mount it at will.  I only envision using the RPi-based Dropbox when I&amp;#8217;m doing development and I will be doing that from my &lt;span class="caps"&gt;PC&lt;/span&gt;.  So this &lt;span class="caps"&gt;SSHFS&lt;/span&gt; approach seems fine for the way that I&amp;nbsp;operate.&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;SSHFS&lt;/span&gt; approach means files will not really be replicated on the RPi, like Dropbox does.  The files will reside within my &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8217;s Dropbox folder (and replicated on my other PCs via the Dropbox service) but accessible by the RPi via the &lt;span class="caps"&gt;SSHFS&lt;/span&gt; file mount.  This means I can&amp;#8217;t have any applications I run on the RPi depend on files located in its Dropbox directory since it may not be always mounted.  I&amp;#8217;m &lt;span class="caps"&gt;OK&lt;/span&gt; with this limitation, and in fact is consistent with the ad-hoc purpose I have for the Dropbox directory.
&lt;h2&gt;Installation Required on the &lt;span class="caps"&gt;PC&lt;/span&gt;&lt;/h2&gt;
For me, nothing needs to be done here.  I already have Dropbox running on my &lt;span class="caps"&gt;PC&lt;/span&gt;, and via Cygwin/X, I have the foundations required for the host side of the &lt;span class="caps"&gt;SSHFS&lt;/span&gt; solution.  If you need help with this, &lt;a href="http://db.tt/WG4dR9shttp://db.tt/WG4dR9s"&gt;signup for Dropbox here&lt;/a&gt; and find out&lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt; how I&amp;#8217;m using Cygwin/X here&lt;/a&gt;.
&lt;h2&gt;Installation Required on the&amp;nbsp;RPi&lt;/h2&gt;
On the client side of the solution, you&amp;#8217;ll need to install &lt;a href="http://fuse.sourceforge.net/sshfs.html"&gt;&lt;span class="caps"&gt;SSHFS&lt;/span&gt;&lt;/a&gt; and &lt;a href="http://fuse.sourceforge.net/"&gt;&lt;span class="caps"&gt;FUSE&lt;/span&gt;&lt;/a&gt;. &lt;span class="caps"&gt;FUSE&lt;/span&gt; is the user-space filesystem framework and is the foundation on which &lt;span class="caps"&gt;SSHFS&lt;/span&gt; resides. &lt;span class="caps"&gt;FUSE&lt;/span&gt; allows user-space software, &lt;span class="caps"&gt;SSH&lt;/span&gt; in this case, to present a virtual file system interface to the user; something generally only done by the Linux kernel.  &lt;span class="caps"&gt;SSHFS&lt;/span&gt; connects to the remote system and provide the look and feel of a regular file system interface for remote files. On the RPi, install &lt;span class="caps"&gt;SSHFS&lt;/span&gt; via the&amp;nbsp;command:&lt;/p&gt;
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install sshfs &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class="caps"&gt;FUSE&lt;/span&gt; appear to be already installed on the RPi or maybe comes with &lt;span class="caps"&gt;SSHFS&lt;/span&gt;. Next you need to add required users to the &lt;span class="caps"&gt;FUSE&lt;/span&gt; usergroup.  In my case, that is the user pi.  You can see the existing groups pi is part of via the command &lt;code&gt;groups pi&lt;/code&gt;.  You can validate that the &lt;span class="caps"&gt;FUSE&lt;/span&gt; user group has been created by using the command &lt;code&gt;cat /etc/group | grep fuse&lt;/code&gt;.  To add pi to the &lt;span class="caps"&gt;FUSE&lt;/span&gt; user group, use the&amp;nbsp;command:&lt;/p&gt;
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo gpasswd -a pi fuse&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The fuse group lets you limit which users are allowed to use &lt;span class="caps"&gt;FUSE&lt;/span&gt;-based file systems, in my case the Dropbox. This is important because &lt;span class="caps"&gt;FUSE&lt;/span&gt; installs &lt;a href="http://www.acm.uiuc.edu/workshops/security/setuid.html"&gt;setuid programs&lt;/a&gt;, which always carry security implications.
&lt;h2&gt;Configuring the Dropbox File&amp;nbsp;System&lt;/h2&gt;
Now its time to make your Dropbox directory on the RPi, and mount it to the &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8217;s instance of Dropbox. On the RPi, use this command to create the&amp;nbsp;Dropbox:&lt;/p&gt;
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;mkdir ~/Dropbox&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The next thing to do is to make sure that you can connect to the &lt;span class="caps"&gt;PC&lt;/span&gt; via ssh.  When I installed Cygwin, my focus was on using it as an X Server and making ssh connections from the &lt;span class="caps"&gt;PC&lt;/span&gt; to RPi.  I never tried the inverse (connect from the RPi to the &lt;span class="caps"&gt;PC&lt;/span&gt;) and that is what &lt;span class="caps"&gt;SSHFS&lt;/span&gt; is effectively doing.  So check for two things:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Is the ssh server running on the &lt;span class="caps"&gt;PC&lt;/span&gt;?  You can check for its status via the command &lt;code&gt;cygrunsrv -Q sshd&lt;/code&gt;. In my case it was running, so its&amp;nbsp;fine.&lt;/li&gt;
    &lt;li&gt;Is the port used by the ssh server on the &lt;span class="caps"&gt;PC&lt;/span&gt; open? You&amp;#8217;ll need to &lt;a href="http://lifehacker.com/205090/geek-to-live--set-up-a-personal-home-ssh-server"&gt;open &lt;span class="caps"&gt;SSH&lt;/span&gt; port 22&lt;/a&gt; for ssh services to work.  You can check its status by attempting to use it.  In my case, this was &lt;code&gt;ssh Jeff@HomePC.home&lt;/code&gt;.  If this command appears to hang or time out (as it did for me), the port is likely blocked.  You&amp;#8217;ll need to go to your &lt;a href="http://www.dummies.com/how-to/content/how-to-open-a-port-in-the-windows-7-firewall.html"&gt;Windows Firewall&lt;/a&gt; and open port&amp;nbsp;22.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
There is another Cygwin sublimity that has to be taken into consideration.  When using the Cygwin, Windows drive letters are mapped to a &lt;a href="http://znark.com/tech/cygwin.html"&gt;special directory&lt;/a&gt;.  In my case, the Dropbox directory appears to Cygwin to have the following path: &lt;code&gt;/cygdrive/c/Users/Jeff/Dropbox&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With this all addressed, &lt;span style="text-decoration:underline;"&gt;reboot the RPi&lt;/span&gt;, and then you can now fire up you RPi Dropbox via:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sshfs Jeff@HomePC.home:/cygdrive/c/Users/Jeff/Dropbox ~/Dropbox&lt;/code&gt;&lt;/p&gt;
After you supply the &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8217;s password, you should now be able to access the Dropbox directory on the &lt;span class="caps"&gt;PC&lt;/span&gt;.  If you wish, you can remove the file system connection to the &lt;span class="caps"&gt;PC&lt;/span&gt; via the command:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;fusermount -u ~/Dropbox&lt;/code&gt;&lt;/p&gt;
This connection will stay established as long as you don&amp;#8217;t do the &lt;code&gt;fusermount -u&lt;/code&gt; or reboot the RPi.  If you wish to mount the file system upon boot-up, and avoid executing the &lt;code&gt;sshfs&lt;/code&gt; when you log-in, you can follow the procedure outline in the article that initially inspired me: &lt;a href="http://mitchtech.net/dropbox-on-raspberry-pi-via-sshfs/"&gt;Dropbox on Raspberry Pi via &lt;span class="caps"&gt;SSHFS&lt;/span&gt;&lt;/a&gt;
&lt;h2&gt;Something to Keep in&amp;nbsp;Mind&lt;/h2&gt;
While for the most part, moving between Windows/&lt;span class="caps"&gt;DOS&lt;/span&gt; and the Linux file systems isn&amp;#8217;t a problem, there is one thing to remember. Windows-based text editors put one set of special characters at the end of lines (i.e. carriage return and line break = &amp;#8216;\r\n&amp;#8217;), while Unix/Linux puts other characters (i.e. line break = &amp;#8216;\n&amp;#8217;).  This &lt;a href="http://www.codinghorror.com/blog/2010/01/the-great-newline-schism.html"&gt;odd anomaly&lt;/a&gt; is normally harmless, but some applications on a Linux cannot understand these characters and can cause Linux to not respond&amp;nbsp;correctly.&lt;/p&gt;
&lt;p&gt;The best example of Linux behaving badly (and the only one I know) is the execution of “&lt;a href="http://bash.cyberciti.biz/guide/Shebang"&gt;shebang&lt;/a&gt;” or the “#!&amp;#8230;” at the top of a bash, python, perl, etc. script.  If you edit these files in &lt;span class="caps"&gt;DOS&lt;/span&gt;, then move them to Linux, shebang will stop working.  Editing them under &lt;span class="caps"&gt;DOS&lt;/span&gt; is the origin of the problem, since a &lt;span class="caps"&gt;DOS&lt;/span&gt; based text editor will inject the extra carriage return character at the end of the text&amp;nbsp;line.&lt;/p&gt;
&lt;p&gt;To fix this problem, you can quickly convert an &lt;span class="caps"&gt;ASCII&lt;/span&gt; text file from &lt;span class="caps"&gt;DOS&lt;/span&gt; format (carriage return and line break) to the Unix format (line break), you can use the tool &lt;a href="http://linux.die.net/man/1/dos2unix"&gt;&lt;code&gt;dos2unix&lt;/code&gt;&lt;/a&gt;.  Run this utility on the effected file and shebang should work once again.
&lt;h2&gt;Epilogue&lt;/h2&gt;
At its foundation, &lt;span class="caps"&gt;SSH&lt;/span&gt; functions as a protocol for authenticating and encrypting remote shell sessions.  &lt;span class="caps"&gt;SSH&lt;/span&gt; can be thought of as much more than just a secure shell.  Using &lt;span class="caps"&gt;SSH&lt;/span&gt;&amp;#8217;s foundation, &lt;span class="caps"&gt;SSHFS&lt;/span&gt; creates a new capability.  To learn more, check out the link &lt;a href="http://matt.might.net/articles/ssh-hacks/"&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt;: More than secure shell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Key sources I consulted to write this include:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.linuxjournal.com/article/8904?page=0,0"&gt;&lt;span class="caps"&gt;SSHFS&lt;/span&gt;: Super Easy File Access over &lt;span class="caps"&gt;SSH&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://mitchtech.net/dropbox-on-raspberry-pi-via-sshfs/"&gt;Dropbox on Raspberry Pi via &lt;span class="caps"&gt;SSHFS&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.debianadmin.com/mount-a-remote-file-system-through-ssh-using-sshfs.html"&gt;Mount a remote file system through ssh Using&amp;nbsp;sshfs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 11 Nov 2012 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2012-11-11:posts/2012/Nov/11/dropbox-for-the-raspberry-pi-sort-of/</guid><category>Linux</category><category>Raspberry Pi</category></item><item><title>SendEmail as a Messaging Tool for the Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2012/Nov/10/sendemail-as-a-messaging-tool-for-the-raspberry-pi/</link><description>&lt;p&gt;In the projects I envision for the future, I&amp;#8217;ll be using my Raspberry Pi (RPi) as a gateway/server/controller for several other devices.  There is likely to be a need to generate status reports/messages and mail them out. It could be as simple as a notification that the deck lights have been turned-on. I don&amp;#8217;t need a full fledged mail client on the RPi to receive mail or manage a mailbox, just a command line utility to send email.  Also, I would like to send short text messages via (&lt;a href="http://en.wikipedia.org/wiki/Short_Message_Service"&gt;&lt;span class="caps"&gt;SMS&lt;/span&gt;&lt;/a&gt;) to my cell phone.  Linux does have a nice solution for&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;You do need an established email account with some email provider. I want to keep my personal email and my RPi&amp;#8217;s email separate  so I setup a special email account on gmail.  This will be used only by my Raspberry Pi&amp;#8217;s (or other intelligent devices). There &lt;a href="http://www.e-eeasy.com/SMTPServerList.aspx"&gt;exist&lt;/a&gt; some &lt;a href="http://searchnetworking.techtarget.com/definition/open-relay"&gt;open &lt;span class="caps"&gt;SMTP&lt;/span&gt; relay&lt;/a&gt; mail servers (mail servers that will not require a login nor a password) but many open mail relays have become unpopular and closed due to their exploitation by spammers and worms.
&lt;h2&gt;SendEmail&lt;/h2&gt;
&lt;a href="http://www.debianadmin.com/how-to-sendemail-from-the-command-line-using-a-gmail-account-and-others.html#more-706"&gt;SendEmail&lt;/a&gt; is a lightweight, completely command line based, &lt;a href="http://computer.howstuffworks.com/e-mail-messaging/email3.htm"&gt;&lt;span class="caps"&gt;SMTP&lt;/span&gt; email agent&lt;/a&gt;. It is written in Perl and designed to be used on the command line, in bash scripts, Perl programs, within web sites,&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;I installed SendEmail on my RPi via this&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install sendemail
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Testing&amp;nbsp;sendEmail&lt;/h2&gt;

&lt;p&gt;When I ran sendEmail the first time, it complained about some missing libraries.  I installed the missing libraries and this cleared the error.  Clearly, the sendEmail package needs some work since this dependency should have been taken care of by &lt;code&gt;apt-get&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I ran it again using this&amp;nbsp;command:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sendEmail -f pi@RedRPi -t &amp;lt;my_user_name&amp;gt;@verzion.net -u &amp;quot;Test Email from RedRPi&amp;quot; -m &amp;quot;My test message.&amp;quot; -s smtp.gmail.com:587  -o tls=yes -xu &amp;lt;my_user_name&amp;gt; -xp &amp;lt;my_password&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this, sendEmail threw an error&amp;nbsp;message:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;invalid SSL_version specified at /usr/share/perl5/IO/Socket/SSL.pm line 332
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I did a web search and found that this is a reported bug within sendEmail (bummer), but I also found a simple &lt;a href="http://unix.stackexchange.com/questions/53065/invalid-ssl-version-specified-at-usr-share-perl5-io-socket-ssl-pm-line-332"&gt;patch&lt;/a&gt; for the problem (lucky break).  I applied the fix, executed the command again, and succeeded in sending the&amp;nbsp;email.&lt;/p&gt;
&lt;p&gt;One of the key parameter used here is the &lt;a href="http://en.wikipedia.org/wiki/SMTP"&gt;&lt;span class="caps"&gt;SMTP&lt;/span&gt;&lt;/a&gt; &lt;a href="http://www.xeams.com/smtprelay.htm"&gt;mail relay&lt;/a&gt; specified in  &amp;#8221;&lt;code&gt;-s smtp.gmail.com:587&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;.  In this case, Gmail uses port 587 for relay email.  The default port to use is 25 but not all email servers use this&amp;nbsp;port.&lt;/p&gt;
&lt;p&gt;Another key parameter is &amp;#8220;&lt;code&gt;-o tls=yes&lt;/code&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;. This specifies that the &lt;a href="http://en.wikipedia.org/wiki/Transport_Layer_Security"&gt;Transport Layer Security (&lt;span class="caps"&gt;TLS&lt;/span&gt;)&lt;/a&gt; protocol will be used to provide communication security over the Internet.  This is important since your including a plain-text password in the command.&lt;sup id="cite_ref-1"&gt;&lt;/sup&gt;
&lt;h2&gt;&lt;span class="caps"&gt;SMS&lt;/span&gt;&amp;nbsp;Messaging&lt;/h2&gt;
Another messaging mechanism that I plan to use is Short Message Service (&lt;span class="caps"&gt;SMS&lt;/span&gt;).  To do this, you can use a &lt;a href="http://en.wikipedia.org/wiki/SMS_gateway"&gt;&lt;span class="caps"&gt;SMS&lt;/span&gt; gateway&lt;/a&gt; which will transform an email into an &lt;span class="caps"&gt;SMS&lt;/span&gt; message.  The down side is that there isn&amp;#8217;t a single gateway but &lt;a href="http://en.wikipedia.org/wiki/List_of_SMS_gateways"&gt;one for each of the cellular carries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for &lt;span class="caps"&gt;AT&lt;/span&gt;&amp;amp;T cell&amp;nbsp;phones:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sendEmail -f pi@RedRPi -t &amp;lt;cell_phone_number&amp;gt;@txt.att.net -u &amp;quot;Test Email from RedRPi&amp;quot; -m &amp;quot;My test message.&amp;quot; -s smtp.gmail.com:587  -o tls=yes -xu &amp;lt;my_user_name&amp;gt; -xp &amp;lt;my_password&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sat, 10 Nov 2012 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2012-11-10:posts/2012/Nov/10/sendemail-as-a-messaging-tool-for-the-raspberry-pi/</guid><category>Raspberry Pi</category></item><item><title>WiFi (with WEP Security) on Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2012/Nov/05/wifi-with-wep-security-on-raspberry-pi/</link><description>&lt;p&gt;The Raspberry Pi Linux distribution I&amp;#8217;m using is Adafruit&amp;#8217;s &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-2"&gt;Occidentalis&lt;/a&gt;.  It &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#wifi-support"&gt;supports WiFi&lt;/a&gt; out of the box and appears easy to configure.  But as noted by Adafruit, adding peripherals to the RPi may increase the loading on the power supply to your board and this, in turn, may affect the voltage presented to the&amp;nbsp;RPi.&lt;/p&gt;

&lt;p&gt;This is clearly the case, even for the tiny  OURlink WiFi (802.11b/g/n) &lt;span class="caps"&gt;USB&lt;/span&gt; Adapter (uses the &lt;a href="http://www.realtek.com/products/productsView.aspx?Langid=2&amp;amp;PNid=21&amp;amp;PFid=48&amp;amp;Level=5&amp;amp;Conn=4&amp;amp;ProdID=277"&gt;RTl8192cu chip&lt;/a&gt; which is &lt;a href="http://wiki.debian.org/rtl819x"&gt;supported by Debian Linux&lt;/a&gt;) I purchased from &lt;a href="http://www.adafruit.com/products/814"&gt;Adafruit&lt;/a&gt;.  When I plugged it into the RPi, it became unstable and crashed.  Adafruit advises that you can over come this by attach the RPi&amp;#8217;s &lt;span class="caps"&gt;USB&lt;/span&gt; port to a powered hub.  (Note that all &lt;span class="caps"&gt;USB&lt;/span&gt; hubs aren&amp;#8217;t powered or powered sufficient, and therefore, not all are  &lt;a href="http://elinux.org/RPi_VerifiedPeripherals"&gt;recommended&lt;/a&gt;.  I used a Dynex 4 Port Hub with a 5V 2.1A power adapter and all seem fine.)  If you find using a using a &lt;span class="caps"&gt;USB&lt;/span&gt; hub completely unacceptable, you could make some &lt;a href="http://theiopage.blogspot.com.au/2012/06/increasing-raspberry-pis-usb-host.html"&gt;RPi board modifications&lt;/a&gt; to the &lt;a href="http://elinux.org/Polyfuses_explained"&gt;polyfuses&lt;/a&gt;, but this isn&amp;#8217;t the &amp;#8220;official/supported&amp;#8221; approach for this power problem &amp;#8230;. but first &amp;#8230;. see the &lt;strong&gt;Epilogue&lt;/strong&gt;&amp;nbsp;below.&lt;/p&gt;

&lt;h2&gt;My First Attempt&amp;nbsp;(Unsuccessful)&lt;/h2&gt;

&lt;p&gt;Once I got the RPi &lt;span class="caps"&gt;USB&lt;/span&gt; port properly powered, I followed the Adafruit&amp;#8217;s &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#wifi-support"&gt;instructions&lt;/a&gt;.  I updated the&lt;code&gt;/etc/network/interfaces&lt;/code&gt; file with the&amp;nbsp;following:&lt;/p&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;########## DID NOT WORK FOR ME ##########

# The loopback network interface
auto lo
iface lo inet loopback

# The primary (wired) network interface
iface eth0 inet dhcp

# The wifi (wireless) network interface
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
      wpa-ssid YOUR_SSID
      wpa-psk YOUR_WEP_KEY
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I ran  &lt;code&gt;ifconfig -a&lt;/code&gt; and got the&amp;nbsp;following:&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a.jpg"&gt;&lt;img class="aligncenter size-full wp-image-574" title="ifconfig -a" alt="ifconfig" src="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a.jpg" width="545" height="311" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;p&gt;This tells me that Linux sees the WiFi device and assigned it device name &lt;code&gt;wlan0&lt;/code&gt;. It also says there isn&amp;#8217;t an &lt;span class="caps"&gt;IP&lt;/span&gt; address assigned and no data is moving.  Appears that network interface &lt;code&gt;wlan0&lt;/code&gt; isn&amp;#8217;t running so I tried bring it up with &lt;code&gt;sudo ifup wlan0&lt;/code&gt; and I got the&amp;nbsp;following:&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/ifup-wlan0.jpg"&gt;&lt;img class="aligncenter size-full wp-image-576" title="ifup wlan0" alt="wlan0" src="http://jeffskinnerbox.files.wordpress.com/2012/11/ifup-wlan0.jpg" width="545" height="311" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;p&gt;No &lt;span class="caps"&gt;IP&lt;/span&gt; assigned &amp;#8230; now&amp;nbsp;what?&lt;/p&gt;

&lt;h2&gt;This Worked &amp;#8230;&amp;nbsp;But&lt;/h2&gt;

&lt;p&gt;After the typical thrashing about, it came to me that I&amp;#8217;m not using &lt;span class="caps"&gt;WAP&lt;/span&gt; security (which is implied by the&lt;code&gt;/etc/network/interfaces&lt;/code&gt; file content) but I&amp;#8217;m using &lt;span class="caps"&gt;WEP&lt;/span&gt;.  I did some web searching and found a site that claimed to address &lt;a href="http://www.gc-linux.org/wiki/WL:Wifi_Configuration"&gt;Debian WiFi &lt;span class="caps"&gt;WEP&lt;/span&gt; configuration&lt;/a&gt;.  This provided me the needed command syntax for the solution.   I updated the&lt;code&gt;/etc/network/interfaces&lt;/code&gt; file with the&amp;nbsp;following:&lt;/p&gt;

&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# The loopback network interface
auto lo
iface lo inet loopback

# The primary (wired) network interface
iface eth0 inet dhcp

# The wifi (wireless) network interface
auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
       wireless-essid YOUR_SSID
       wireless-key YOUR_WEP_KEY
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I then ran &lt;code&gt;sudo ifup wlan0&lt;/code&gt; to start the wireless networking (Note: you can use &lt;code&gt;sudo ifdown wlan0&lt;/code&gt; to turn-off the wireless network).  This time &lt;span class="caps"&gt;DHCP&lt;/span&gt; discovery appeared to work.  I then ran &lt;code&gt;ifconfig -a&lt;/code&gt; giving me the display below with an assigned wireless &lt;span class="caps"&gt;IP&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a-this-time-it-worked.jpg"&gt;&lt;img class="aligncenter size-full wp-image-585" title="ifconfig -a (this time it worked)" alt="it worked" src="http://jeffskinnerbox.files.wordpress.com/2012/11/ifconfig-a-this-time-it-worked.jpg" width="545" height="322" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;p&gt;The wireless device now has an &lt;span class="caps"&gt;IP&lt;/span&gt; address and data seems to be flowing.  In an effort to further convince myself that the WiFi was working, I disconnected the wired ethernet connection and attempted to re-login in via &lt;code&gt;ssh -X pi@RedRPi.local&lt;/code&gt;, over the wireless interface. This failed, giving the&amp;nbsp;message:&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;ssh: Could not resolve hostname RedRPi.local: hostname nor servname provided, or not known&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Working For&amp;nbsp;Sure&lt;/h2&gt;

&lt;p&gt;I suspected (after more thrashing about) it was Ssh or &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#bonjour-support"&gt;Avahi/Bonjour&lt;/a&gt; or both that was getting in the way.  So I did the&amp;nbsp;following:&lt;/p&gt;

&lt;ol&gt;&lt;ol&gt;&lt;li&gt;I cleaned out the &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file on the &lt;span class="caps"&gt;PC&lt;/span&gt; from which I&amp;#8217;m accessing the RPi (I&amp;#8217;m using Cygwin with Openssh). With the entries in the file removed  ssh keys would need to be recreated on next&amp;nbsp;login.&lt;/li&gt;&lt;li&gt;I then logged into the RPi in via &lt;code&gt;ssh -X pi@RedRPi.local.&lt;/code&gt; The login created an entry the &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file on the &lt;span class="caps"&gt;PC&lt;/span&gt;.&lt;/li&gt;&lt;li&gt;Using vi, I edited the  &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file.  I duplicated the one existing record but changed the  &lt;span class="caps"&gt;IP&lt;/span&gt; address to the wireless&amp;nbsp;address.&lt;/li&gt;&lt;li&gt;I restarted the openssh on the &lt;span class="caps"&gt;PC&lt;/span&gt;.  (I terminated all the Cygwin window and restarted them.  I could get anything else to work short of a &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;nbsp;reboot).&lt;/li&gt;&lt;li&gt;I then logged in using &lt;code&gt;ssh -X pi@192.168.1.7&lt;/code&gt;. Now I&amp;#8217;m&amp;nbsp;wireless!!&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;

&lt;p&gt;My &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; file looks like&amp;nbsp;this:&lt;/p&gt;

&lt;p&gt;
&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/11/known_hosts.jpg"&gt;&lt;img class="aligncenter size-full wp-image-594" title="known_hosts" alt="known hosts" src="http://jeffskinnerbox.files.wordpress.com/2012/11/known_hosts.jpg" width="545" height="300" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;/p&gt;

&lt;h2&gt;Epilogue&lt;/h2&gt;

&lt;p&gt;I have found that if  I don&amp;#8217;t use a &lt;span class="caps"&gt;USB&lt;/span&gt;  powered hub and I plug in the OURlink WiFi (802.11b/g/n) &lt;span class="caps"&gt;USB&lt;/span&gt; Adapter while the RPi is up and running, the RPi will crash.  The good news is that, once the RPi reboots, it runs fine without the powered&amp;nbsp;hub.&lt;/p&gt;

&lt;p&gt;So, go ahead and use the WiFi &lt;span class="caps"&gt;USB&lt;/span&gt; Adapter, without the powered hub, but make sure the adapter is plugged in when you boot up &amp;#8230;. problem&amp;nbsp;solved!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Mon, 05 Nov 2012 00:01:00 -0500</pubDate><guid>tag:jeffskinnerbox.me,2012-11-05:posts/2012/Nov/05/wifi-with-wep-security-on-raspberry-pi/</guid><category>Raspberry Pi</category></item><item><title>Conky for the Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2012/Nov/02/conky-for-the-raspberry-pi/</link><description>&lt;p&gt;&lt;a href="/images/conky-window.jpg"&gt;
    &lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="Conky Window" src="/images/conky-window.jpg" width="77" height="300" /&gt;
&lt;/a&gt;
&lt;a href="http://conky.sourceforge.net/"&gt;Conky&lt;/a&gt;  is a Linux system monitor tool using X Windows.  Conky is highly configurable and is able to monitor many system variables including the status of the &lt;span class="caps"&gt;CPU&lt;/span&gt;, memory, swap space, disk storage, temperatures, processes, network interfaces, battery power, system messages, e-mail in-boxes  Linux updates, runs many popular music players, and much more. Unlike system monitors that use high-level widget tool-kits to render their information, Conky is drawn directly in an X window, allowing it to consume relatively fewer system&amp;nbsp;resources.&lt;/p&gt;
&lt;p&gt;To install the standard Conky package, use the following:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install conky-std&lt;/code&gt;&lt;/p&gt;
Two sites you will want to read, beyond the &lt;a href="http://conky.sourceforge.net/docs.html"&gt;Conky manual page&lt;/a&gt; are the lists of &lt;a href="http://conky.sourceforge.net/config_settings.html"&gt;Config Settings&lt;/a&gt; and &lt;a href="http://conky.sourceforge.net/variables.html"&gt;Variables&lt;/a&gt;. You use the Config Settings to describe general features of how you want your Conky to appear, and the variables to define what actually gets&amp;nbsp;displayed.&lt;/p&gt;
&lt;p&gt;The color names that are used within Conky are the X11 colors located in &lt;code&gt;/usr/share/X11/rgb.txt&lt;/code&gt;.  There isn&amp;#8217;t a standard set of colors to be found on any X Window system, so you&amp;#8217;ll need to inspect this file to get some idea of what color names you can use.  This &lt;a href="http://www.kgym.jp/freesoft/xrgb.html"&gt;X color name list&lt;/a&gt;, which appears to be larger than what is in the RPi&amp;#8217;s &lt;code&gt;rgb.txt&lt;/code&gt; file, could help you visualized the&amp;nbsp;colors.&lt;/p&gt;
&lt;p&gt;Conky uses a configuration file location in &lt;code&gt;$HOME/.conkyrc&lt;/code&gt;.  Conky can be configured in an amazing number of way but I&amp;#8217;m using the following configuration on the RPi:
&lt;p&gt;&lt;script src="https://gist.github.com/jeffskinnerbox/6603187.js"&gt;&lt;/script&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Debugging&amp;nbsp;Conky&lt;/h2&gt;

&lt;p&gt;An easy way to force Conky to reload your &lt;code&gt;~/.conkyrc&lt;/code&gt; configuration file is to us the command &lt;code&gt;killall -SIGUSR1 conky&lt;/code&gt;. This saves you the trouble of having to kill and then restart.  I also discovered that  while conky is running and your concurrently editing the &lt;code&gt;.conkyrc&lt;/code&gt; file in vi, saving the file appears to cause conky to restart and read the new &lt;code&gt;.conkyrc&lt;/code&gt; &amp;#8230;&amp;nbsp;nice.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Fri, 02 Nov 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-11-02:posts/2012/Nov/02/conky-for-the-raspberry-pi/</guid><category>Conky</category><category>Raspberry Pi</category></item><item><title>Controlling and Viewing the Raspberry Pi GPIO via PC Browser</title><link>http://jeffskinnerbox.me/posts/2012/Oct/19/controlling-and-viewing-the-raspberry-pi-gpio-via-pc-browser/</link><description>&lt;p&gt;&lt;center&gt;
&lt;a href="https://code.google.com/p/webiopi/"&gt;&lt;img alt="WebIOPi" src="http://jeffskinnerbox.me/images/webiopi-chrome.jpg" title="WebIOPi Web Page" /&gt;&lt;/a&gt;
&lt;/center&gt;
This idea of controlling my Raspberry Pi (RPi), and the things its networked with, via an internet browser is at the heart of what I would like to do with the assortment of Arduino and Xbee devices I&amp;#8217;m assembling.  To explore how best to do this, I&amp;#8217;m considering using &lt;a href="http://code.google.com/p/webiopi/"&gt;WebIOPi&lt;/a&gt;, which is a web application used to control your RPi’s &lt;span class="caps"&gt;GPIO&lt;/span&gt;.  I believe it could be useful as a test tool, but more importantly, I suspect that I could learn how to engineer my application by studying its design.
&lt;h2&gt;Install&amp;nbsp;WebIOPi&lt;/h2&gt;
When installing WebIOPi on my RPi, I followed the &lt;a href="http://code.google.com/p/webiopi/wiki/INSTALL#PHP/Apache"&gt;installation&lt;/a&gt; instructions for the Apache version.  I choose this version since  I&amp;#8217;ll be using the Apache web server for other features as my project evolves. Note that there is a small error on the instructions if you use a symbolic link to the webiopi directory.  Create this link using
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo ln -s /home/pi/webiopi /var/www/webiopi&lt;/code&gt;&lt;/p&gt;
Immediately after installation,  you can test to see if you can render a web page.  Assuming that your  Raspberry Pi is connected to your network  and its named &lt;code&gt;raspberrypi&lt;/code&gt;, you can open a browser to &lt;code&gt;&lt;a href="http://raspberrypi/webiopi/" rel="nofollow"&gt;http://raspberrypi/webiopi/&lt;/a&gt;&lt;/code&gt; with your network &lt;span class="caps"&gt;PC&lt;/span&gt;.  It might work but your likely to get a error, something like &amp;#8220;&amp;#8230;Could not reliably determine the server’s fully qualified domain name&amp;#8230;&amp;#8221; and the &lt;a href="http://scottlinux.com/2011/02/16/could-not-reliably-determine-the-servers-fully-qualified-domain-name/"&gt;solution&lt;/a&gt; is to give your web server a&amp;nbsp;name.&lt;/p&gt;
&lt;p&gt;To do this,  create this Apache config file:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo vi /etc/apache2/conf.d/fqdn&lt;/code&gt;&lt;/p&gt;
Enter &lt;code&gt;ServerName raspberrypi&lt;/code&gt; into this file and restart Apache using
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo /etc/init.d/apache2 restart&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Installing &lt;span class="caps"&gt;GPIO&lt;/span&gt;&amp;nbsp;Utilities&lt;/h2&gt;

&lt;p&gt;While checking on the status of of the Python based &lt;span class="caps"&gt;GPIO&lt;/span&gt; package on the &lt;span class="caps"&gt;RPI&lt;/span&gt; using the command &lt;code&gt;dpkg -l | grep gpio&lt;/code&gt;, I concluded that the  &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Occidentalis&lt;/a&gt; distribution I&amp;#8217;m using doesn&amp;#8217;t have any Python libraries for &lt;span class="caps"&gt;GPIO&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Picking up some tips from &lt;a href="http://learn.adafruit.com/raspberry-pi-e-mail-notifier-using-leds/overview"&gt;Raspberry Pi E-mail Notifier Using LEDs&lt;/a&gt;.  I determined that I need to install several python packages first.  I did this&amp;nbsp;via&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;sudo apt-get install python
sudo apt-get install python-dev
sudo apt-get install python-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this done, now its time to install the required Python libraries but first, update the Python distribution by running
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo easy_install -U distribute&lt;/code&gt;&lt;/p&gt;
Finally you can install the Raspberry Pi &lt;span class="caps"&gt;GPIO&lt;/span&gt; (General Purpose Input/Ouput) library:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo pip install RPi.GPIO
&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;What did I&amp;nbsp;find&lt;/h2&gt;

&lt;p&gt;WebIOPi  supports binary GPIOs, in both input and output.  That is, you can set a &lt;span class="caps"&gt;GPIO&lt;/span&gt; output pin high/low via a browser pick.  Also, you can see the state of a &lt;span class="caps"&gt;GPIO&lt;/span&gt; pin.  Equally important to me is that WebIOPi auto-refreshes, via &lt;a href="http://www.kendoui.com/blogs/teamblog/posts/12-05-11/hello_services_webapi_rest_json_and_ajax.aspx"&gt;WebAPI, &lt;span class="caps"&gt;REST&lt;/span&gt;, &lt;span class="caps"&gt;JSON&lt;/span&gt; and &lt;span class="caps"&gt;AJAX&lt;/span&gt;&lt;/a&gt; I assume.  Therefore, when the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins change state, the browser automatically is updated with the new status.  And this happens for all browsers displaying WebIOPi.  You can demonstrate this by opening two browsers pointing at WebIOPi.  Action performed in one browser will also appear in the other.
&lt;h2&gt;Test&amp;nbsp;Script&lt;/h2&gt;
I used this code to generate some random activity on the &lt;span class="caps"&gt;GPIO&lt;/span&gt; pins and test&amp;nbsp;WebIOPi.&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;&lt;span style="color: #0099FF; font-style: italic"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span style="color: #006699; font-weight: bold"&gt;import&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;RPi.GPIO&lt;/span&gt; &lt;span style="color: #006699; font-weight: bold"&gt;as&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;GPIO&lt;/span&gt;&lt;span style="color: #555555"&gt;,&lt;/span&gt; &lt;span style="color: #00CCFF; font-weight: bold"&gt;time&lt;/span&gt;

BLINK_FREQ &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;3&lt;/span&gt;                  &lt;span style="color: #0099FF; font-style: italic"&gt;# refresh GPIO pins every 3 seconds&lt;/span&gt;

GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setmode(GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;BCM)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;4&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;17&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;21&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;22&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;9&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;11&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;18&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;23&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;24&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;25&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;8&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)
GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;setup(&lt;span style="color: #FF6600"&gt;7&lt;/span&gt;, GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;OUT)

i &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;
&lt;span style="color: #006699; font-weight: bold"&gt;while&lt;/span&gt; &lt;span style="color: #336666"&gt;True&lt;/span&gt;:
                &lt;span style="color: #006699; font-weight: bold"&gt;if&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;4&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;17&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;2&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;0&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;1&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;4&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;17&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;7&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;8&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;25&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;23&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;3&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;7&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;8&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;25&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;23&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;4&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;21&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;22&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;9&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;11&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;18&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;elif&lt;/span&gt; i &lt;span style="color: #555555"&gt;==&lt;/span&gt; &lt;span style="color: #FF6600"&gt;5&lt;/span&gt;:
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;21&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;22&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;10&lt;/span&gt;, &lt;span style="color: #336666"&gt;True&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;9&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;11&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                GPIO&lt;span style="color: #555555"&gt;.&lt;/span&gt;output(&lt;span style="color: #FF6600"&gt;18&lt;/span&gt;, &lt;span style="color: #336666"&gt;False&lt;/span&gt;)
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; i &lt;span style="color: #555555"&gt;+&lt;/span&gt; &lt;span style="color: #FF6600"&gt;1&lt;/span&gt;
                &lt;span style="color: #006699; font-weight: bold"&gt;else&lt;/span&gt;:
                                i &lt;span style="color: #555555"&gt;=&lt;/span&gt; &lt;span style="color: #FF6600"&gt;0&lt;/span&gt;
                time&lt;span style="color: #555555"&gt;.&lt;/span&gt;sleep(BLINK_FREQ)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Alternative&amp;nbsp;Approaches&lt;/h2&gt;

&lt;p&gt;The use of a Web page to control the RPi seems useful enough but what if the target environment for launching control messages is a cell phone?  Maybe a phone app would be a better approach.  Check out the post  &lt;a href="http://www.samratamin.com/blog/raspberry-pi-iphone-control-a-rpi-with-an-iphone-in-2-minutes/"&gt;Raspberry Pi + iPhone: Control a RPi with an iPhone in 2 Minutes&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Fri, 19 Oct 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-10-19:posts/2012/Oct/19/controlling-and-viewing-the-raspberry-pi-gpio-via-pc-browser/</guid><category>Raspberry Pi</category></item><item><title>Establishing an X Window System Environment for my PC and Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2012/Oct/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/</link><description>&lt;p&gt;As stated in an &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;earlier post&lt;/a&gt;, I plan to run my Raspberry Pi (RPi) as an attached device to my homes &lt;span class="caps"&gt;LAN&lt;/span&gt; and use my &lt;span class="caps"&gt;MS&lt;/span&gt; Windows &lt;span class="caps"&gt;PC&lt;/span&gt; to access the RPi.  The RPi will use my &lt;span class="caps"&gt;PC&lt;/span&gt; for display output and key board / mouse as input.  With the X Window System on the RPi, I can transmit an entire RPi desktop if I wish (using &lt;a href="http://lxde.org/"&gt;&lt;span class="caps"&gt;LXDE&lt;/span&gt;&lt;/a&gt; and it would look and feel much like &lt;a href="http://en.wikipedia.org/wiki/Virtual_Network_Computing"&gt;&lt;span class="caps"&gt;VNC&lt;/span&gt;&lt;/a&gt;).  I find this cumbersome since now your dealing with two desktop environments: &lt;span class="caps"&gt;MS&lt;/span&gt; Windows desktop and  X Window System based desktop all one&amp;nbsp;display.&lt;/p&gt;
&lt;p&gt;There is an alternative way. One of the cool things about the X architecture is that it can use &lt;span class="caps"&gt;MS&lt;/span&gt; Windows as your window manager (at least with the tools like &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt;, &lt;a href="http://sourceforge.net/projects/xming/"&gt;Xming&lt;/a&gt;, and &lt;a href="http://www.microimages.com/mix/"&gt;&lt;span class="caps"&gt;MI&lt;/span&gt;/X&lt;/a&gt;) but the application within the window frame can be the RPi based X Window System application.  Now you have a single desktop (&lt;span class="caps"&gt;MS&lt;/span&gt; Windows) but your running RPi application within a &lt;span class="caps"&gt;MS&lt;/span&gt; Windows window.  And with this configuration, you can run both Linux programs within a standard terminal window and graphic  X Window System applications in another&amp;nbsp;window.&lt;/p&gt;
&lt;p&gt;For me this is clearly the way to go.  It will allow me to hop on my &lt;span class="caps"&gt;PC&lt;/span&gt;, and with a double-click on a desktop icon, get me to a password prompt on the RPi.  Enter the password, and I can immediately run both command line and X graphics application on the RPi, along side &lt;span class="caps"&gt;MS&lt;/span&gt; Windows applications, all concurrently on a single&amp;nbsp;desktop.&lt;/p&gt;
&lt;p&gt;How I did this, along with some background information, is provide below.
&lt;h2&gt;X Window&amp;nbsp;System&lt;/h2&gt;
&lt;img class="img-rounded" style="margin: 0px 8px; float: left" title="X Windows Client Server Architecture" alt="X architecture" src="/images/x-windows-client-server-architecture.png" width="210" height="356" /&gt;
The X Window System (commonly referred to as X Windows or just X or X11) is a software system and network protocol that provides a basis for graphical user interfaces (GUIs) and rich input device capability for networked computers.
X uses a client/server model, but appears backwards when you first learn of X.  In X, it&amp;#8217;s the server that runs on the local machine (the &lt;span class="caps"&gt;PC&lt;/span&gt;), providing its services to the display based on requests from client programs that may be running remotely (the RPi). Within a X Window System, a client can also run locally. The server also manages the input devices (your keyboard and mouse), and it manages the display of colors and fonts on the screen, all based on requests from a&amp;nbsp;client.&lt;/p&gt;
&lt;p&gt;One of the most significant features of X is that it was specifically designed to work across a network. The client and the server communicate via the X Protocol, a network protocol that can run locally or across a network. Regardless of whether a client program is local or remote, it communicates with the server through the X Protocol.
&lt;h2&gt;X Window&amp;nbsp;System Components&lt;/h2&gt;
A X Window System consist of several components which work together.  They are:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;X Server&lt;/strong&gt; - manages the display, based on requests from the window&amp;nbsp;manager.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Window Manager&lt;/strong&gt; - is an application that is itself an X client, with responsibility for managing the appearance and placement of the windows on the screen.   The window manager takes care of the appearance and placement of the windows; it doesn&amp;#8217;t determine what goes on&amp;nbsp;inside.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; - are the X clients, typically providing user functionality.  Windows are fully in control of the application but their placement, geometry  etc. are controlled by the window&amp;nbsp;manager.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Display Manager&lt;/strong&gt; - runs as a program that allows the starting of a session on an X server from the same local or remote computer A &lt;a href="http://en.wikipedia.org/wiki/X_display_manager_(program_type)"&gt;display manager&lt;/a&gt; presents the user with a login screen which prompts for a username and password. A session starts when the user successfully enters a valid combination of username and&amp;nbsp;password.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;When the display manager runs on the user&amp;#8217;s computer, it starts the X server before presenting the user the login screen, optionally repeating when the user logs&amp;nbsp;out.&lt;/li&gt;
    &lt;li&gt;When the display manager runs on a remote computer, it acts like a telnet server, requesting username and password and starting a remote&amp;nbsp;session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;ul&gt;
    &lt;li&gt; &lt;strong&gt;Desktop Environment&lt;/strong&gt; - go further than a window manager in providing an integrated graphical environment where all applications and windows have a common look and feel. The desktop environments also include session management, for saving and restoring your work&amp;nbsp;sessions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
In the spirit of user-friendliness and security, the desktop and display manager hides much of the X Window System and its&amp;#8217; subtleties.  If you want to really explore X (and light its load on the RPi), it&amp;#8217;s helpful to run with just a window manager for a while (even if you plan to go back to the desktop).  That is what I plan to do.
&lt;h2&gt;Cygwin&amp;#8217;s X Server and Window&amp;nbsp;Manager&lt;/h2&gt;
Before you can run a X client, you need to start the X server.  You can run the X server in two ways: it will automatically start if your Linux is configured with a X Display Manager (&lt;span class="caps"&gt;XDM&lt;/span&gt;), and if not, at the Linux command line you can start X manually.  It is the latter that I want to do on my &lt;span class="caps"&gt;PC&lt;/span&gt; / RPi combination (and the way my RPi distribution &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Occidentalis&lt;/a&gt; is pre-configured).   Also, in my configuration, I&amp;#8217;ll be using the Cygwin  X server on the &lt;span class="caps"&gt;PC&lt;/span&gt;, and no server will be running on the RPi, only X&amp;nbsp;clients.&lt;/p&gt;
&lt;p&gt;Now there are some important capabilities within the Cygwin X server.  Cygwin/X can work with &lt;a href="http://x.cygwin.com/docs/ug/using-window-managers.html"&gt;its window managers&lt;/a&gt;  in several different ways.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Internal window manager&lt;/strong&gt; - The internal window manager creates a &lt;span class="caps"&gt;MS&lt;/span&gt; Windows window for each top-level X window.  This window manage is &amp;#8220;internal&amp;#8221; to the Cygwin X&amp;nbsp;server.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;External local window managers&lt;/strong&gt; -  These local window managers must be installed on Cygwin and runs on the &lt;span class="caps"&gt;PC&lt;/span&gt; (e.g. twm, mwm, fvwm2, openbox, aewm++, WindowMaker).&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Remote window managers&lt;/strong&gt; - This would be a situation where the window manager is on the RPi and would connect via a remote sessions using &lt;span class="caps"&gt;XDMCP&lt;/span&gt; (X Display Manager Control&amp;nbsp;Protocol).&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
I plan to keep things simple and use the Cygwin internal window&amp;nbsp;manage.&lt;/p&gt;
&lt;p&gt;XWin is the X Server for the X Window System on the Cygwin environment running on Microsoft Windows. It can operate in &lt;a href="http://x.cygwin.com/docs/man1/XWin.1.html"&gt;three different modes&lt;/a&gt;:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Single Window&lt;/strong&gt; - This is the default mode. Each X screen appears as a single &lt;span class="caps"&gt;MS&lt;/span&gt; Windows window and all X windows are contained within this window. (In X terminology, the &lt;span class="caps"&gt;MS&lt;/span&gt; Windows window contains the &lt;a href="http://en.wikipedia.org/wiki/Root_window"&gt;root window&lt;/a&gt; for the&amp;nbsp;screen.)&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Multi-Window&lt;/strong&gt;&lt;em&gt; - &lt;/em&gt;In this mode XWin uses its own integrated window manager in order to handle the top-level X windows, in such a way that they appear as normal &lt;span class="caps"&gt;MS&lt;/span&gt; Windows windows.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Rootless&lt;em&gt; -&lt;/em&gt;&lt;/strong&gt; In this mode the X server works in a window containing the whole screen but this root window (traditionally covered with an X hatch pattern) is hidden from view, so only top-level X windows are&amp;nbsp;seen.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
To get a better idea on what the different modes can provide you from a user experience perspective, check out some &lt;a href="http://x.cygwin.com/screenshots/"&gt;Cygwin/X screen shots&lt;/a&gt;.   Again, my objectives are to keep things simple and clean, so I will be using the multi-window mode.
&lt;h2&gt;Configuring&amp;nbsp;Cygwin/X&lt;/h2&gt;
To operate Cygwin/X in multi-window mode you use the command &lt;code&gt;startxwin&lt;/code&gt; (You use &lt;code&gt;startx&lt;/code&gt; for window mode.  &lt;code&gt;startxwin&lt;/code&gt; is a specialized version of &lt;code&gt;startx &lt;/code&gt;with a few differences appropriate to running in multi-window mode, rather than windowed mode).  The &lt;code&gt;startxwin&lt;/code&gt; program has a resource file called &lt;code&gt;.startxwinrc&lt;/code&gt;.  You can create a &lt;code&gt;~/.startxwinrc&lt;/code&gt; script to start client programs, such as mintty or xterm. An example &lt;code&gt;.startxwinrc&lt;/code&gt; file is:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;mintty --position 150,150 --size 80,50
mintty --position 600,500 --size 80,25 --exec ssh -X pi@raspberrypi.local
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will open up two xterm windows for your in the left hand corner of the screen and a thrid xterm window in the center of the screen.  This third screen is automatically logging in to the RPi as user pi and will wait four you to enter the&amp;nbsp;password.&lt;/p&gt;
&lt;p&gt;Also make sure that you export your &lt;code&gt;DISPLAY&lt;/code&gt; for the X server on your &lt;span class="caps"&gt;PC&lt;/span&gt;.  You can do this by placing the following in your &lt;code&gt;.bashrc&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# environment variables required by X Window System
export DISPLAY=:0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configuring&amp;nbsp;RPi&lt;/h2&gt;

&lt;p&gt;Not much needs to be done to the RPi to prepare for the X applications.  You may wish to launch some X Window System application upon logging in.  You can do this by adding the X applications to your .bash_profile.  For example, add the following line to launch the &lt;span class="caps"&gt;LXDE&lt;/span&gt; file&amp;nbsp;manager:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;# execute X Window System programs
pcmanfm &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Starting and Stopping the Cygwin X&amp;nbsp;Server&lt;/h2&gt;

&lt;p&gt;The environments are now set.  Time to start the X Server. The easiest way for &lt;a href="http://x.cygwin.com/docs/ug/using.html#using-starting"&gt;starting Cygwin/X&lt;/a&gt; is using the &amp;#8220;XWin Server&amp;#8221; shortcut under &amp;#8220;Cygwin-X&amp;#8221; on the Start Menu or on the &lt;span class="caps"&gt;MS&lt;/span&gt; Windows desktop. You could also type &lt;code&gt;startxwin&lt;/code&gt; on the Cygwin command&amp;nbsp;line.&lt;/p&gt;
&lt;p&gt;As to stopping the X Server, for the window mode I&amp;#8217;m working in (multi-window), &lt;a href="http://x.cygwin.com/docs/ug/using-stopping.html"&gt;stopping Cygwin/X&lt;/a&gt; can be done by  Selecting the &amp;#8220;Exit&amp;#8230;&amp;#8221; option from the notification area icon menu.
&lt;h2&gt;How Does It&amp;nbsp;Look&lt;/h2&gt;
So given the configuration discussed above, your get a nice clean display with &lt;span class="caps"&gt;MS&lt;/span&gt; Windows, Cygwin, RPi command line, and RPi X Window application running in a single windows management environment.  Picture provided&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/x-window-system-screen-shot1.jpg"&gt;&lt;img class="aligncenter size-large wp-image-367" title="X Window System Screen Shot" alt="screen shot 1" src="/images/x-window-system-screen-shot1.jpg" width="1024" height="640" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You thought the Raspberry Pi was a simple little hardware hackers computer &amp;#8230;. but its running like a big dog now!
&lt;h2&gt;References&lt;/h2&gt;
Much of what is provided here was lifted from the following sources:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://linuxdevcenter.com/pub/a/linux/2005/08/25/whatisXwindow.html"&gt;What Is the X Window&amp;nbsp;System&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.comptechdoc.org/os/linux/howlinuxworks/linux_hlxwindows.html"&gt;How Linux X&amp;nbsp;Works&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.physionet.org/physiotools/cygwin/#using-x"&gt;Using&amp;nbsp;Cygwin/X&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://unicorn.mcmaster.ca/teaching/cygwin/cygwin-x-user_guide.pdf"&gt;Cygwin/X User’s&amp;nbsp;Guide&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://secweb.cs.odu.edu/~zeil/cs252/website/Lectures/xwinlaunch/page/xwinlaunch.html"&gt;The X Window&amp;nbsp;System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Thu, 04 Oct 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-10-04:posts/2012/Oct/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/</guid><category>Raspberry Pi</category><category>Linux</category><category>X Window System</category></item><item><title>Setting up Git for Arduino and Raspberry Pi Development</title><link>http://jeffskinnerbox.me/posts/2012/Sep/28/setting-up-git-for-arduino-and-raspberry-pi%20development/</link><description>&lt;p&gt;For my future projects, I plan to do a combination of Arduino and RPi development.  The development of the Arduino code will be on my &lt;span class="caps"&gt;MS&lt;/span&gt; Windows &lt;span class="caps"&gt;PC&lt;/span&gt; and the RPi solution will be developed naively within the RPi Linux environment   Given this distributed environment (and my ability to bungle things), I can foresee  potential problems maintain good source code control.  To deal with this, the combination of &lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt; and &lt;a href="https://github.com/"&gt;gethub&lt;/a&gt; seems the right way to proceed &amp;#8230;. after all it has worked for the distributed &lt;a href="http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git"&gt;Linux development community&lt;/a&gt;.
&lt;h2&gt;Git on &lt;span class="caps"&gt;MS&lt;/span&gt;&amp;nbsp;Windows&lt;/h2&gt;
The first thing I did was to set up git within my &lt;span class="caps"&gt;MS&lt;/span&gt; Windows &lt;span class="caps"&gt;PC&lt;/span&gt;.  Given that &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;I installed Cygwin&lt;/a&gt; when setting up the RPi, that is where I returned to install git.  Therefore, I plan to use git within the Cygwin environment on my &lt;span class="caps"&gt;PC&lt;/span&gt; and not within &lt;span class="caps"&gt;MS&lt;/span&gt; Windows per say.  &lt;a href="http://git-scm.com/downloads"&gt;This could be done&lt;/a&gt;, but my approach allows me to learn git commands once since, Cygwin is a Linux-like environment, everything should look and operate the&amp;nbsp;same.&lt;/p&gt;
&lt;p&gt;To accomplish this I follow the instructions outline in &lt;a href="http://www.celinio.net/techblog/?p=818"&gt;Installing Git on Cygwin&lt;/a&gt;.  These instructions are very straight forward.  The challenge was in initializing git for my first project, at least it was a challenge for me since git is new tool for me and Cygwin didn&amp;#8217;t always cooperate.  I had to address this the old fashion way &amp;#8230;. read the documentation and trouble logs (vs. doing a web search for someones web post with instructions).  All the important secrets of git can be found widely dispersed and buried deep withing these web sites: &lt;a href="http://git-scm.com/documentation"&gt;Git Documentation&lt;/a&gt; and &lt;a href="http://gitref.org/index.html"&gt;Git Reference&lt;/a&gt;.  Source information from trouble logs will be listed&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;So how did I do it?  It&amp;#8217;s easy once you successively done it once.  First let me state the context; for the exercise I&amp;#8217;m doing, I&amp;#8217;m attempting to place my &lt;code&gt;.bashrc, .profile, .vimrc&lt;/code&gt;, and a few other configuration files under gits control.  The basic sequence of operation is to initialize the git environment, configure some parameters, and then add the files.  It goes like this (I&amp;#8217;ll let you research the git documentation, just like I did, to understand the command.  Trust me, this is good for you!):
&lt;p style="padding-left:30px;"&gt;&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;git init
git config --global user.name &amp;quot;jeffskinnerbox&amp;quot;
git config --global user.email jeff.irland@verizon.net
git config --global core.editor vim
git config --global merge.tool vimdiff
git add .bashrc .profile .vimrc .bash_profile .minttyrc .inputrc .gitconfig .gitignore
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To see what you got, use the &lt;code&gt;git status&lt;/code&gt; command.  This will tell you the files got staged but not committed. The commit will come later.  First we need to set up our communal repository within &lt;a href="https://github.com/"&gt;github&lt;/a&gt;.
&lt;h2&gt;Setting Up&amp;nbsp;GitHub&lt;/h2&gt;
You may be asking,&lt;a href="http://techcrunch.com/2012/07/14/what-exactly-is-github-anyway/"&gt; What Exactly Is GitHub Anyway?&lt;/a&gt;  Well, in a few words, github is a web-based hosting service for software development projects that use git. The next step is to go to &lt;a href="https://github.com/"&gt;github&lt;/a&gt;, set up your free login, and then set up a repository.  In my case, I set up a github repository called &lt;a href="https://github.com/jeffskinnerbox/Cygwin-Configuration-Files"&gt;Cygwin-Configuration-Files&lt;/a&gt; to store my configuration files established earlier under git control.  It will be empty at this point, and that&amp;#8217;s all for now, loading it with files comes&amp;nbsp;later.&lt;/p&gt;
&lt;p&gt;I didn&amp;#8217;t say much about how to set up github, but trust me, it is as simple as outlined above.  It&amp;#8217;s via git that all the real work takes place.  GitHub is all about giving you an off-site, web-access-able, complete version controlled historical record of your code that can be shared with others.
&lt;h2&gt;Back to Git within&amp;nbsp;Cygwin&lt;/h2&gt;
Now that we have established github and initialized, configured, and added files to the Cygwin environment  we can associated the &lt;span class="caps"&gt;PC&lt;/span&gt; and github environments.  It wasn&amp;#8217;t clear to me, from the git documentation, how to best do this association.  Using  &lt;code&gt;git clone&lt;/code&gt; isn&amp;#8217;t intuitive to me, but it seems to work.  This is how I did&amp;nbsp;it:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;git clone https://github.com/jeffskinnerbox/Cygwin-Configuration-Files.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Warning&lt;/span&gt; &amp;#8230;&lt;/em&gt; You may, as I did, get the following&amp;nbsp;error:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;Cloning into &amp;#39;Cygwin-Configuration-Files&amp;#39;...
error: error setting certificate verify locations:
CAfile: /usr/ssl/certs/ca-bundle.crt
CApath: none while accessing https://github.com/jeffskinnerbox/Cygwin-Configuration-Files.git/info/refs
fatal: HTTP request failed
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you get the above error, &lt;a href="http://codeforthesoul.blogspot.com/2012/09/git-error-about-missing-certificates-on.html"&gt;the problem&lt;/a&gt; is that Cygwin hasn&amp;#8217;t installed the ca-certificates package.  Run the &lt;a href="http://www.cygwin.com/install.html"&gt;Cygwin installer&lt;/a&gt; again, and add that package; after that &lt;code&gt;git clone&lt;/code&gt; should start&amp;nbsp;working.&lt;/p&gt;
&lt;p&gt;The next step is to commit your files to the git local repository within the &lt;span class="caps"&gt;PC&lt;/span&gt; under Cygwin.  To do this, execute the following command:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;git commit&lt;/code&gt;&lt;/p&gt;
You will be put into vim to provide a comment that will be posted with the git version.  Why vim?  Because you executed the command &lt;code&gt;git config --global core.editor vim&lt;/code&gt;  earlier.  If you don&amp;#8217;t want to use vim for adding comments under git, supply another editor when you do the configuration&amp;nbsp;step.&lt;/p&gt;
&lt;p&gt;The next step, which strictly isn&amp;#8217;t required but a nice to have, is to associate a descriptive identifier with the github repository.  The descriptor I used is &amp;#8220;Cygwin-Configuration-Files&amp;#8221;.  The command I used&amp;nbsp;is:&lt;/p&gt;
&lt;div class="codehilite" style="background: #f0f3f3"&gt;&lt;pre style="line-height: 125%"&gt;git remote add Cygwin-Configuration-Files https://github.com/jeffskinnerbox/Cygwin-Configuration-Files.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The final step is to push your local files to the github repository,
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;git push Cygwin-Configuration-Files&lt;/code&gt;&lt;/p&gt;
&lt;em&gt;Warning &amp;#8230; &lt;/em&gt; It was during the &lt;code&gt;git push&lt;/code&gt; that I ran into another problem, but it could happen nearly any time.  I discovered that sometimes, after multiple Cygwin updating or installing packages, you&amp;#8217;ll start to get strange errors related to &amp;#8220;fork()&amp;#8221; or .dll loading. After some research, I discoved these errors are usually solved by &lt;a href="http://cygwin.wikia.com/wiki/Rebaseall"&gt;rebasing your packages&lt;/a&gt;.  While rebasing, which is executed using the Cygwin &lt;code&gt;rebaseall&lt;/code&gt; command, is is a bit of a mystery, it does appear to work
&lt;h2&gt;Rebasing&amp;nbsp;Cygwin&lt;/h2&gt;
Before you can run the &lt;code&gt;&lt;a href="http://inamidst.com/eph/cygwin"&gt;rebaseall&lt;/a&gt;&lt;/code&gt; command, you&amp;#8217;ll need to make sure no Cygwin-based services are running.   To do this, you need to run two cygwin command, &lt;a href="http://cygwin.com/faq/faq.setup.html#faq.setup.uninstall-service"&gt;cygrunsrc&lt;/a&gt; and &lt;a href="http://superuser.com/questions/194529/cygwin-fatal-error-unable-to-remap-what-does-it-mean"&gt;rebaseall&lt;/a&gt;,  under the ash command in &lt;span class="caps"&gt;MS&lt;/span&gt; Windows command prompt, not in a Cygwin Terminal window.   The sequence of activity is as follows:
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Exit the Cygwin&amp;nbsp;Terminal&lt;/li&gt;
    &lt;li&gt;Run as administrator the &lt;span class="caps"&gt;MS&lt;/span&gt; Windows Command Prompt&amp;nbsp;window&lt;/li&gt;
    &lt;li&gt;Execute ash via &lt;code&gt;\cygwin\bin\ash.exe&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Now under ash, see if any Cygwin processes are running via &lt;code&gt;/usr/bin/cygrunsrc -L&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Stop any of the  running processes via &lt;code&gt;/usr/bin/cygrunsrc --stop &amp;lt;process's&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Now do the rebase via &lt;code&gt;/usr/bin/rebaseall&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;
For an example the steps above performed within the Command Prompt under ash, see&amp;nbsp;below:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/09/capture.jpg"&gt;&lt;img title="Window Capture of ash, cygrunsrv, rebaseall" alt="window capture" src="/images/ash-run-capture.jpg" width="545" height="275" /&gt;&lt;/a&gt;
&lt;/center&gt;
&lt;h2&gt;Git on the Raspberry&amp;nbsp;Pi&lt;/h2&gt;
Admittedly, getting git setup under &lt;span class="caps"&gt;MS&lt;/span&gt; Windows / Cygwin isn&amp;#8217;t a walk in the park.  It appears to work fine once set up, but the setup process can be&amp;nbsp;painful.&lt;/p&gt;
&lt;p&gt;Git under the Raspberry Pi&amp;#8217;s Linux installs flawlessly, as you would expect, given git origins.  First you  install git via &lt;code&gt;sudo apt-get install git&lt;/code&gt;.  Then, just as was done above, do the initialization of the git environment, configure some parameters,  add the files, setup the github, clone, and&amp;nbsp;push.&lt;/p&gt;
&lt;p&gt;In my case, I setup a separate  a github repository called &lt;code&gt;&lt;a href="https://github.com/jeffskinnerbox/RPI-Configuration-Files"&gt;RPI-Configuration-Files&lt;/a&gt;&lt;/code&gt; to store my RPi configuration files.  I could have used the same repository as was setup for the &lt;span class="caps"&gt;PC&lt;/span&gt; environment but that didn&amp;#8217;t make sense for my present needs.
&lt;h2&gt;Conclusion&lt;/h2&gt;
So that&amp;#8217;s it!  Its a long post for what is really a simple to use tool, but setting it up the first time could be&amp;nbsp;a challenge.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Fri, 28 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-28:posts/2012/Sep/28/setting-up-git-for-arduino-and-raspberry-pi development/</guid><category>Arduino</category><category>Raspberry Pi</category></item><item><title>Installing Packages into the Raspberry Pi's Linux</title><link>http://jeffskinnerbox.me/posts/2012/Sep/25/installing-packages-into-the-raspberry-pis-linux/</link><description>&lt;p&gt;Once I got the &lt;a href="http://www.raspberrypi.org/"&gt;RPi&lt;/a&gt; up and running &lt;a href="http://jeffskinnerbox.wordpress.com/2012/09/09/raspberry-pi-has-arrived/"&gt;headless&lt;/a&gt; on my local network, its time to build the software foundation that I&amp;#8217;ll need to make it an effective development environment.  These are the packages that I loaded to get myself up and running.
&lt;h2&gt;Do Your House Cleaning&amp;nbsp;First&lt;/h2&gt;
I&amp;#8217;m loading software via the Linux &lt;a href="http://en.wikipedia.org/wiki/Advanced_Packaging_Tool"&gt;&lt;code&gt;apt-get&lt;/code&gt;&lt;/a&gt; utility and you need to make sure its database is up to date. First thing to do is to update apt-get&amp;#8217;s local database with server&amp;#8217;s pkglist&amp;#8217;s files.  Then checks for outdated packages in the system and automatically upgrades them.  Execute the following&amp;nbsp;commands:&lt;/p&gt;
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get update
sudo apt-get upgrade&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Search for Package or Package&amp;nbsp;Description&lt;/h2&gt;

&lt;p&gt;Some times you don&amp;#8217;t know package name but aware of some keywords to search the package.  To search for packages, use the following:
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;apt-cache search "&lt;em&gt;text-to-search&lt;/em&gt;"
apt-cache search "&lt;em&gt;text-to-search&lt;/em&gt;" | grep "&lt;em&gt;more-search-text&lt;/em&gt;"&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Synaptic&lt;/h2&gt;

&lt;p&gt;Synaptic is a graphical package management program for Linux software. It provides the same features as the &lt;code&gt;apt-get&lt;/code&gt; command line utility with a X Windows &lt;span class="caps"&gt;GUI&lt;/span&gt; front-end.  While I will not be using X Windows at this moment, in the future I will and &lt;a href="http://en.wikipedia.org/wiki/Synaptic_(software)"&gt;&lt;code&gt;synaptic&lt;/code&gt;&lt;/a&gt; is a very nice alternative to apt-get when in in X Windows.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install synaptic&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Vim&lt;/h2&gt;

&lt;p&gt;Vim is a highly configurable text editor and widely available for many different platforms.  &lt;a href="http://en.wikipedia.org/wiki/Emacs"&gt;Emacs&lt;/a&gt; also has a large following, but I think everyone needs to be prepared to use &lt;a href="http://en.wikipedia.org/wiki/Vim_(text_editor)"&gt;&lt;code&gt;vim&lt;/code&gt;&lt;/a&gt; if your serious about Linux.  The RPi Linux distribution appears to have &lt;code&gt;vi&lt;/code&gt; loaded but &lt;code&gt;vim&lt;/code&gt; is a superior tool.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install vim
sudo apt-get install vim-gtk&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;PyRoom&lt;/h2&gt;

&lt;p&gt;PyRoom is a a fullscreen editor without buttons, widgets, formatting options, menus and with only the minimum of required dialog windows, it doesn&amp;#8217;t have any distractions and lets you focus on writing and only writing.  It is the polar opposite of Vim, and as such, is a good editor for the novice or casual user, but requires X Windows and Python.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install pyroom&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Git&lt;/h2&gt;

&lt;p&gt;Given that I plan to hack some&lt;em&gt; to-be-determined&lt;/em&gt; applications using the RPi, I should consider establish some tools for  source code management. The last time I did serious software development in Linux (really Unix), I was using Source Code Control System (&lt;span class="caps"&gt;SCCS&lt;/span&gt;). The tools are much improved now and &lt;a href="http://git-scm.com/documentation"&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; is hands down the way to go.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install git&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;Chromium&lt;/h2&gt;

&lt;p&gt;We all have a favorite browser and I choose &lt;a href="http://www.chromium.org/Home"&gt;&lt;code&gt;chromium&lt;/code&gt;&lt;/a&gt; for my RPi.  Chromium serves as a base for Google Chrome, which is Chromium re-branded (name and logo) with very few additions.
&lt;p style="padding-left:30px;"&gt;&lt;code&gt;sudo apt-get install chromium&lt;/code&gt;&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Tue, 25 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-25:posts/2012/Sep/25/installing-packages-into-the-raspberry-pis-linux/</guid><category>Raspberry Pi</category><category>Linux</category></item><item><title>Raspberry Pi Hardware</title><link>http://jeffskinnerbox.me/posts/2012/Sep/17/raspberry-pi-hardware/</link><description>&lt;p&gt;The Raspberry Pi is a small, barebones computer developed by The &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi Foundation&lt;/a&gt;, a &lt;span class="caps"&gt;UK&lt;/span&gt; nonprofit, with the intention of providing low-cost computers and free software to students. Their ultimate goal is to foster computer science education and they hope that this small, affordable computer will be a tool that enables&amp;nbsp;that.&lt;/p&gt;
&lt;p&gt;What has sparked my interest in the RPi is the fact that it a full functioning linux board, requires minimal peripheral to operate, engineered to support hardware hacking, and cost only &lt;mathjax&gt;$35 (only $&lt;/mathjax&gt;25 if your willing to drop the Ethernet port and reduce the&amp;nbsp;memory).&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m posting here some links to specs for the RPi hardware for latter reference:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Hardware"&gt;RPi&amp;nbsp;Hardware&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Hardware_Basic_Setup"&gt;RPi Hardware Basic&amp;nbsp;Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;p style="text-align:center;"&gt;&lt;a href="http://elinux.org/RPi_Hardware"&gt;&lt;img class="aligncenter" title="RPi component diagram" alt="RPi Hardware" src="/images/Raspi-Model-AB-Mono-2-699x1024.png" width="699" height="1024" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:center;"&gt;&lt;a href="http://www.raspberrypi-spy.co.uk/2012/09/raspberry-pi-revision-2-0-photos/"&gt;&lt;img class="aligncenter size-medium wp-image-86" title="raspberry-pi_model_b1" alt="RPi Photo" src="/images/raspberry-pi_model_b1.jpg" width="300" height="193" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
		? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js'
		: 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Mon, 17 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-17:posts/2012/Sep/17/raspberry-pi-hardware/</guid><category>Raspberry Pi</category></item><item><title>Arduino Electronic Design Automation</title><link>http://jeffskinnerbox.me/posts/2012/Sep/10/arduino-electronic-design-automation/</link><description>&lt;p&gt;Electronic design automation (&lt;span class="caps"&gt;EDA&lt;/span&gt; or &lt;span class="caps"&gt;ECAD&lt;/span&gt;) is a category of software tools for designing electronic systems such as printed circuit boards.  In my professional life, I have been work apart from this domain, and only now because of renewed interest in electronics, I have come back to do some research.  I was pleasantly amazed by what I found.
&lt;h2&gt;Schematic and &lt;span class="caps"&gt;PCB&lt;/span&gt; Layout&amp;nbsp;Editors&lt;/h2&gt;
&lt;span class="caps"&gt;EAGLE&lt;/span&gt; (Easily Applicable Graphical Layout Editor) is a very popular (and free) solution for &lt;span class="caps"&gt;PCB&lt;/span&gt; design, including Schematic Capture, Board Layout and Autorouter.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.cadsoftusa.com/"&gt;&lt;span class="caps"&gt;EAGLE&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://eagleup.wordpress.com/"&gt;eagleUP&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.instructables.com/id/Render-3D-images-of-your-PCBs-using-Eagle3D-and-PO/"&gt;Render 3D&amp;nbsp;images&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.ladyada.net/library/pcb/eaglelibrary.html"&gt;Lady Ada Eagle&amp;nbsp;library&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.opencircuits.com/SFE_Footprint_Library_Eagle"&gt;SparkFun Eagle&amp;nbsp;Library&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.designspark.com/"&gt;DesignSpark &lt;span class="caps"&gt;PCB&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Other tools are specifically focused on the Arduino that allows users to document their prototypes, share them with others, teach electronics in a classroom, and to create a &lt;span class="caps"&gt;PCB&lt;/span&gt; layout for professional manufacturing.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://fritzing.org/"&gt;Fritzing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Arduino Platform&amp;nbsp;Simulation&lt;/h2&gt;
&lt;ul&gt;
    &lt;li style="padding-left:30px;"&gt;&lt;a href="http://virtualbreadboard.net/"&gt;Arduino simulation and development&amp;nbsp;environment&lt;/a&gt;&lt;/li&gt;
    &lt;li style="padding-left:30px;"&gt;&lt;a href="http://www.buildinginternetofthings.com/2012/03/25/arduino-simulators/"&gt;Arduino&amp;nbsp;Simulators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span class="caps"&gt;PCB&lt;/span&gt; Board&amp;nbsp;Creation&lt;/h2&gt;
You can crate printed circuit board (&lt;span class="caps"&gt;PCB&lt;/span&gt;) with the aid of some web sites.  You submit your &lt;span class="caps"&gt;PCB&lt;/span&gt; design; they add your design to the batch of orders. When the batch is big enough, the batch is set off to be manufactured.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://batchpcb.com/index.php/Products"&gt;BatchPCB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span class="caps"&gt;SPICE&lt;/span&gt;&lt;/h2&gt;
&lt;span class="caps"&gt;SPICE&lt;/span&gt; (Simulation Program with Integrated Circuit Emphasis) is a general-purpose, open source analog electronic circuit simulator
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.linear.com/designtools/software/"&gt;LTspice &lt;span class="caps"&gt;IV&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://denethor.wlu.ca/ltspice/"&gt;LTspice&amp;nbsp;Tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://www.circuitlab.com/"&gt;CircutLAB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Mon, 10 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-10:posts/2012/Sep/10/arduino-electronic-design-automation/</guid><category>Arduino</category></item><item><title>Arduino Memory</title><link>http://jeffskinnerbox.me/posts/2012/Sep/10/arduino-memory/</link><description>&lt;p&gt;As I have been exploring the Arduino hardware platforms for my &lt;span class="caps"&gt;TBD&lt;/span&gt; project, I find myself forgetting the memory options available.  I&amp;#8217;m recording here my findings so I can reference it later.
&lt;center&gt;
&lt;table border="1" cellspacing="0" cellpadding="0"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Arduino&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Chip&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Flash&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;&lt;strong&gt;&lt;span class="caps"&gt;SRAM&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;&lt;strong&gt;&lt;span class="caps"&gt;EEPROM&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Nano&amp;nbsp;2.3&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega168&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;16K&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;1024&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;512&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Nano&amp;nbsp;3.0&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega328&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;32K&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;2048&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;1024&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Uno&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega328&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;32K&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;2048&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;1024&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top" width="115"&gt;
&lt;p align="center"&gt;&lt;strong&gt;Mega&amp;nbsp;2560&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="139"&gt;
&lt;p align="center"&gt;ATmega2560&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="126"&gt;
&lt;p align="center"&gt;256K&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="127"&gt;
&lt;p align="center"&gt;8192&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;td valign="top" width="133"&gt;
&lt;p align="center"&gt;4096&amp;nbsp;bytes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;/center&gt;
    &lt;li&gt;&lt;span class="caps"&gt;SRAM&lt;/span&gt; (Static Random Access Memory) is where the sketch creates and manipulates variables when it&amp;nbsp;runs.&lt;/li&gt;
    &lt;li&gt;&lt;span class="caps"&gt;EEPROM&lt;/span&gt; (Electrically Erasable Programmable Read-Only Memory) is memory space that programmers can use to store long-term&amp;nbsp;information.&lt;/li&gt;
    &lt;li&gt;Flash memory is where the Arduino sketch is stored (program space).  The bootloader takes about 2 &lt;span class="caps"&gt;KB&lt;/span&gt; of flash memory and remaining space is for the&amp;nbsp;sketch.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
The Arduino &lt;span class="caps"&gt;IDE&lt;/span&gt; will tell you exactly how much Flash is being used after each compile/upload.  &lt;span class="caps"&gt;EEPROM&lt;/span&gt; is an older, more reliable technology. It is somewhat slower than Flash.  In Flash, a large block is erased all at once, much faster than the &lt;span class="caps"&gt;EEPROM&lt;/span&gt; method of going&amp;nbsp;cell-by-cell.&lt;/p&gt;
&lt;p&gt;If you don&amp;#8217;t need to modify the strings or data while your sketch is running, you can store them in Flash (program) memory instead of &lt;span class="caps"&gt;SRAM&lt;/span&gt;; to do this, use the &lt;span class="caps"&gt;PROGMEM&lt;/span&gt;&amp;nbsp;keyword.&lt;/p&gt;
&lt;p&gt;Part of my interest in the Arduino&amp;#8217;s memory is my concern about how much memory a sketch uses.  Here are some sites that provide insight and algorithms for calculating the memory:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://jeelabs.org/2011/05/22/atmega-memory-use/"&gt;ATmega memory&amp;nbsp;use&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.nongnu.org/avr-libc/user-manual/malloc.html"&gt;Memory Areas and Using&amp;nbsp;malloc()&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://code.google.com/p/cec-arduino/source/browse/branches/anc/MemoryFree.c?r=15"&gt;MemoryFree.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Mon, 10 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-10:posts/2012/Sep/10/arduino-memory/</guid><category>Arduino</category></item><item><title>Raspberry Pi has Arrived</title><link>http://jeffskinnerbox.me/posts/2012/Sep/09/raspberry-pi-has-arrived/</link><description>&lt;p&gt;&lt;img title="raspberry pi image from adafruit" alt="Raspberry Pi" src="/images/raspberry-pi-image-from-adafruit.jpg" width="170" height="130" class="img-rounded floatLeft" style="margin: 0px 8px; float: left" /&gt;
On Friday, September 7th, my &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; arrived!  A $35 hackable Linux box &amp;#8230; not a bad deal!  I got it from &lt;a href="http://www.newark.com/"&gt;Newark/element14&lt;/a&gt;, one of the few place where you can order a Raspberry Pi and not wait for many&amp;nbsp;weeks.&lt;/p&gt;

&lt;p&gt;I immediately proceeded to set it up, and after over coming the typical barriers (e.g. my &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;#8217;s &lt;span class="caps"&gt;SD&lt;/span&gt; Card reader wouldn&amp;#8217;t cooperate), things came together very nicely.  Here is how I did&amp;nbsp;it.&lt;/p&gt;

&lt;h2&gt;What Raspberry Pi software distribution should I&amp;nbsp;use?&lt;/h2&gt;

&lt;p&gt;Given that my objectives are to do some hardware hacking using the Pi, I quickly concluded that the distribution being offered by &lt;a href="http://www.adafruit.com/"&gt;Adafruit&lt;/a&gt; was for me. Adafruit offers a distribution called &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/overview"&gt;Occidentalis&lt;/a&gt;.  Unlike the typical Raspberry Pi software distributions, it comes equipped with  access to &lt;span class="caps"&gt;SPI&lt;/span&gt;, &lt;span class="caps"&gt;I2C&lt;/span&gt;, one wire, and WiFi preconfigured. It also has some things to make overall use easier, such as sshd on start-up  and Bonjour (so you can simply do &lt;code&gt;ssh pi@raspberrypi.local&lt;/code&gt; from my &lt;span class="caps"&gt;PC&lt;/span&gt; when I place the Pi on my local network).  And it appears that Adafruit will continue to support and enhance the software as things evolve with the&amp;nbsp;Pi.&lt;/p&gt;

&lt;p&gt;I followed the &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-2"&gt;instructions&lt;/a&gt; given by Adafruit and had no problems.  I suggest when you do the first boot up, hook up the Pi with a monitor and keyboard to do the initial configuration.  Once that is accomplished, you can leverage the installed &lt;a href="http://www.linuxplanet.com/linuxplanet/reports/6826/1"&gt;Avahi&lt;/a&gt; (zeroconf or zero configuration networking) daemon (i.e. &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro/occidentalis-v0-dot-1#bonjour-support"&gt;Bonjour&lt;/a&gt;-like service), as I do&amp;nbsp;below.&lt;/p&gt;

&lt;h2&gt;How can I access the Raspberry Pi via my &lt;span class="caps"&gt;PC&lt;/span&gt; through my local&amp;nbsp;network?&lt;/h2&gt;

&lt;p&gt;I have seen this called &amp;#8220;running headless&amp;#8221;.  For me, this is the way to go.  The last thing I need is another monitor and keyboard to peck at.  Key to this will be getting a terminal emulator and a &lt;a href="http://en.wikipedia.org/wiki/X_terminal"&gt;X terminal&lt;/a&gt; running on my &lt;span class="caps"&gt;PC&lt;/span&gt;. I choose &lt;a href="http://x.cygwin.com/"&gt;Cygwin/X&lt;/a&gt; to get this job done. Cygwin/X comes with all the &lt;a href="http://cygwin.com/index.html"&gt;Cygwin&lt;/a&gt; utilities, but for me, that is a good&amp;nbsp;thing.&lt;/p&gt;

&lt;p&gt;On to your &lt;span class="caps"&gt;PC&lt;/span&gt;, download Cygwin/X and use the set-up procedures listed at the &lt;a href="http://x.cygwin.com/docs/ug/setup.html#setup-cygwin-x-installing"&gt;Setting Up Cygwin/X&lt;/a&gt; page.  During the &amp;#8220;Select Packages&amp;#8221; step (step 15), also make sure to include the &lt;a href="http://en.wikipedia.org/wiki/OpenSSH"&gt;openssh&lt;/a&gt; package.&lt;/p&gt;

&lt;h2&gt;How do you get shh working on the &lt;span class="caps"&gt;PC&lt;/span&gt;?&lt;/h2&gt;

&lt;p&gt;This proves to be very easy despite the potential complexities. Follow the procedures in &amp;#8220;&lt;a href="http://www.howtogeek.com/howto/41560/how-to-get-ssh-command-line-access-to-windows-7-using-cygwin/"&gt;How To Get &lt;span class="caps"&gt;SSH&lt;/span&gt; Command-Line Access to Windows 7 Using Cygwin&lt;/a&gt;&amp;#8220;.&lt;/p&gt;

&lt;h2&gt;How do you connect from the &lt;span class="caps"&gt;PC&lt;/span&gt; to the Raspberry&amp;nbsp;Pi?&lt;/h2&gt;

&lt;p&gt;Fire up Cygwin Terminal on your &lt;span class="caps"&gt;PC&lt;/span&gt;, and at the prompt,&amp;nbsp;enter&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;ssh pi@raspberrypi.local&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You&amp;#8217;ll then be asked for the password for the pi login, enter it, and your should be in the Raspberry Pi via terminal emulation. Note that this is all being done without the assistance of a &lt;a href="http://x.cygwin.com/docs/faq/cygwin-x-faq.html#q-what-is-x-server"&gt;X Server&lt;/a&gt; on the &lt;span class="caps"&gt;PC&lt;/span&gt;.  Your not running in X Windows &amp;#8230; that comes next (Make sure to exit the Pi and return back to the Cygwin Terminal for the next&amp;nbsp;step).&lt;/p&gt;

&lt;h2&gt;How do you run X Windows on the Raspberry Pi and use the &lt;span class="caps"&gt;PC&lt;/span&gt; as your X&amp;nbsp;Terminal?&lt;/h2&gt;

&lt;p&gt;If you want to run X Windows on the Raspberry Pi with your &lt;span class="caps"&gt;PC&lt;/span&gt; being the X Server display, you need to provide a Display Name and the start the X Server.  This is done within  following command in the Cygwin&amp;nbsp;Terminal:&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;export DISPLAY=:0.0&lt;br /&gt; startxwin &amp;amp;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you should start an X Terminal (Cygwin/X has a light weight version called &lt;a href="http://code.google.com/p/mintty/"&gt;mintty&lt;/a&gt;).  So type in the following into the Cygwin&amp;nbsp;Terminal.&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;mintty &amp;amp;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Within the mintty window, log into the Raspberry &lt;span class="caps"&gt;PI&lt;/span&gt;:&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;ssh -Y pi@raspberrypi.local&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;An once in the Raspberry Pi, startup the &lt;a href="http://en.wikipedia.org/wiki/LXDE"&gt;&lt;span class="caps"&gt;LXDE&lt;/span&gt; Desktop Client&lt;/a&gt; using the&amp;nbsp;command:&lt;/p&gt;

&lt;p style="padding-left:30px;"&gt;&lt;code&gt;startlxde&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should now be in the Pi running X Windows!  No need for an extra keyboard, mouse, or&amp;nbsp;monitor!&lt;/p&gt;

&lt;p&gt;Some &lt;a href="http://jeffskinnerbox.wordpress.com/2012/10/04/establishing-an-x-window-system-environment-for-my-pc-and-raspberry-pi/"&gt;fine tuning&lt;/a&gt; will be necessary so you don&amp;#8217;t have to do the &lt;code&gt;export DISPLAY=:0.0&lt;/code&gt; every time you login and other things, but that is all that what is needed to get&amp;nbsp;going.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 09 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-09:posts/2012/Sep/09/raspberry-pi-has-arrived/</guid><category>Raspberry Pi</category></item><item><title>Getting Started with the Raspberry Pi</title><link>http://jeffskinnerbox.me/posts/2012/Sep/08/getting-started-with-the-raspberry-pi/</link><description>&lt;p&gt;As I have been doing for the Arduino, I have been doing some research on the Raspberry Pi.  This post will help get you going.
&lt;h2&gt;What is a Raspberry&amp;nbsp;Pi?&lt;/h2&gt;
First things first - Just what is an Raspberry Pi?  Check out the following links for a brief introduction:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.extremetech.com/computing/124317-what-is-raspberry-pi-2"&gt;What is the Raspberry&amp;nbsp;Pi?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://media.podcasts.ox.ac.uk/oucs/openspires/raspberrypi_intro_09032012.mp4"&gt;Raspberry Pi: An&amp;nbsp;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Now let’s go a bit deeper to understand the Raspberry Pi hardware and capabilities:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.raspberrypi.org/faqs"&gt;Raspberry Pi&amp;nbsp;FAQs&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.bit-tech.net/hardware/pcs/2012/04/16/raspberry-pi-review/1"&gt;Raspberry Pi&amp;nbsp;review&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
One of the key things the Raspberry Pi team has pushed is that this is a tool for education.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=i14IEj646KM"&gt;Raspberry Pi for&amp;nbsp;Education&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://blogs.oucs.ox.ac.uk/openspires/2012/03/31/a-taste-of-raspberry-pi-for-open-education-week-at-oxford-university/"&gt;A taste of Raspberry Pi for Open Education Week at Oxford&amp;nbsp;University&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Raspberry Pi&amp;nbsp;Setup&lt;/h2&gt;
&lt;strong&gt;&lt;/strong&gt;To help with the setup of the Raspberry Pi Linux environment, consider the following:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="//www.techspot.com/review/527-raspberry-pi/"&gt;Raspberry Pi Review &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Initial How-To Setup&amp;nbsp;Guide&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://projects.drogon.net/raspberry-pi/initial-setup1/"&gt;Secure, Re-Partition &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;Swap&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://projects.drogon.net/raspberry-pi/initial-setup2/"&gt;More tweaks to save precious &lt;span class="caps"&gt;RAM&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elsmorian.com/post/23366148056/basic-raspberry-pi-setup"&gt;Basic Raspberry Pi&amp;nbsp;Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Some tutorials and other&amp;nbsp;things&lt;/h2&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.element14.com/community/docs/DOC-43015/l/raspberry-pi-training-videos"&gt;element14 Raspberry Pi Training&amp;nbsp;Videos&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.youtube.com/user/RaspberryPiTutorials/videos"&gt;YouTube Raspberry Pi&amp;nbsp;Tutorials&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Tutorials"&gt;RPi&amp;nbsp;Tutorials&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://elinux.org/RPi_Guides"&gt;RPi&amp;nbsp;Guides&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.sparkfun.com/tutorials/372"&gt;Raspberry Pi Arch Linux &lt;span class="caps"&gt;ARM&lt;/span&gt;&amp;nbsp;Tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.designspark.com/theme/raspberrypi"&gt;DesignSpark Raspberry Pi&amp;nbsp;Resources&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.thepiuser.co.uk/"&gt;The Pi&amp;nbsp;User&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.themagpi.com/"&gt;The&amp;nbsp;MagPi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;img class="aligncenter size-full wp-image-127" title="pi pic with comments" alt="pi picture with comments" src="/images/pi-pic-with-comments.jpg" width="545" height="335" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sat, 08 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-08:posts/2012/Sep/08/getting-started-with-the-raspberry-pi/</guid><category>Raspberry Pi</category></item><item><title>Arduino Software Tools</title><link>http://jeffskinnerbox.me/posts/2012/Sep/04/arduino-software-tools/</link><description>&lt;h2&gt;Arduino Specific Program&amp;nbsp;Languages&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://arduino.cc/en/Main/Software"&gt;
    &lt;img class="alignright size-thumbnail wp-image-45" style="margin: 0px 8px; float: left" title="Arduino IDE" alt="arduino IDE" src="/images/arduino-ide.jpg" width="150" height="143" /&gt;
&lt;/a&gt;
Wiring is an open source electronics prototyping platform composed of a programming language, an integrated development environment (&lt;span class="caps"&gt;IDE&lt;/span&gt;), and a single-board microcontroller.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://wiring.org.co/"&gt;Wiring&amp;nbsp;language&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/en/Main/Software"&gt;Arduino &lt;span class="caps"&gt;IDE&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.processing.org/"&gt;Processing&amp;nbsp;language&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.chipkin.com/using-eclipse-with-arduino-duemilanove/"&gt;Using Eclipse with Arduino&amp;nbsp;Duemilanove&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Using Microsoft Visual Studio 2010&amp;nbsp;Professional&lt;/h2&gt;
&lt;a href="http://www.visualmicro.com"&gt;
    &lt;img class="alignright size-medium wp-image-395" style="margin: 0px 8px; float: left" title="Arduino for Visual Studio Demo" alt="Visual Studio Demo" src="/images/arduino-for-visual-studio-demo.png" width="300" height="194" /&gt;
&lt;/a&gt;
The Arduino Playground web site provides some advice and instructions on Using Microsoft Visual Studio 10  and a plugin called Visual Micro to provide a full Arduino development platform.  For more information, check out:
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Code/VisualStudio"&gt;Visual Studio&amp;nbsp;Guide&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Code/VisualMicro"&gt;Alternative Arduino &lt;span class="caps"&gt;IDE&lt;/span&gt; Programming in Microsoft Visual&amp;nbsp;Studio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.arduinodev.com/arduino-with-visual-studio/"&gt;Visual Studio 2008/2010 and&amp;nbsp;Arduino?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;p&gt;To install the Microsoft Visual Studio 10, Visual Micro, and set it up for Arduino development, follow these steps:
&lt;ol&gt;
&lt;ol&gt;
    &lt;li&gt;Download and install Microsoft Visual Studio 2010 Professional (For a free copy of Visual Studio, check out &lt;a href="http://www.visualmicro.com/page/Offer-Visual-Studio-Professional-Free-For-3-Years.aspx"&gt;http://www.visualmicro.com/page/Offer-Visual-Studio-Professional-Free-For-3-Years.aspx&lt;/a&gt;).&lt;/li&gt;
    &lt;li&gt;Download and install Visual Micro from &lt;a href="http://www.visualmicro.com/"&gt;http://www.visualmicro.com/&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;The above reference has a series of links that will take you through setting-up and testing the installation, configuring it, etc.  All well worth&amp;nbsp;reviewing.&lt;/li&gt;
    &lt;li&gt;There are a few things you need to do that were not included in the above&amp;nbsp;reference:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;Make sure “Upload Using Programmer” is uncheck within Tool &amp;gt;&amp;nbsp;Arduino&lt;/li&gt;
    &lt;li&gt;To make sure you can “include” “.h” files within your source directory, add “$(ProjectDir)” in Properties &amp;gt; Configuration Properties &amp;gt; &lt;span class="caps"&gt;VC&lt;/span&gt;++ Directories &amp;gt; Include&amp;nbsp;Directories.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/ol&gt;
All of this is much easier than setting up and using Microsoft Visual C++ 2010 Express!
&lt;h2&gt;Atmel &lt;span class="caps"&gt;AVR&lt;/span&gt; Studio&amp;nbsp;5&lt;/h2&gt;
This is an Integrated Development Environment (&lt;span class="caps"&gt;IDE&lt;/span&gt;) for developing and debugging embedded Atmel &lt;span class="caps"&gt;AVR&lt;/span&gt; applications write, build, and debug using C/C++ and assembler code.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.atmel.com/microsite/avr_studio_5/"&gt;Atmel &lt;span class="caps"&gt;AVR&lt;/span&gt; Studio&amp;nbsp;5&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.engblaze.com/tutorial-using-avr-studio-5-with-arduino-projects/"&gt;Tutorial: Using &lt;span class="caps"&gt;AVR&lt;/span&gt; Studio 5 with Arduino&amp;nbsp;projects&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://automation.binarysage.net/?p=1493"&gt;Info: Arduino &lt;span class="caps"&gt;IDE&lt;/span&gt; or Atmel &lt;span class="caps"&gt;AVR&lt;/span&gt;&amp;nbsp;Studio&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.avrfreaks.net/index.php?name=PNphpBB2&amp;amp;file=viewtopic&amp;amp;p=884538"&gt;&lt;span class="caps"&gt;AVR&lt;/span&gt; Studio 5 support for&amp;nbsp;Arduino&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.normalexception.net/index.php/Projects/setting-up-avrstudio-for-arduino-development"&gt;&lt;span class="caps"&gt;AVR&lt;/span&gt; Studio 5 and&amp;nbsp;Arduino&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Processing and&amp;nbsp;Arduino&lt;/h2&gt;
Processing is an open source programming language and environment for people who want to create images, animations, and interactions. Arduino comes with some basic examples for communicating with Processing (in Examples &amp;gt; Communication). These are useful for when you want to write both Arduino and Processing programs and have them talk to each other.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://processing.org/learning/"&gt;Processing&amp;nbsp;Tutorals&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://luckylarry.co.uk/programming-tutorials/processing/"&gt;Lucky&amp;nbsp;Larry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Arduino and&amp;nbsp;openFrameworks&lt;/h2&gt;
On the surface, openFrameworks seems very similar to Processing. openFrameworks is much better at creating projects that use a lot of 3D Graphics, computer vision libraries like OpenCV or projects that involve the real-time manipulation of video. Also, while Processing requires a Java backend, openFrameworks is simply a set of C++ libraries, meaning that developers comfortable with C++ will be right at home.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.sparkfun.com/tutorials/318"&gt;What is&amp;nbsp;openFrameworks?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://wiki.openframeworks.cc/index.php?title=Main_Page"&gt;&lt;span class="caps"&gt;OF&lt;/span&gt;&amp;nbsp;wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;C and&amp;nbsp;Arduino&lt;/h2&gt;
The Arduino language is simply just a small refinement of C, in an effort to make the Arduino easier to code. Moving to C or C++ is very natural step up.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://www.wikihow.com/Write-Arduino-Software-in-C"&gt;How to Write Arduino Software in&amp;nbsp;C&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Interfacing/CPPWindows"&gt;Arduino and C++ (for&amp;nbsp;Windows)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://arduino.cc/playground/Code/VisualCPPExpress"&gt;Using Microsoft Visual C++ 2010 Express to write Arduino&amp;nbsp;Sketches/Libraries&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://pragprog.com/magazines/2011-04/advanced-arduino-hacking"&gt;What’s wrong with the Arduino &lt;span class="caps"&gt;IDE&lt;/span&gt;?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://bleaklow.com/2010/06/04/a_makefile_for_arduino_sketches.html"&gt;A Makefile for Arduino&amp;nbsp;Sketches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;h2&gt;Scratch for&amp;nbsp;Arduino&lt;/h2&gt;
Scratch is a programming language learning environment enabling beginners to get results without having to learn syntactically correct writing first.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://scratch.mit.edu/"&gt;Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://seaside.citilab.eu/scratch/arduino"&gt;Projecte&amp;nbsp;Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://cs.harvard.edu/malan/scratch/printer.php"&gt;Scratch for Budding Computer&amp;nbsp;Scientists&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://mentalarcade.com/visa/scratch.html"&gt;Exploring Programming with&amp;nbsp;Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.worcpublib.org/pdf/scratch/Scratch%20Reference%20Guide%20&amp;amp;%20Dictionary.pdf"&gt;Scratch Reference&amp;nbsp;Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Scratch is evolving into a more powerful platform.
&lt;ul&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://wiki.scratch.mit.edu/wiki/Scratch_2.0"&gt;Scratch&amp;nbsp;2.0&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.modk.it/"&gt;Modkit&amp;nbsp;Micro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Tue, 04 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-04:posts/2012/Sep/04/arduino-software-tools/</guid><category>Arduino</category></item><item><title>Getting Started with Arduino</title><link>http://jeffskinnerbox.me/posts/2012/Sep/04/getting-started-with-arduino/</link><description>&lt;p&gt;&lt;a href="http://www.arduino.cc/"&gt;&lt;img class="alignright size-medium wp-image-384" title="Ardunio Uno Board" alt="Ardino Uno Board" src="http://jeffskinnerbox.files.wordpress.com/2012/10/arduino-uno-board-on-an-angle.jpg?w=300" width="300" height="300" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;What is an&amp;nbsp;Arduino?&lt;/h2&gt;

&lt;p&gt;First things first - Just what is an Arduino? Check out the following links for a brief&amp;nbsp;introduction:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.wired.com/gadgetlab/2008/04/just-what-is-an/"&gt;Just What Is An Arduino, And Why Do you Want&amp;nbsp;One?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.pcworld.com/article/239454/geek_101_what_is_arduino.html"&gt;Geek 101: What Is&amp;nbsp;Arduino?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.ted.com/talks/massimo_banzi_how_arduino_is_open_sourcing_imagination.html"&gt;Massimo Banzi: How Arduino is open-sourcing imagination at TEDGlobal&amp;nbsp;2012&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://redux.com/stream/item/1909904/Arduino-The-Documentary-2010-English-HD"&gt;Arduino: The&amp;nbsp;Documentary&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;For a lighter look at the Arduino, check out the &lt;a href="http://arduino.cc/playground/uploads/Main/arduino_comic_v0004.pdf"&gt;comic book&lt;/a&gt; by Jody&amp;nbsp;Culkin.&lt;/p&gt;

&lt;p&gt;To go a bit deeper to understand the Arduino hardware variants and the Arduino’s Interactive Development Environment (&lt;span class="caps"&gt;IDE&lt;/span&gt;):&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Guide/Introduction"&gt;Ardunio as defined by the&amp;nbsp;source&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.howtogeek.com/65963/what-is-arduino/"&gt;What is Arduino? Learn About This Open-Source Electronics&amp;nbsp;Platform&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;Arduino also comes in &lt;a href="http://arduino.cc/hu/Main/Hardware"&gt;multiple hardware variations&lt;/a&gt; to support different types of&amp;nbsp;applications.&lt;/p&gt;

&lt;h2&gt;What you Need to&amp;nbsp;Purchase&lt;/h2&gt;

&lt;p&gt;For less than $100, Adafruit Industries offers an excellent starter package, &lt;a href="http://www.adafruit.com/products/170"&gt;Adafruit &lt;span class="caps"&gt;ARDX&lt;/span&gt;&lt;/a&gt;. This package not only includes an Arduino Uno but also all the electronic pieces needed to complete 11 different circuits, along with a experimenter&amp;#8217;s guide booklet &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; breadboard layout&amp;nbsp;sheets.&lt;/p&gt;

&lt;h2&gt;Installing the &lt;span class="caps"&gt;IDE&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;This is the program used to write code for the Arduino. Install the software for you operating system and type of Arduino. I’m assuming Vista and Arduino Uno&amp;nbsp;R3.&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.arduino.cc/en/Main/Software"&gt;Download the Arduino &lt;span class="caps"&gt;IED&lt;/span&gt;&amp;nbsp;Software&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Guide/Windows"&gt;How to connect your Arduino board to the computer (Windows &lt;span class="caps"&gt;PC&lt;/span&gt;) and upload your first&amp;nbsp;sketch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Note: Within Device Manager, you may have to go to Action &amp;gt; Add Legacy Hardware to see the Arduino and get the driver&amp;nbsp;installed.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;h2&gt;Start Your&amp;nbsp;Education&lt;/h2&gt;

&lt;p&gt;Using the experiments guide that comes with the Arduino kit, &lt;a href="http://www.oomlout.com/products/ARDX/ARDX-experimenters-guide-DD.pdf"&gt;Arduino Experimenter&amp;#8217;s Guide (&lt;span class="caps"&gt;ARDX&lt;/span&gt;)&lt;/a&gt;, and your off and running! Other sites to check out&amp;nbsp;include:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.oomlout.com/a/products/ardx/"&gt;&lt;span class="caps"&gt;ARDX&lt;/span&gt; Kit&amp;nbsp;Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.ladyada.net/learn/arduino/index.html"&gt;Ladyada&amp;#8217;s Arduino&amp;nbsp;Tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Tutorial/HomePage"&gt;Official Arduino Example&amp;nbsp;Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.instructables.com/tag/type-id/category-technology/channel-arduino/"&gt;Instructables&amp;#8217; Arduino&amp;nbsp;Section&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://makezine.com/arduino/"&gt;Make Magazine&amp;#8217;s Arduino&amp;nbsp;Section&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.adafruit.com/tutorials"&gt;Adafruit&amp;nbsp;Industries&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.sparkfun.com/tutorials"&gt;Sparkfun&amp;nbsp;Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://learn.sparkfun.com/curriculum"&gt;Education at SparkFun&amp;nbsp;Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.arduinotutorials.com"&gt;Arduino&amp;nbsp;Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://letsmakerobots.com/node/28278"&gt;Arduino 101: Timers and&amp;nbsp;Interrupts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://tronixstuff.wordpress.com/tutorials/"&gt;Arduino&amp;nbsp;Tutorials&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://guides.machinescience.org/course/view.php?id=29"&gt;Machine&amp;nbsp;Science&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl"&gt;Official&amp;nbsp;Forums&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;h2&gt;Purchasing Arduino Hardware and Supporting&amp;nbsp;Electronics&lt;/h2&gt;

&lt;p&gt;There are several online retail stores that sell the bits and pieces to make electronics projects possible. Some of the best&amp;nbsp;are:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.adafruit.com/category/17"&gt;Adafruit&amp;nbsp;Industries&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.sparkfun.com/"&gt;SparkFun&amp;nbsp;Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.parallax.com/"&gt;Parallax.com&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.makershed.com/category_s/211.htm"&gt;Maker&amp;nbsp;Shed&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.mouser.com/Arduino/"&gt;Mouser&amp;nbsp;Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.goldmine-elec.com/"&gt;Electronic&amp;nbsp;Goldmine&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.jameco.com"&gt;Jameco&amp;nbsp;Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.digikey.com/"&gt;Digi-Key&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.alliedelec.com/"&gt;Allied&amp;nbsp;Electronics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.radioshack.com/category/index.jsp?categoryId=2032058"&gt;Radio&amp;nbsp;Shack&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.hobbypartz.com/"&gt;Hobby&amp;nbsp;Partz&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.lynxmotion.com/default.aspx"&gt;Lynxmotion&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;Robotics is a popular topic for Arduino and these sites specialize in components and kits especially suited for&amp;nbsp;robots:&lt;/p&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.dfrobot.com/"&gt;&lt;span class="caps"&gt;DF&lt;/span&gt;&amp;nbsp;Robot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.machinescience.org/"&gt;Machine&amp;nbsp;Science&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.trossenrobotics.com/"&gt;Trossen&amp;nbsp;Robotics&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.robotshop.com/"&gt;RobotShop&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;There are many shields available for the Arduino to accommodate many needs and &lt;a href="http://shieldlist.org/"&gt;Arduino Shield List&lt;/a&gt; keeps a running list of&amp;nbsp;them.&lt;/p&gt;

&lt;h2&gt;Arduino&amp;nbsp;Knowledgebases&lt;/h2&gt;

&lt;ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://arduino.cc/en/Reference/HomePage"&gt;Arduino Language&amp;nbsp;Reference&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://dlnmh9ip6v2uc.cloudfront.net/learn/materials/8/Arduino_Cheat_Sheet.pdf"&gt;Arduino Cheat&amp;nbsp;Sheet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.freeduino.org/"&gt;The World Famous Index of Arduino &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Freeduino&amp;nbsp;Knowledge&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://dafd4a86-a-62cb3a1a-s-sites.googlegroups.com/site/mechatronicsguy/arduinocheatsheet/Arduino%20cheat%20sheet%20v02c.png?attachauth=ANoY7cqNlrBTz55OdAqyKZbGYz82HJDLeBlGIbR3oPAe6cBuQc2wNntvNZqgY-_InrvuseNhJa7aa645ZXlgk3fgL6t-obHAcE28IqUFGv3IH8tdOzyC0UYzgTkjoaorrYTiAGi7xTBDk3Niy_E5fGs3oy3nwWHXlR5eF8B1_q83SFxMrg0x9ivR8l8alqMkxpgyJauaLXkH6zfGiADUn_8KT5M-AB5_TSm6K9fPVVX8xgbI0kTBgJjVtIyOICdf28IoYnAL_iBx&amp;amp;attredirects=0"&gt;Arduino Cheat&amp;nbsp;Sheet&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://learn.sparkfun.com/resources/Handouts/ProtoSnap/ProtoSnap%20Handout.pdf"&gt;Basic Arduino Reference&amp;nbsp;Sheet&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://jeffskinnerbox.files.wordpress.com/2012/10/arduinouno_r3_pinouts.png"&gt;&lt;img class="aligncenter size-full wp-image-386" title="ArduinoUno_R3_Pinouts" alt="Arduino Pinout" src="http://jeffskinnerbox.files.wordpress.com/2012/10/arduinouno_r3_pinouts.png" width="545" height="419" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Tue, 04 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-04:posts/2012/Sep/04/getting-started-with-arduino/</guid><category>Arduino</category></item><item><title>My Test Post</title><link>http://jeffskinnerbox.me/posts/2012/Sep/02/my-test-post/</link><description>&lt;p&gt;Getting to know you, getting to know all about you &amp;#8230;. come on sing along with me!!
Getting to know you,&amp;nbsp;&amp;#8230;..&lt;/p&gt;
&lt;p&gt;&lt;img alt="Wolf Trap" src="http://jeffskinnerbox.me/images/wolf_trap.jpg" title="Wolf Trap, 1645 Trap Road Vienna, Virginia, 22182" /&gt;&lt;/p&gt;
&lt;p&gt;I went to &lt;a href="http://www.wolftrap.org/"&gt;Wolf Trap&lt;/a&gt; last night to see the King and&amp;nbsp;I.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Irland</dc:creator><pubDate>Sun, 02 Sep 2012 00:01:00 -0400</pubDate><guid>tag:jeffskinnerbox.me,2012-09-02:posts/2012/Sep/02/my-test-post/</guid></item></channel></rss>